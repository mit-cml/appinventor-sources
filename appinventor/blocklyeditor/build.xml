<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================
     Copyright 2012 Google Inc.  All Rights Reserved.
     Author: sharon@google.com (Sharon Perl)
     Copyright Â© 2012-2016 Massachusetts Institute of Technology. All Rights Reserved.
     Author: andrew.f.mckinney@gmail.com (Andrew F. McKinney)
     Author: jis@mit.edu (Jeffrey I. Schiller)
     Author: lizlooney@google.com (Liz Looney)
     Author: ewpatton@mit.edu (Evan W. Patton)

     Blockly-based blocks editor
     ====================================================================== -->

<project name="blocklyeditor" default="all" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<description>
    In-browser blocks editor for App Inventor based on Blockly
  </description>

  <property name="release" value="false"/>

  <condition property="blockly.config"
             value="ploverConfig.js"
             else="ploverConfig-dev.js">
    <equals arg1="${release}" arg2="true"/>
  </condition>
  <condition property="compilation_level"
	     value="SIMPLE" else="BUNDLE">
    <equals arg1="${release}" arg2="true"/>
  </condition>

  <target name="all"
          depends="BlocklyTranslationGenerator">
  </target>

  <target name="tests"
          depends="BlocklyTestbed, BlocklyeditorTests">
  </target>

	<!-- =====================================================================
       Import common directory, task, and target definitions.
       ===================================================================== -->

	<import file="../build-common.xml" />

	<!-- =====================================================================
       Define base package path.
       ===================================================================== -->
	<property name="blocklyeditor.pkg" value="com/google/appinventor/blocklyeditor" />

	<property name="local.lib.dir" location="lib" />
	<property name="run.dir" location="${local.build.dir}/run" />
	<property name="run.lib.dir" location="${run.dir}/lib" />

	<property name="blockly.src.dir" location="${lib.dir}/blockly" />
	<property name="blockly.plugin.dir" location="${lib.dir}/blockly-plugins" />
	<property name="i18n.src.dir" location="${src.dir}/msg" />
	<property name="ai.i18n.src.dir" location="${i18n.src.dir}/ai_blockly" />
	<property name="BlocklyTranslator-class.dir" location="${class.dir}/BlocklyTranslator-classes" />
	<property name="BlocklyTranslations.dir" location="${public.build.dir}/msg" />

	<property name="gwt.sdk" location="${lib.dir}/gwt/2.8.1-patched" />


  <!-- =====================================================================
       Targets
       ===================================================================== -->
  <target name="CheckBlocklyTranslations">
    <uptodate property="Blocklyi18n.uptodate">
      <srcfiles dir="${ai.i18n.src.dir}">
	<include name="*.json" />
      </srcfiles>
      <srcfiles dir="${blockly.src.dir}/msg/json">
	<include name="en.json" />
      </srcfiles>
      <srcfiles dir="${i18n.src.dir}">
	<include name="*.java"/>
      </srcfiles>
      <firstmatchmapper>
	<globmapper from="*.java" to="${BlocklyTranslator-class.dir}/msg/*.class"/>
	<globmapper from="en.json" to="${BlocklyTranslations.dir}/messages.js" />
	<globmapper from="*.json" to="${BlocklyTranslations.dir}/*.js" />
      </firstmatchmapper>
    </uptodate>
  </target>

  <target name="BlocklyTranslationGenerator"
	  description="This is the script for creating combined i18n files from blockly and app inventor"
	  depends="CheckBlocklyTranslations,BlocklyCompile"
	  unless="Blocklyi18n.uptodate">
    <mkdir dir="${BlocklyTranslator-class.dir}" />
    <mkdir dir="${BlocklyTranslations.dir}" />
    <ai.javac destdir="${BlocklyTranslator-class.dir}">
      <include name="msg/BlocklyTranslationGenerator.java" />
      <classpath>
	<pathelement location="${gwt.sdk}/gwt-dev.jar"/>
	<pathelement location="${lib.dir}/json/json.jar" />
      </classpath>
    </ai.javac>
    <java failonerror="true" classname="msg.BlocklyTranslationGenerator" fork="true">
      <jvmarg value="-Dfile.encoding=UTF-8"/>
      <arg value="${ai.i18n.src.dir}"/>
      <arg value="${lib.dir}/blockly/msg/json"/>
      <arg value="${BlocklyTranslations.dir}"/>
      <arg value="${release}" />
      <classpath>
	<pathelement location="${BlocklyTranslator-class.dir}"/>
	<pathelement location="${gwt.sdk}/gwt-dev.jar"/>
	<pathelement location="${lib.dir}/json/json.jar" />
      </classpath>
    </java>
  </target>

  <target name="CheckBlocklyCompile">
    <uptodate property="BlocklyCompile.uptodate" targetfile="${public.build.dir}/blockly-all.js">
      <srcfiles dir="src/" includes="**/*.js" />
      <srcfiles dir="${blockly.src.dir}/" includes="*.js" />
      <srcfiles dir="${blockly.plugin.dir}/" includes="*.js" />
      <srcfiles dir="${lib.dir}/closure-library/" includes="closure/goog/**/*.js" />
      <srcfiles dir="${basedir}" includes="${blockly.config}" />
    </uptodate>
  </target>

	<target name="BlocklyCompile"
                description="For now, compiling the Blockly editor means cat-ing its javascript together with the relevant javascript in the Blockly library"
                depends="init,CheckBlocklyCompile"
                unless="BlocklyCompile.uptodate">
		<java failonerror="true" fork="true" jar="${lib.dir}/closure-compiler/closure-compiler-v20211201.jar">
			<arg line="--compilation_level ${compilation_level}"/>
			<arg line="--language_in ECMASCRIPT_NEXT"/>
			<arg line="--language_out ECMASCRIPT_NEXT"/>
			<arg line="--js_output_file ${public.build.dir}/blockly-all.js"/>
			<arg line="${blockly.src.dir}/blockly_compressed.js"/>
			<arg line="${blockly.plugin.dir}/block-lexical-variables-core-2.0.6.min.js"/>
			<arg line="src/blocks/utilities.js"/>
			<arg line="src/mixins/dynamic_connections.js"/>
			<arg line="src/mixins/mixins.js"/>
			<arg line="src/**.js"/>
			<arg line="${lib.dir}/closure-library/closure/goog/**.js"/>
			<arg line="!${lib.dir}/closure-library/closure/goog/**_test.js"/>
			<arg line="!${lib.dir}/closure-library/closure/goog/testing/**.js"/>
			<arg line="!${lib.dir}/closure-library/closure/goog/**tests.js"/>
			<arg line="!${lib.dir}/closure-library/closure/goog/**_perf.js"/>
			<arg line="--entry_point=goog:AI.Blockly.BlocklyEditor"/>
			<arg line="--charset UTF-8"/>
			<arg line="--create_source_map ${public.build.dir}/blockly-all.js.map"/>
			<arg line="--source_map_location_mapping src|/ode/static/js"/>
			<arg line="--source_map_input ${blockly.src.dir}/blockly_compressed.js|${blockly.src.dir}/blockly_compressed.js.map"/>
			<arg line="--output_wrapper='%output%&#10;//# sourceMappingURL=/static/js/blockly-all.js.map'" if:true="${release}"/>
			<arg line="--dependency_mode=PRUNE_LEGACY"/>
		</java>
	</target>

	<!-- =====================================================================
       BlocklyeditorTests: build and run the Blocklyeditor tests and
       generate the output results
       ===================================================================== -->

	<target name="BlocklyTestbed"
		      description="Testbed for blockly code generation. To use this, open blocklyeditor/src/demos/yail/index.html (using a file:/// url) in a browser"
		      depends="components_AndroidRuntime, common_CommonTestUtils">
		<mkdir dir="${run.lib.dir}" />

		<echo message="var componentTypeJson = " file="${public.build.dir}/component-types.js" />
		<concat destfile="${public.build.dir}/component-types.js" append="true">
			<fileset file="${build.dir}/components/simple_components.json" />
		</concat>
		<mkdir dir="${public.build.dir}/media" />
		<copy todir="${public.build.dir}/media">
			<fileset dir="${blockly.src.dir}/media" />
		</copy>
	</target>

	<path id="libsForBlocklyeditorTests.path">
		<fileset dir="${run.lib.dir}" includes="*.jar" />
		<pathelement location="${build.dir}/common/CommonTestUtils.jar" />
                <pathelement location="${build.dir}/components/CommonConstants.jar" />
		<pathelement location="${lib.dir}/junit/junit-4.13.2.jar" />
		<pathelement location="${lib.dir}/commons-io/commons-io-2.0.1.jar" />
	</path>

	<path id="BlocklyeditorTests.path">
		<path refid="libsForBlocklyeditorTests.path" />
		<pathelement location="${local.build.dir}/BlocklyeditorTests.jar" />
	</path>

	<target name="BlocklyeditorTests"
		      description="Blocklyeditor: build and run the test suite"
		      depends="BlocklyCompile, BlocklyTestbed" >
		<sequential>
			<mkdir dir="${class.dir}/BlocklyeditorTests" />
			<ai.javac srcdir="${tests.dir}" destdir="${class.dir}/BlocklyeditorTests">
				<classpath>
					<path refid="BlocklyeditorTests.path" />
				</classpath>
				<include name="**/BlocklyEvalTestBuilder.java" />
			</ai.javac>
			<jar destfile="${run.lib.dir}/BlocklyeditorTests.jar">
				<fileset dir="${class.dir}/BlocklyeditorTests">
					<include name="**/*.class" />
				</fileset>
			</jar>
			<mkdir dir="${local.build.dir}/javascript" />
			<java classname="com.google.appinventor.blocklyeditor.BlocklyEvalTestBuilder" fork="true">
				<classpath>
					<path refid="BlocklyeditorTests.path" />
				</classpath>
				<jvmarg value="-Dfile.encoding=UTF-8"/>
				<jvmarg value="-Djava.awt.headless=true"/>
			</java>
			<exec executable="node_modules/.bin/karma" dir="${appinventor.dir}" failonerror="true">
				<arg value="start"/>
				<arg value="--single-run"/>
			</exec>
		</sequential>
	</target>
</project>
