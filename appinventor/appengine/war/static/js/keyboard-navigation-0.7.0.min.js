/*! For license information please see index.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("blockly/core"));else if("function"==typeof define&&define.amd)define(["blockly/core"],t);else{var o="object"==typeof exports?t(require("blockly/core")):t(e.Blockly);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,(e=>(()=>{"use strict";var t={370:t=>{t.exports=e}},o={};function r(e){var s=o[e];if(void 0!==s)return s.exports;var i=o[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};r.r(s),r.d(s,{Constants:()=>i,FlyoutCursor:()=>l,FlyoutCursorPluginInfo:()=>y,LineCursor:()=>h,LineCursorPluginInfo:()=>S,Navigation:()=>k,NavigationController:()=>N});var i={};r.r(i),r.d(i,{LOGGING_MSG_TYPE:()=>a,SHORTCUT_NAMES:()=>c,STATE:()=>n});const n={WORKSPACE:"workspace",FLYOUT:"flyout",TOOLBOX:"toolbox"},c={PREVIOUS:"previous",NEXT:"next",IN:"in",OUT:"out",INSERT:"insert",MARK:"mark",DISCONNECT:"disconnect",TOOLBOX:"toolbox",EXIT:"exit",TOGGLE_KEYBOARD_NAV:"toggle_keyboard_nav",COPY:"keyboard_nav_copy",CUT:"keyboard_nav_cut",PASTE:"keyboard_nav_paste",DELETE:"keyboard_nav_delete",MOVE_WS_CURSOR_UP:"workspace_up",MOVE_WS_CURSOR_DOWN:"workspace_down",MOVE_WS_CURSOR_LEFT:"workspace_left",MOVE_WS_CURSOR_RIGHT:"workspace_right"},a={ERROR:"error",WARN:"warn",LOG:"log"};var u=r(370);class l extends u.Cursor{constructor(){super()}next(){const e=this.getCurNode();if(!e)return null;const t=e.next();return t&&this.setCurNode(t),t}in(){return null}prev(){const e=this.getCurNode();if(!e)return null;const t=e.prev();return t&&this.setCurNode(t),t}out(){return null}}const g=u.registry.Type.CURSOR,d="FlyoutCursor";u.registry.register(g,d,l);const y={[g]:d};class h extends u.BasicCursor{constructor(){super()}next(){const e=this.getCurNode();if(!e)return null;let t=this.getNextNode_(e,this.validLineNode);return t&&(t.getType()==u.ASTNode.types.INPUT||t.getType()==u.ASTNode.types.NEXT)&&t.getLocation().targetBlock()&&(t=this.getNextNode_(t,this.validLineNode)),t&&this.setCurNode(t),t}in(){const e=this.getCurNode();if(!e)return null;const t=this.getNextNode_(e,this.validInLineNode);return t&&this.setCurNode(t),t}prev(){const e=this.getCurNode();if(!e)return null;let t=this.getPreviousNode_(e,this.validLineNode);return t&&(t.getType()==u.ASTNode.types.INPUT||t.getType()==u.ASTNode.types.NEXT)&&t.getLocation().targetBlock()&&(t=this.getPreviousNode_(t,this.validLineNode)),t&&this.setCurNode(t),t}out(){const e=this.getCurNode();if(!e)return null;const t=this.getPreviousNode_(e,this.validInLineNode);return t&&this.setCurNode(t),t}validLineNode(e){if(!e)return!1;let t=!1;const o=e.getLocation(),r=e&&e.getType();return r==u.ASTNode.types.BLOCK?null===o.outputConnection&&(t=!0):(r==u.ASTNode.types.INPUT&&o.type==u.NEXT_STATEMENT||r==u.ASTNode.types.NEXT)&&(t=!0),t}validInLineNode(e){if(!e)return!1;let t=!1;const o=e.getLocation(),r=e&&e.getType();return(r==u.ASTNode.types.FIELD||r==u.ASTNode.types.INPUT&&o.type==u.INPUT_VALUE)&&(t=!0),t}}const C="LineCursor",p=u.registry.Type.CURSOR;u.registry.register(p,C,h);const S={[p]:C};class k{constructor(){this.workspaceStates={},this.loggingCallback=null,this.WS_MOVE_DISTANCE=40,this.MARKER_NAME="local_marker_1",this.DEFAULT_WS_COORDINATE=new u.utils.Coordinate(100,100),this.WS_COORDINATE_ON_DELETE=new u.utils.Coordinate(100,100),this.wsChangeWrapper=this.workspaceChangeListener.bind(this),this.flyoutChangeWrapper=this.flyoutChangeListener.bind(this),this.workspaces=[]}addWorkspace(e){this.workspaces.push(e);const t=e.getFlyout();e.getMarkerManager().registerMarker(this.MARKER_NAME,new u.Marker),e.addChangeListener(this.wsChangeWrapper),t&&this.addFlyout(t)}removeWorkspace(e){const t=this.workspaces.indexOf(e),o=e.getFlyout();e.getCursor()&&this.disableKeyboardAccessibility(e),t>-1&&this.workspaces.splice(t,1),e.getMarkerManager()&&e.getMarkerManager().unregisterMarker(this.MARKER_NAME),e.removeChangeListener(this.wsChangeWrapper),o&&this.removeFlyout(o)}setState(e,t){this.workspaceStates[e.id]=t}getState(e){return this.workspaceStates[e.id]}getMarker(e){return e.getMarker(this.MARKER_NAME)}addFlyout(e){const t=e.getWorkspace();t.addChangeListener(this.flyoutChangeWrapper);const o=u.registry.getClass(g,d);t.getMarkerManager().setCursor(new o)}removeFlyout(e){e.getWorkspace().removeChangeListener(this.flyoutChangeWrapper)}workspaceChangeListener(e){const t=u.Workspace.getById(e.workspaceId);if(t&&t.keyboardAccessibilityMode)switch(e.type){case u.Events.DELETE:this.handleBlockDeleteByDrag(t,e);break;case u.Events.BLOCK_CHANGE:"mutation"===e.element&&this.handleBlockMutation(t,e);break;case u.Events.CLICK:this.handleWorkspaceClick(t,e);break;case u.Events.TOOLBOX_ITEM_SELECT:this.handleToolboxCategoryClick(t,e);break;case u.Events.BLOCK_CREATE:this.handleBlockCreate(t,e)}}flyoutChangeListener(e){const t=u.Workspace.getById(e.workspaceId),o=t.targetWorkspace,r=o.getFlyout();if(o&&o.keyboardAccessibilityMode&&!r.autoClose)if(e.type===u.Events.CLICK&&"block"===e.targetType){const r=t.getBlockById(e.blockId);this.handleBlockClickInFlyout(o,r)}else if(e.type===u.Events.SELECTED){const r=t.getBlockById(e.newElementId);this.handleBlockClickInFlyout(o,r)}}handleBlockCreate(e,t){this.getState(e)===n.FLYOUT&&(this.resetFlyout(e,!!e.getToolbox()),this.setState(e,n.WORKSPACE))}handleBlockMutation(e,t){const o=t.blockId,r=e.getCursor();if(r){const e=r.getCurNode(),t=e?e.getSourceBlock():null;t&&t.id===o&&r.setCurNode(u.ASTNode.createBlockNode(t))}}handleWorkspaceClick(e,t){this.getState(e)!==n.WORKSPACE&&(this.resetFlyout(e,!!e.getToolbox()),this.setState(e,n.WORKSPACE))}handleToolboxCategoryClick(e,t){const o=this.getState(e);t.newItem&&o!==n.TOOLBOX?this.focusToolbox(e):t.newItem||(this.resetFlyout(e,!!e.getToolbox()),this.setState(e,n.WORKSPACE))}handleBlockDeleteByDrag(e,t){const o=t.blockId,r=t.ids,s=e.getCursor();if(!s||!s.getCurNode()||!s.getCurNode().getSourceBlock())return;const i=s.getCurNode().getSourceBlock();(i.id===o||r.indexOf(i.id)>-1)&&s.setCurNode(u.ASTNode.createWorkspaceNode(e,this.WS_COORDINATE_ON_DELETE))}handleBlockClickInFlyout(e,t){t&&(t.isShadow()&&(t=t.getParent()),this.getFlyoutCursor(e).setCurNode(u.ASTNode.createStackNode(t)),this.setState(e,n.FLYOUT))}moveCursorOnBlockDelete(e,t){if(!e||!e.getCursor())return;const o=e.getCursor(),r=o.getCurNode(),s=r?r.getSourceBlock():null;if(s===t)if(s.getParent()){const e=s.previousConnection||s.outputConnection;e&&o.setCurNode(u.ASTNode.createConnectionNode(e.targetConnection))}else o.setCurNode(u.ASTNode.createWorkspaceNode(s.workspace,s.getRelativeToSurfaceXY()));else s&&t.getChildren(!1).indexOf(s)>-1&&o.setCurNode(u.ASTNode.createWorkspaceNode(s.workspace,s.getRelativeToSurfaceXY()))}focusToolbox(e){const t=e.getToolbox();if(t&&(this.setState(e,n.TOOLBOX),this.resetFlyout(e,!1),this.getMarker(e).getCurNode()||this.markAtCursor(e),!t.getSelectedItem())){const e=t.getToolboxItems();for(let o,r=0;o=e[r];r++)if(o.isSelectable()){t.selectItemByPosition(r);break}}}focusFlyout(e){const t=e.getFlyout();if(this.setState(e,n.FLYOUT),this.getMarker(e).getCurNode()||this.markAtCursor(e),t&&t.getWorkspace()){const o=t.getContents()[0];if(!o)return;if(o.button){const t=u.ASTNode.createButtonNode(o.button);this.getFlyoutCursor(e).setCurNode(t)}else if(o.block){const t=u.ASTNode.createStackNode(o.block);this.getFlyoutCursor(e).setCurNode(t)}}}focusWorkspace(e){e.hideChaff();const t=!!e.getToolbox();this.resetFlyout(e,t),this.setState(e,n.WORKSPACE),this.setCursorOnWorkspaceFocus(e)}setCursorOnWorkspaceFocus(e){const t=e.getTopBlocks(!0),o=e.getCursor(),r=new u.utils.Coordinate(this.DEFAULT_WS_COORDINATE.x/e.scale,this.DEFAULT_WS_COORDINATE.y/e.scale);if(t.length>0)o.setCurNode(u.ASTNode.createTopNode(t[0]));else{const t=u.ASTNode.createWorkspaceNode(e,r);o.setCurNode(t)}}getFlyoutCursor(e){const t=e.getFlyout();return t?t.getWorkspace().getCursor():null}insertFromFlyout(e){const t=this.createNewBlock(e);if(!t)return;const o=this.getMarker(e).getCurNode();this.tryToConnectMarkerAndCursor(e,o,u.ASTNode.createBlockNode(t))||this.warn("Something went wrong while inserting a block from the flyout."),this.focusWorkspace(e),e.getCursor().setCurNode(u.ASTNode.createTopNode(t)),this.removeMark(e)}createNewBlock(e){const t=e.getFlyout();if(!t||!t.isVisible())return this.warn("Trying to insert from the flyout when the flyout does not  exist or is not visible"),null;const o=this.getFlyoutCursor(e).getCurNode().getLocation();if(!o.isEnabled())return this.warn("Can't insert a disabled block."),null;const r=t.createBlock(o);return r.render(),r.setConnectionTracking(!0),r}resetFlyout(e,t){this.getFlyoutCursor(e)&&(this.getFlyoutCursor(e).hide(),t&&e.getFlyout().hide())}connectMarkerAndCursor(e){const t=this.getMarker(e).getCurNode(),o=e.getCursor().getCurNode();return!(!t||!o)&&this.tryToConnectMarkerAndCursor(e,t,o)}tryToConnectMarkerAndCursor(e,t,o){if(!this.logConnectionWarning(t,o))return!1;const r=t.getType(),s=o.getType(),i=o.getLocation(),n=t.getLocation();if(t.isConnection()&&o.isConnection()){const e=i,t=n;return this.connect(e,t)}if(t.isConnection()&&(s==u.ASTNode.types.BLOCK||s==u.ASTNode.types.STACK)){const e=i,t=n;return this.insertBlock(e,t)}if(r==u.ASTNode.types.WORKSPACE){const e=o?o.getSourceBlock():null;return this.moveBlockToWorkspace(e,t)}return this.warn("Unexpected state in tryToConnectMarkerAndCursor."),!1}logConnectionWarning(e,t){if(!e)return this.warn("Cannot insert with no marked node."),!1;if(!t)return this.warn("Cannot insert with no cursor node."),!1;const o=e.getType(),r=t.getType();return o==u.ASTNode.types.FIELD?(this.warn("Should not have been able to mark a field."),!1):o==u.ASTNode.types.BLOCK?(this.warn("Should not have been able to mark a block."),!1):o==u.ASTNode.types.STACK?(this.warn("Should not have been able to mark a stack."),!1):r==u.ASTNode.types.FIELD?(this.warn("Cannot attach a field to anything else."),!1):r!=u.ASTNode.types.WORKSPACE||(this.warn("Cannot attach a workspace to anything else."),!1)}moveBlockToWorkspace(e,t){return!!e&&(e.isShadow()?(this.warn("Cannot move a shadow block to the workspace."),!1):(e.getParent()&&e.unplug(!1),e.moveTo(t.getWsCoordinate()),!0))}disconnectChild(e,t){const o=e.getSourceBlock(),r=t.getSourceBlock();let s;o.getRootBlock()===r.getRootBlock()&&(o.getDescendants(!1).indexOf(r)>-1?(s=this.getInferiorConnection(t),s&&s.disconnect()):(s=this.getInferiorConnection(e),s&&s.disconnect()))}connect(e,t){if(!e||!t)return!1;const o=this.getInferiorConnection(e),r=this.getSuperiorConnection(t),s=this.getSuperiorConnection(e),i=this.getInferiorConnection(t);if(o&&r&&this.moveAndConnect(o,r))return!0;if(s&&i&&this.moveAndConnect(s,i))return!0;if(this.moveAndConnect(e,t))return!0;{const o=e.getConnectionChecker(),r=o.canConnectWithReason(e,t,!1);return this.warn("Connection failed with error: "+o.getErrorMessage(r,e,t)),!1}}getInferiorConnection(e){const t=e.getSourceBlock();return e.isSuperior()?t.previousConnection?t.previousConnection:t.outputConnection?t.outputConnection:null:e}getSuperiorConnection(e){return e.isSuperior()?e:e.targetConnection?e.targetConnection:null}moveAndConnect(e,t){if(!e||!t)return!1;const o=e.getSourceBlock();if(e.getConnectionChecker().canConnect(e,t,!1)&&!t.getSourceBlock().isShadow()){if(this.disconnectChild(e,t),!t.isSuperior()){const r=o.getRootBlock(),s={x:t.x-e.x,y:t.y-e.y},i=e.getOffsetInBlock().clone();r.positionNearConnection(e,s,i)}return t.connect(e),!0}return!1}insertBlock(e,t){switch(t.type){case u.PREVIOUS_STATEMENT:if(this.connect(e.nextConnection,t))return!0;break;case u.NEXT_STATEMENT:if(this.connect(e.previousConnection,t))return!0;break;case u.INPUT_VALUE:if(this.connect(e.outputConnection,t))return!0;break;case u.OUTPUT_VALUE:for(let o=0;o<e.inputList.length;o++){const r=e.inputList[o].connection;if(r&&r.type===u.INPUT_VALUE&&this.connect(r,t))return!0}if(e.outputConnection&&this.connect(e.outputConnection,t))return!0}return this.warn("This block can not be inserted at the marked location."),!1}disconnectBlocks(e){const t=e.getCursor().getCurNode();if(!t.isConnection())return void this.log("Cannot disconnect blocks when the cursor is not on a connection");const o=t.getLocation();if(!o.isConnected())return void this.log("Cannot disconnect unconnected connection");const r=o.isSuperior()?o:o.targetConnection,s=o.isSuperior()?o.targetConnection:o;if(s.getSourceBlock().isShadow())return void this.log("Cannot disconnect a shadow block");r.disconnect(),s.bumpAwayFrom(r),r.getSourceBlock().getRootBlock().bringToFront();const i=u.ASTNode.createConnectionNode(r);e.getCursor().setCurNode(i)}markAtCursor(e){this.getMarker(e).setCurNode(e.getCursor().getCurNode())}removeMark(e){const t=this.getMarker(e);t.setCurNode(null),t.hide()}enableKeyboardAccessibility(e){this.workspaces.indexOf(e)>-1&&!e.keyboardAccessibilityMode&&(e.keyboardAccessibilityMode=!0,this.focusWorkspace(e))}disableKeyboardAccessibility(e){this.workspaces.indexOf(e)>-1&&e.keyboardAccessibilityMode&&(e.keyboardAccessibilityMode=!1,e.getCursor().hide(),this.getMarker(e).hide(),this.getFlyoutCursor(e)&&this.getFlyoutCursor(e).hide())}log(e){this.loggingCallback?this.loggingCallback(a.LOG,e):console.log(e)}warn(e){this.loggingCallback?this.loggingCallback(a.WARN,e):console.warn(e)}error(e){this.loggingCallback?this.loggingCallback(a.ERROR,e):console.error(e)}moveWSCursor(e,t,o){const r=e.getCursor(),s=e.getCursor().getCurNode();if(s.getType()!==u.ASTNode.types.WORKSPACE)return!1;const i=s.getWsCoordinate(),n=t*this.WS_MOVE_DISTANCE+i.x,c=o*this.WS_MOVE_DISTANCE+i.y;return r.setCurNode(u.ASTNode.createWorkspaceNode(e,new u.utils.Coordinate(n,c))),!0}handleEnterForWS(e){const t=e.getCursor().getCurNode(),o=t.getType();o==u.ASTNode.types.FIELD?t.getLocation().showEditor():t.isConnection()||o==u.ASTNode.types.WORKSPACE?this.markAtCursor(e):o==u.ASTNode.types.BLOCK?this.warn("Cannot mark a block."):o==u.ASTNode.types.STACK&&this.warn("Cannot mark a stack.")}paste(e,t){let o=!1;u.Events.setGroup(!0);const r=u.clipboard.paste(e,t);return r&&(o=this.insertPastedBlock(t,r)),u.Events.setGroup(!1),o}insertPastedBlock(e,t){let o=!1;const r=e.getMarker(this.MARKER_NAME).getCurNode();return r&&(o=this.tryToConnectMarkerAndCursor(e,r,u.ASTNode.createBlockNode(t))),o}triggerButtonCallback(e){const t=this.getFlyoutCursor(e).getCurNode().getLocation(),o=e.flyoutButtonCallbacks.get(t.callbackKey);if("function"!=typeof o)throw new Error("No callback function found for flyout button.");o(t)}dispose(){for(const e of this.workspaces)this.removeWorkspace(e)}}const T=u.Gesture.prototype.doWorkspaceClick_;u.Gesture.prototype.doWorkspaceClick_=function(e){T.call(this,e);const t=this.creatorWorkspace_;if(e.shiftKey&&t.keyboardAccessibilityMode){const o=new u.utils.Coordinate(e.clientX,e.clientY),r=u.utils.svgMath.screenToWsCoordinates(t,o),s=u.ASTNode.createWorkspaceNode(t,r);t.getCursor().setCurNode(s)}};const b=u.Gesture.prototype.doBlockClick_;u.Gesture.prototype.doBlockClick_=function(e){b.call(this,e),!this.targetBlock_.isInFlyout&&this.mostRecentEvent_.shiftKey&&this.targetBlock_.workspace.keyboardAccessibilityMode&&this.creatorWorkspace_.getCursor().setCurNode(u.ASTNode.createTopNode(this.targetBlock_))};class N{copyData=null;copyWorkspace=null;constructor(e){this.navigation=e||new k}init(){this.addShortcutHandlers(),this.registerDefaults()}addShortcutHandlers(){u.FieldDropdown&&(u.FieldDropdown.prototype.onShortcut=this.fieldDropdownHandler),u.Toolbox&&(u.Toolbox.prototype.onShortcut=this.toolboxHandler)}removeShortcutHandlers(){u.FieldDropdown&&(u.FieldDropdown.prototype.onShortcut=null),u.Toolbox&&(u.Toolbox.prototype.onShortcut=null)}fieldDropdownHandler(e){if(this.menu_)switch(e.name){case c.PREVIOUS:return this.menu_.highlightPrevious(),!0;case c.NEXT:return this.menu_.highlightNext(),!0;default:return!1}return u.Field.prototype.onShortcut.call(this,e)}toolboxHandler(e){if(!this.selectedItem_)return!1;switch(e.name){case c.PREVIOUS:return this.selectPrevious_();case c.OUT:return this.selectParent_();case c.NEXT:return this.selectNext_();case c.IN:return this.selectChild_();default:return!1}}addWorkspace(e){this.navigation.addWorkspace(e)}removeWorkspace(e){this.navigation.removeWorkspace(e)}enable(e){this.navigation.enableKeyboardAccessibility(e)}disable(e){this.navigation.disableKeyboardAccessibility(e)}fieldShortcutHandler(e,t){const o=e.getCursor();if(!o||!o.getCurNode())return!1;const r=o.getCurNode();return r.getType()===u.ASTNode.types.FIELD&&r.getLocation().onShortcut(t)}registerPrevious(){const e={name:c.PREVIOUS,preconditionFn:e=>e.keyboardAccessibilityMode,callback:(e,t,o)=>{const r=e.getFlyout(),s=e.getToolbox();let i=!1;switch(this.navigation.getState(e)){case n.WORKSPACE:return i=this.fieldShortcutHandler(e,o),i||(e.getCursor().prev(),i=!0),i;case n.FLYOUT:return i=this.fieldShortcutHandler(e,o),i||(r.getWorkspace().getCursor().prev(),i=!0),i;case n.TOOLBOX:return!(!s||"function"!=typeof s.onShortcut)&&s.onShortcut(o);default:return!1}}};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.W,e.name)}registerToggleKeyboardNav(){const e={name:c.TOGGLE_KEYBOARD_NAV,callback:e=>(e.keyboardAccessibilityMode?this.navigation.disableKeyboardAccessibility(e):this.navigation.enableKeyboardAccessibility(e),!0)};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.K,[u.utils.KeyCodes.CTRL,u.utils.KeyCodes.SHIFT]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name)}registerOut(){const e={name:c.OUT,preconditionFn:e=>e.keyboardAccessibilityMode,callback:(e,t,o)=>{const r=e.getToolbox();let s=!1;switch(this.navigation.getState(e)){case n.WORKSPACE:return s=this.fieldShortcutHandler(e,o),s||(e.getCursor().out(),s=!0),s;case n.FLYOUT:return this.navigation.focusToolbox(e),!0;case n.TOOLBOX:return!(!r||"function"!=typeof r.onShortcut)&&r.onShortcut(o);default:return!1}}};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.A,e.name)}registerNext(){const e={name:c.NEXT,preconditionFn:e=>e.keyboardAccessibilityMode,callback:(e,t,o)=>{const r=e.getToolbox(),s=e.getFlyout();let i=!1;switch(this.navigation.getState(e)){case n.WORKSPACE:return i=this.fieldShortcutHandler(e,o),i||(e.getCursor().next(),i=!0),i;case n.FLYOUT:return i=this.fieldShortcutHandler(e,o),i||(s.getWorkspace().getCursor().next(),i=!0),i;case n.TOOLBOX:return!(!r||"function"!=typeof r.onShortcut)&&r.onShortcut(o);default:return!1}}};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.S,e.name)}registerIn(){const e={name:c.IN,preconditionFn:e=>e.keyboardAccessibilityMode,callback:(e,t,o)=>{const r=e.getToolbox();let s=!1;switch(this.navigation.getState(e)){case n.WORKSPACE:return s=this.fieldShortcutHandler(e,o),s||(e.getCursor().in(),s=!0),s;case n.TOOLBOX:return s=!(!r||"function"!=typeof r.onShortcut)&&r.onShortcut(o),s||this.navigation.focusFlyout(e),!0;default:return!1}}};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.D,e.name)}registerInsert(){const e={name:c.INSERT,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.getState(e)===n.WORKSPACE&&this.navigation.connectMarkerAndCursor(e)};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.I,e.name)}registerMark(){const e={name:c.MARK,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>{let t,o,r;switch(this.navigation.getState(e)){case n.WORKSPACE:return this.navigation.handleEnterForWS(e),!0;case n.FLYOUT:if(t=this.navigation.getFlyoutCursor(e),!t)return!1;switch(o=t.getCurNode(),r=o.getType(),r){case u.ASTNode.types.STACK:this.navigation.insertFromFlyout(e);break;case u.ASTNode.types.BUTTON:this.navigation.triggerButtonCallback(e)}return!0;default:return!1}}};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.ENTER,e.name)}registerDisconnect(){const e={name:c.DISCONNECT,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.getState(e)===n.WORKSPACE&&(this.navigation.disconnectBlocks(e),!0)};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.X,e.name)}registerToolboxFocus(){const e={name:c.TOOLBOX,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.getState(e)===n.WORKSPACE&&(e.getToolbox()?this.navigation.focusToolbox(e):this.navigation.focusFlyout(e),!0)};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.T,e.name)}registerExit(){const e={name:c.EXIT,preconditionFn:e=>e.keyboardAccessibilityMode,callback:e=>{switch(this.navigation.getState(e)){case n.FLYOUT:case n.TOOLBOX:return this.navigation.focusWorkspace(e),!0;default:return!1}}};u.ShortcutRegistry.registry.register(e,!0),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.ESC,e.name,!0),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.E,e.name,!0)}registerWorkspaceMoveLeft(){const e={name:c.MOVE_WS_CURSOR_LEFT,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.moveWSCursor(e,-1,0)};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.A,[u.utils.KeyCodes.SHIFT]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name)}registerWorkspaceMoveRight(){const e={name:c.MOVE_WS_CURSOR_RIGHT,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.moveWSCursor(e,1,0)};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.D,[u.utils.KeyCodes.SHIFT]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name)}registerWorkspaceMoveUp(){const e={name:c.MOVE_WS_CURSOR_UP,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.moveWSCursor(e,0,-1)};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.W,[u.utils.KeyCodes.SHIFT]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name)}registerWorkspaceMoveDown(){const e={name:c.MOVE_WS_CURSOR_DOWN,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly,callback:e=>this.navigation.moveWSCursor(e,0,1)};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.S,[u.utils.KeyCodes.SHIFT]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name)}registerCopy(){const e={name:c.COPY,preconditionFn:e=>{if(e.keyboardAccessibilityMode&&!e.options.readOnly){const t=e.getCursor().getCurNode();if(t&&t.getSourceBlock()){const e=t.getSourceBlock();return!u.Gesture.inProgress()&&e&&e.isDeletable()&&e.isMovable()}}return!1},callback:e=>{const t=e.getCursor().getCurNode().getSourceBlock();return e.hideChaff(),this.copyData=t.toCopyData(),this.copyWorkspace=t.workspace,!!this.copyData}};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.C,[u.utils.KeyCodes.CTRL]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name,!0);const o=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.C,[u.utils.KeyCodes.ALT]);u.ShortcutRegistry.registry.addKeyMapping(o,e.name,!0);const r=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.C,[u.utils.KeyCodes.META]);u.ShortcutRegistry.registry.addKeyMapping(r,e.name,!0)}registerPaste(){const e={name:c.PASTE,preconditionFn:e=>e.keyboardAccessibilityMode&&!e.options.readOnly&&!u.Gesture.inProgress(),callback:()=>!(!this.copyData||!this.copyWorkspace)&&this.navigation.paste(this.copyData,this.copyWorkspace)};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.V,[u.utils.KeyCodes.CTRL]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name,!0);const o=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.V,[u.utils.KeyCodes.ALT]);u.ShortcutRegistry.registry.addKeyMapping(o,e.name,!0);const r=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.V,[u.utils.KeyCodes.META]);u.ShortcutRegistry.registry.addKeyMapping(r,e.name,!0)}registerCut(){const e={name:c.CUT,preconditionFn:e=>{if(e.keyboardAccessibilityMode&&!e.options.readOnly){const t=e.getCursor().getCurNode();if(t&&t.getSourceBlock()){const e=t.getSourceBlock();return!u.Gesture.inProgress()&&e&&e.isDeletable()&&e.isMovable()&&!e.workspace.isFlyout}}return!1},callback:e=>{const t=e.getCursor().getCurNode().getSourceBlock();return this.copyData=t.toCopyData(),this.copyWorkspace=t.workspace,this.navigation.moveCursorOnBlockDelete(e,t),t.checkAndDelete(),!0}};u.ShortcutRegistry.registry.register(e);const t=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.X,[u.utils.KeyCodes.CTRL]);u.ShortcutRegistry.registry.addKeyMapping(t,e.name,!0);const o=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.X,[u.utils.KeyCodes.ALT]);u.ShortcutRegistry.registry.addKeyMapping(o,e.name,!0);const r=u.ShortcutRegistry.registry.createSerializedKey(u.utils.KeyCodes.X,[u.utils.KeyCodes.META]);u.ShortcutRegistry.registry.addKeyMapping(r,e.name,!0)}registerDelete(){const e={name:c.DELETE,preconditionFn:function(e){if(e.keyboardAccessibilityMode&&!e.options.readOnly){const t=e.getCursor().getCurNode();if(t&&t.getSourceBlock()){const e=t.getSourceBlock();return e&&e.isDeletable()}}return!1},callback:(e,t)=>{const o=e.getCursor().getCurNode().getSourceBlock();return t.preventDefault(),!u.Gesture.inProgress()&&(this.navigation.moveCursorOnBlockDelete(e,o),o.checkAndDelete(),!0)}};u.ShortcutRegistry.registry.register(e),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.DELETE,e.name,!0),u.ShortcutRegistry.registry.addKeyMapping(u.utils.KeyCodes.BACKSPACE,e.name,!0)}registerDefaults(){this.registerPrevious(),this.registerNext(),this.registerIn(),this.registerOut(),this.registerDisconnect(),this.registerExit(),this.registerInsert(),this.registerMark(),this.registerToolboxFocus(),this.registerToggleKeyboardNav(),this.registerWorkspaceMoveDown(),this.registerWorkspaceMoveLeft(),this.registerWorkspaceMoveUp(),this.registerWorkspaceMoveRight(),this.registerCopy(),this.registerPaste(),this.registerCut(),this.registerDelete()}dispose(){const e=Object.values(c);for(const t of e)u.ShortcutRegistry.registry.unregister(t);this.removeShortcutHandlers(),this.navigation.dispose()}}return s})()));
//# sourceMappingURL=index.js.map