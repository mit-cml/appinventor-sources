/*! For license information please see index.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("blockly/core"));else if("function"==typeof define&&define.amd)define(["blockly/core"],e);else{var o="object"==typeof exports?e(require("blockly/core")):e(t.Blockly);for(var s in o)("object"==typeof exports?exports:t)[s]=o[s]}}(this,(t=>(()=>{"use strict";var e={573:e=>{e.exports=t}},o={};function s(t){var i=o[t];if(void 0!==i)return i.exports;var r=o[t]={exports:{}};return e[t](r,r.exports,s),r.exports}s.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return s.d(e,{a:e}),e},s.d=(t,e)=>{for(var o in e)s.o(e,o)&&!s.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{s.r(i),s.d(i,{EdgeScrollOptions:()=>{},ScrollBlockDragger:()=>c,ScrollMetricsManager:()=>o,ScrollOptions:()=>a});var t=s(573),e=s.n(t);class o extends t.MetricsManager{constructor(t){super(t),this.useCachedContentMetrics=!1,this.contentMetrics=null}getContentMetrics(){return this.useCachedContentMetrics&&this.contentMetrics||(this.contentMetrics=super.getContentMetrics()),this.contentMetrics}}const r=t=>{const e=t.svgBlockCanvas_.getAttribute("transform").split(","),o=Number(e[0].split("(")[1]),s=Number(e[1].split(")")[0]);return new Blockly.utils.Coordinate(o,s)};class l{constructor(e){this.workspace_=e,this.activeScrollVector_=new t.utils.Coordinate(0,0),this.animationFrameId_=0,this.lastTime_=Date.now(),this.shouldAnimate_=!1}stopAndDestroy(){this.activeScrollVector_=new t.utils.Coordinate(0,0),this.shouldAnimate_=!1,cancelAnimationFrame(this.animationFrameId_),this.animationFrameId_=0}nextAnimationStep_(t){if(this.shouldAnimate_){const e=t-this.lastTime_;this.lastTime_=t,e>0&&this.scrollTick_(e),this.animationFrameId_=requestAnimationFrame((t=>this.nextAnimationStep_(t)))}}scrollTick_(t){const e=this.activeScrollVector_.x*t,o=this.activeScrollVector_.y*t;this.scrollWorkspaceWithBlock(e,o)}scrollWorkspaceWithBlock(t,e){const o=r(this.workspace_),s=this.workspace_.getMetricsManager();s.useCachedContentMetrics=!0;const i=this.workspace_.scrollX+t,l=this.workspace_.scrollY+e;this.workspace_.scroll(i,l),s.useCachedContentMetrics=!1;const n=r(this.workspace_),c=n.x-o.x,a=n.y-o.y;(c||a)&&this.workspace_.currentGesture_.getCurrentDragger().moveBlockWhileDragging(c,a)}updateProperties(t){this.activeScrollVector_=t,this.shouldAnimate_=!0,0==this.animationFrameId_&&(this.lastTime_=Date.now(),this.nextAnimationStep_(this.lastTime_))}}const n={slowBlockSpeed:.28,fastBlockSpeed:1.4,slowBlockStartDistance:0,fastBlockStartDistance:50,oversizeBlockThreshold:.85,oversizeBlockMargin:15,slowMouseSpeed:.5,fastMouseSpeed:1.6,slowMouseStartDistance:0,fastMouseStartDistance:35};class c extends t.BlockDragger{constructor(e,o){super(e,o),this.scrollDelta_=new t.utils.Coordinate(0,0),this.dragDelta_=new t.utils.Coordinate(0,0),this.scrollDirections_=["top","bottom","left","right"]}moveBlockWhileDragging(e,o){this.scrollDelta_.x-=e,this.scrollDelta_.y-=o;const s=t.utils.Coordinate.sum(this.scrollDelta_,this.dragDelta_),i=this.pixelsToWorkspaceUnits_(s),r=t.utils.Coordinate.sum(this.startXY_,i);this.draggingBlock_.moveDuringDrag(r),this.dragIcons_(s)}startDrag(e,o){const s=t.utils.Coordinate.sum(this.scrollDelta_,e);super.startDrag(s,o),this.dragDelta_=e}drag(e,o){const s=t.utils.Coordinate.sum(this.scrollDelta_,o);super.drag(e,s),this.dragDelta_=o,c.edgeScrollEnabled&&this.scrollWorkspaceWhileDragging_(e)}endDrag(t,e){super.endDrag(t,e),this.stopAutoScrolling()}getNewLocationAfterDrag_(e){const o={},s=t.utils.Coordinate.sum(this.scrollDelta_,e);return o.delta=this.pixelsToWorkspaceUnits_(s),o.newLocation=t.utils.Coordinate.sum(this.startXY_,o.delta),o}scrollWorkspaceWhileDragging_(e){this.SCROLL_DIRECTION_VECTORS_={top:new t.utils.Coordinate(0,1),bottom:new t.utils.Coordinate(0,-1),left:new t.utils.Coordinate(1,0),right:new t.utils.Coordinate(-1,0)};const o=t.utils.svgMath.screenToWsCoordinates(this.workspace_,new t.utils.Coordinate(e.clientX,e.clientY)),s={top:[],bottom:[],left:[],right:[]},i=this.workspace_.getMetricsManager().getViewMetrics(!0);this.computeBlockCandidateScrolls_(s,i,o),this.computeMouseCandidateScrolls_(s,i,o);const r=this.getOverallScrollVector_(s);t.utils.Coordinate.equals(r,new t.utils.Coordinate(0,0))?this.stopAutoScrolling():(this.activeAutoScroll_=this.activeAutoScroll_||new l(this.workspace_),this.activeAutoScroll_.updateProperties(r))}getOverallScrollVector_(e){let o=new t.utils.Coordinate(0,0);for(const s of this.scrollDirections_){const i=e[s].reduce(((e,o)=>e&&t.utils.Coordinate.magnitude(e)>t.utils.Coordinate.magnitude(o)?e:o),new t.utils.Coordinate(0,0));o=t.utils.Coordinate.sum(o,i)}return o}computeBlockCandidateScrolls_(t,e,o){const s=this.getBlockBoundsOverflows_(e,o);for(const e of this.scrollDirections_){const o=s[e];if(o>c.options.slowBlockStartDistance){const s=o>c.options.fastBlockStartDistance?c.options.fastBlockSpeed:c.options.slowBlockSpeed,i=this.SCROLL_DIRECTION_VECTORS_[e].clone().scale(s);t[e].push(i)}}}computeMouseCandidateScrolls_(t,e,o){const s=this.getMouseOverflows_(e,o);for(const e of this.scrollDirections_){const o=s[e];if(o>c.options.slowMouseStartDistance){const s=o>c.options.fastMouseStartDistance?c.options.fastMouseSpeed:c.options.slowMouseSpeed,i=this.SCROLL_DIRECTION_VECTORS_[e].clone().scale(s);t[e].push(i)}}}getBlockBoundsOverflows_(t,e){const o=this.draggingBlock_.getBoundingRectangle();return o.bottom-o.top>t.height*c.options.oversizeBlockThreshold&&(o.top=Math.max(o.top,e.y-c.options.oversizeBlockMargin),o.bottom=Math.min(o.bottom,e.y+c.options.oversizeBlockMargin)),o.right-o.left>t.width*c.options.oversizeBlockThreshold&&(o.left=Math.max(o.left,e.x-c.options.oversizeBlockMargin),o.right=Math.min(o.right,e.x+c.options.oversizeBlockMargin)),{top:t.top-o.top,bottom:-(t.top+t.height-o.bottom),left:t.left-o.left,right:-(t.left+t.width-o.right)}}getMouseOverflows_(t,e){return{top:t.top-e.y,bottom:-(t.top+t.height-e.y),left:t.left-e.x,right:-(t.left+t.width-e.x)}}stopAutoScrolling(){this.activeAutoScroll_&&this.activeAutoScroll_.stopAndDestroy(),this.activeAutoScroll_=null}}c.edgeScrollEnabled=!0,c.options=n,c.updateOptions=function(t){c.options={...c.options,...t}},c.resetOptions=function(){c.options=n},t.registry.register(t.registry.Type.BLOCK_DRAGGER,"ScrollBlockDragger",c);class a{constructor(t){this.workspace_=t}init({enableWheelScroll:t=!0,enableEdgeScroll:e=!0,edgeScrollOptions:o=null}={enableWheelScroll:!0,enableEdgeScroll:!0,edgeScrollOptions:null}){t?this.enableWheelScroll():this.disableWheelScroll(),c.edgeScrollEnabled=e,o&&c.updateOptions(o)}enableWheelScroll(){this.wheelEvent_||(this.wheelEvent_=e().browserEvents.conditionalBind(this.workspace_.svgGroup_,"wheel",this,this.onMouseWheel_))}disableWheelScroll(){this.wheelEvent_&&(e().browserEvents.unbind(this.wheelEvent_),this.wheelEvent_=null)}enableEdgeScroll(){c.edgeScrollEnabled=!0}disableEdgeScroll(){c.edgeScrollEnabled=!1}updateEdgeScrollOptions(t){c.updateOptions(t)}onMouseWheel_(t){const o=this.workspace_.options.moveOptions&&this.workspace_.options.moveOptions.wheel,s=this.workspace_.getGesture(t);if(!(o&&s&&s.getCurrentDragger()instanceof e().BlockDragger))return;const i=e().browserEvents.getScrollDeltaPixels(t);if(t.shiftKey){const t=i.x;i.x=i.y,i.y=t}const l=this.workspace_.scrollX-i.x,n=this.workspace_.scrollY-i.y,c=r(this.workspace_);this.workspace_.getMetricsManager().useCachedContentMetrics=!0,this.workspace_.scroll(l,n),this.workspace_.getMetricsManager().useCachedContentMetrics=!1;const a=r(this.workspace_),h=a.x-c.x,u=a.y-c.y;(h||u)&&(s.getCurrentDragger().moveBlockWhileDragging(h,u),t.preventDefault())}}})(),i})()));
//# sourceMappingURL=index.js.map