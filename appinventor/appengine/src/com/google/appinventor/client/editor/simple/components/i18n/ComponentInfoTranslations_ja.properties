ButtonHelpStringComponentPallette=クリックを検出する機能を持つボタン。外観の多くの部分を変更することができ、クリックが可能かどうか（<code>Enabled</code>）は、デザイナーまたはブロックエディタで変更することができます。
BluetoothServerHelpStringComponentPallette=Bluetoothサーバーコンポーネント
BluetoothClientHelpStringComponentPallette=Bluetooth クライアント・コンポーネント
BarometerHelpStringComponentPallette=周囲の気圧を測定できるセンサー部品。
BarcodeScannerHelpStringComponentPallette=バーコードスキャナーを使用してバーコードを読み取るためのコンポーネント
BallHelpStringComponentPallette=<p><code>Canvas</code> 上に配置できる丸い「スプライト」。タッチやドラッグに反応し、他のスプライト (<code>ImageSprite</code> など) と対話できます。 <code>Ball</code>s) と Canvas の端を移動し、そのプロパティ値に従って移動します。</p><p>たとえば、<code>Ball</code> を手前に 4 ピクセル移動させるには、 <code>Canvas</code> の先頭を 500 ミリ秒 (0.5 秒) ごとに表示するには、<code>Speed</code> プロパティを 4 [ピクセル] に設定し、<code>Interval</code> プロパティを 4 [ピクセル] に設定します。 500 [ミリ秒]、<code>Heading</code> プロパティを 90 [度]、<code>Enabled</code> プロパティを <code>True</code> に設定します。</p><p> <code>Ball</code> と <code>ImageSprite</code> の違いは、後者は画像ファイルから外観を取得できるのに対し、<code>Ball</code> の外観は画像ファイルから取得できることです。 <code>PaintColor</code> プロパティと <code>Radius</code> プロパティを変更することによってのみ変更されます。</p>
ActivityStarterHelpStringComponentPallette=<code>StartActivity</code>メソッドを使用してアクティビティを起動できるコンポーネントです。<p><ul> <li> 別の App Inventor for Android アプリケーションを起動します。ソースコードをダウンロードし、ファイルエクスプローラーやunzipユーティリティを使って「youngandroidproject/project.properties」というファイルを見つけてください。例えば、<code>main=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>のようになります。（最初のコンポーネントはBen.Bitdiddleによって作成されたことを示します。）
AccelerometerSensorHelpStringComponentPallette=揺れを検知し、SI単位(m/s<sup>2</sup>)を使用して3次元で加速度をおおよそ測定できる非可視コンポーネント。コンポーネント：<ul><li> <strong>xAccel</strong>: 0 携帯電話が平らな面に静止しているときはプラス、携帯電話が右に傾いている（左側が盛り上がっている）ときはマイナス、携帯電話が左に傾いている（右側が盛り上がっている）ときはマイナス。</li> <li> <strong>yAccel</strong>: 0  電話機が平らな面に静止しているときはプラス、底面が持ち上がっているときはプラス、上面が持ち上がっているときはマイナスである。</li> <li> <strong>zAccel</strong>: -9.8と同等 (デバイスがディスプレイを上向きにして地面と平行に静止しているときの地球の重力を毎秒メートルで表し、地面に垂直な場合は0、下向きの場合は+9.8。また、重力に逆らって加速させることによっても、その値に影響を与えることができる。</li></ul>
TextToSpeechHelpStringComponentPallette=TextToSpeech（テキスト読み上げ）コンポーネントは、指定されたテキストを読み上げます。音声のピッチと速度を設定できます。 <p>言語コードを指定して言語を設定することもできます。これにより、実際に話される言語ではなく、単語の発音が変更されます。たとえば、言語をフランス語に設定して英語のテキストを話すと、フランス語のアクセントで英語 (en) を話しているように聞こえます。</p> <p>国コードを指定して国を指定することもできます。これは発音に影響を与える可能性があります。たとえば、イギリス英語 (GBR) はアメリカ英語 (USA) とは異なって聞こえます。すべての国コードがすべての言語に影響するわけではありません。</p> <p>利用可能な言語と国は特定のデバイスによって異なり、AvailableLanguages プロパティと AvailableCountries（利用できる国）プロパティで一覧表示できます。</p>
TextBoxHelpStringComponentPallette=<p>ユーザーがテキストを入力するためのボックスです。初期またはユーザーが入力したテキスト値は、<code>Text</code> プロパティにあります。空白の場合、ボックス内に薄いテキストとして表示される <code>Hint</code> プロパティは、ユーザーに入力内容に関するガイダンスを提供します。</p><p><code>MultiLine</code> > プロパティは、テキストに複数の行を含めることができるかどうかを決定します。単一行のテキスト ボックスの場合、ユーザーが [完了] キーを押すとキーボードが自動的に閉じます。複数行のテキスト ボックスのキーボードを閉じるには、アプリで HideKeyboard メソッドを使用するか、ユーザーによる Back キーの押下に依存する必要があります。</p><p><code> NumbersOnly</code> プロパティは、キーボードが数値入力を受け入れるように制限します。 </p><p>その他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>) に影響します。有効</code>)。</p><p>テキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。</p><p >ユーザーが入力したテキストを表示したくない場合は、代わりに <code>PasswordTextBox</code> を使用してください。</p>
TextingHelpStringComponentPallette=<p><code>SendMessage（メッセージの送信）</code> メソッドが呼び出されたときに、<code>Message</code> プロパティで指定されたテキスト メッセージを <code>PhoneNumber（携帯番号）< で指定された電話番号に送信するコンポーネント。 /code> プロパティ。</p> <p><code>ReceivingEnabled（受信有効）</code> プロパティが 1 に設定されている場合、メッセージは<b>受信されません</b>。 <code>受信可能</code> が 2 に設定されている場合、メッセージはアプリケーションの実行中にのみ受信されます。最後に、<code>受信可能</code> が 3 に設定されている場合、アプリケーションが実行されているときはメッセージが受信され、 アプリケーションが実行されていない<b>ときは</b>メッセージはキューに入れられ、ユーザーに通知が表示されます。 </p> <p>メッセージが到着すると、<code>MessageReceived（メッセージ受信）</code> イベントが発生し、送信番号とメッセージが提供されます。</p> <p> このコンポーネントを含むアプリは、次のような場合でもメッセージを受信します。それはバックグラウンドにあり（つまり、画面に表示されていないとき）、さらに、アプリが実行されていない場合でも、電話にインストールされている限り、アプリは実行されます。アプリがフォアグラウンドにないときに携帯電話がテキスト メッセージを受信すると、携帯電話の通知バーに通知が表示されます。通知を選択するとアプリが起動します。アプリ開発者としては、電話機でテキスト メッセージを無視できるように、ユーザーが ReceivingEnabled（受信可能） を制御できるようにしたいと思うでしょう。</p> <p>GoogleVoiceEnabled（グーグル有効）プロパティが true の場合、メッセージを送信できます。 Google Voiceを使用したWi-Fi。このオプションを使用するには、ユーザーが Google Voice アカウントを持っており、モバイル Voice アプリが電話にインストールされている必要があります。 Google Voice オプションは、Android 2.0 (Eclair) 以降をサポートする携帯電話でのみ機能します。</p> <p>電話番号 (例: 650-555-1212) を指定するには、<code>PhoneNumber（携帯番号）</code> を設定します。プロパティを、指定された数字を含むテキスト文字列に変換します (例: 6505551212)。ダッシュ、ドット、括弧を含めることができますが (例: (650)-555-1212)、無視されます。スペースは含めることはできません。</p> <p>アプリで電話番号を指定するもう 1 つの方法は、<code>PhoneNumberPicker（携帯番号ピッカー）</code> コンポーネントを組み込むことです。これにより、ユーザーは保存されている電話番号から電話番号を選択できるようになります。電話の連絡先にあります。</p>
TimePickerHelpStringComponentPallette=<p>クリックすると、ユーザーが時間を選択できるポップアップ ダイアログが起動するボタンです。</p>
ThermometerHelpStringComponentPallette=周囲（外部）温度を測定できるセンサー部品です。ほとんどの Android デバイスにはこのセンサーがありません。
GameClientHelpStringComponentPallette=アプリケーションがオンライン・ゲーム・サーバーと通信する方法を提供します
FusiontablesControlHelpStringComponentPallette=ｖ説明：\nコンテキスト: FusiontablesControlHelpStringComponentPalletteSource\n<p>Google Fusion Tables と通信する非表示コンポーネント。 Fusion Tables を使用すると、データ テーブルを保存、共有、クエリ、視覚化できます。このコンポーネントを使用すると、これらのテーブルのクエリ、作成、変更が可能になります。</p> <p><font color=red><b>注:</b>&nbsp;Google は、2019 年 12 月 3 日に Fusion Tables サービスを終了しました。コンポーネントは機能しなくなりました。</font></p> <p>このコンポーネントは、<a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">Fusion を使用します。テーブル API V2.0</a>。 <p>Fusion Tables を使用するアプリケーションは、Google のサーバーに対して認証する必要があります。これを行うには 2 つの方法があります。最初の方法では、開発者が取得した API キーを使用します (下記を参照)。このアプローチでは、エンドユーザーも Fusion Table にアクセスするためにログインする必要があります。 2 番目の方法は、サービス アカウントを使用することです。この方法では、認証情報と、<a href="https://code.google.com/apis/console/" target="_blank">Google API コンソール<から取得する特別な「サービス アカウント メール アドレス」を作成します。 /a>。次に、Fusion Table Control にサービス アカウントの電子メール アドレスの名前を伝え、秘密キーをアセットとしてアプリケーションにアップロードし、このファイルを指すように キーファイル プロパティを設定します。最後に、デザイナーで「UseServiceAuthentication」チェックボックスをオンにします。サービス アカウントを使用する場合、エンドユーザーは Fusion Tables を使用するためにログインする必要はありません。サービス アカウントがすべてのアクセスを認証します。</p> <p>API キーを取得するには、次の手順に従ってください。</p> <ol> <li><a href="https://code.google.com/apis/console/" に移動します。
FirebaseDBHelpStringComponentPallette=Firebase（ファイヤーベース） と通信して情報を保存・取得する、目に見えないコンポーネントです。
FileHelpStringComponentPallette=ファイルを保存・取得するための非可視コンポーネントです。このコンポーネントを使用して、デバイスにファイルを書き込んだり、読み込んだりします。デフォルトの動作では、アプリに関連付けられたプライベートデータディレクトリにファイルを書き込みます。コンパニオンは、デバッグ用のパブリックディレクトリにファイルを書き込む特殊なケースです。ファイル コンポーネントがパスとスコープを使用してファイルへのアクセスを管理する方法の詳細については、[詳細情報] リンクを使用してください。
FeatureCollectionHelpStringComponentPallette=FeatureCollection （フィーチャーコレクション）には、1 つ以上のマップフィーチャがグループとして含まれます。コレクション内のフィーチャで発生したイベントは、コレクションオブジェクトの対応するイベントもトリガします。FeatureCollection は、マップにコンテンツを追加する手段として、外部リソースからロードできます。
DatePickerHelpStringComponentPallette=<p>ボタンをクリックすると、ポップアップダイアログが表示され、ユーザーが日付を選択することができます。</p>
ContactPickerHelpStringComponentPallette=ボタンをクリックすると、選択する連絡先のリストが表示されます。ユーザーが選択した後、以下のプロパティが選択したコンタクトに関する情報に設定されます：連絡先の名前 </li> <li> <code>EmailAddress</code>: 連絡先のプライマリ電子メール アドレス </li> <li> <code>ContactUri</code>: 連絡先s デバイス上の URI </li><li> <code>EmailAddressList</code>: 連絡先の電子メール アドレスのリスト </li> <li> <code>PhoneNumber</code>: 連絡先の主電話番号 (以降の Android バージョン)</li> <li> <code>PhoneNumberList</code>: 連絡先の電話番号のリスト (以降の Android バージョン)</li> <li> <code>Picture</code>: 連絡先の画像を含むファイルの名前。<code>Image</code> または < の <code>Picture</code> プロパティ値として使用できます。 code>ImageSprite</code> コンポーネント。</li></ul></p><p>その他のプロパティはボタンの外観に影響します (<code>TextAlignment</code>、<code>BackgroundColor</code>)。 </p><p>ContactPicker コンポーネントは、すべての電話で動作するとは限りません。たとえば、システム 3.0 より前の Android システムでは、電話番号を選択できず、電子メール アドレスのリストには電子メールが 1 つだけ含まれます。
CloudDBHelpStringComponentPallette=インターネットに接続されたデータベースサーバー（Redisソフトウェアを使用）にデータを保存できる、目に見えないコンポーネントです。これにより、アプリのユーザー同士でデータを共有することができます。デフォルトでは、データはMITが管理するサーバーに保存されますが、独自のサーバーをセットアップして実行することもできます。RedisServer "プロパティと "RedisPort "プロパティを設定して、独自のサーバーにアクセスしてください。
ClockHelpStringComponentPallette=<p>携帯電話の内部時計を使用して、瞬間の時間を提供する非可視コンポーネントです。</p> <p>定期的に設定された間隔でタイマーを起動し、時間の計算、操作、および変換を実行できます。使用可能なパターンは空文字列です、 MM/DD/YYYY HH:mm:ss a, or MMM d, yyyyHH:mm. 空文字列は、FormatDateTimeの場合は "MMM d, yyyy HH:mm:ss a"、FormatDateの場合は "MMM d, yyyy "となるデフォルトの書式を提供します。<a すべての可能なフォーマットを見るには、以下を参照してください。href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" _target="_blank">
CircleHelpStringComponentPallette=円
CheckBoxHelpStringComponentPallette=ユーザーがクリックするとイベントが発生するチェックボックスです。外観に影響するプロパティが多数あり、デザイナーまたはブロックエディタで設定できます。
CanvasHelpStringComponentPallette=<p>2次元のタッチセンサー式長方形パネルで、描画やスプライトの移動ができます。</p> <p><code>背景カラー</code>、<code>ペイントカラー</code>、<code>背景画像</code>、<code>Width</code>、および <code>Height Canvas の </code> は、デザイナーまたはブロック エディターのいずれかで設定できます。<code>Width</code> と <code>Height</code> はピクセル単位で測定され、正の値である必要があります。</p><p>キャンバス上の任意の位置は、(X, Y) のペアとして指定できます。 ) 値。<ul> <li>X はキャンバスの左端からのピクセル数です。</li><li>Y はキャンバスの上端からのピクセル数です。</li>< /ul>.</p> <p>キャンバスまたは <code>Sprite</code> (<code>画像スプライト</code> または <code>Ball</) がいつどこでタッチされたかを知らせるイベントがあります。 code>) がドラッグされました。点、線、円を描画するメソッドもあります。</p>
CameraHelpStringComponentPallette=デバイスのカメラを使って写真を撮影するコンポーネントです。写真撮影後、AfterPictureイベントの引数として、写真を含む携帯電話上のファイル名を使用できます。このファイル名は、例えばImageコンポーネントのPictureプロパティを設定するために使用することができます。
CamcorderHelpStringComponentPallette=ビデオが録画されると、AfterRecording イベントの引数として、クリップを含む携帯電話上のファイル名が使用可能になります。ファイル名は、例えばVideoPlayerコンポーネントのsourceプロパティを設定するために使用できます。
Ev3UltrasonicSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットの超音波センサーに高レベルのインターフェースを提供するコンポーネント。
Ev3UIHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットに高レベルのインターフェースを提供するコンポーネントで、EV3の画面にグラフを描画する機能を持ちます。
Ev3TouchSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのタッチセンサーに高レベルのインターフェースを提供するコンポーネント。
Ev3SoundHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのサウンド機能への高レベルインターフェースを提供するコンポーネント。
Ev3MotorsHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットにハイレベルとローレベルの両方のインターフェイスを提供するコンポーネントで、モーターを制御できる機能を備えています。
Ev3GyroSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのジャイロセンサーに高レベルのインターフェースを提供するコンポーネント。
Ev3CommandsHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットに低レベルのインターフェースを提供するコンポーネントで、EV3ロボットにシステムコマンドやダイレクトコマンドを送信する機能を持ちます。
Ev3ColorSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのカラーセンサーに高レベルのインターフェースを提供するコンポーネントです。
EmailPickerHelpStringComponentPallette=Eメールピッカーはテキスト ボックスの一種です。ユーザーが連絡先の名前または電子メール アドレスの入力を開始すると、電話機には入力を完了する選択肢のドロップダウン メニューが表示されます。連絡先の数が多い場合、ドロップダウンが表示されるまでに数秒かかることがあり、一致の計算中に中間結果が表示されることがあります。 <p>テキスト ボックスの最初の内容とユーザー入力後の内容<は、<code>Text</code> プロパティにあります。 <code>Text</code> プロパティが最初は空の場合、<code>Hint</code> プロパティの内容がユーザーへのヒントとしてテキスト ボックスに薄く表示されます。</p> <p>他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>Enabled</code>) に影響します。 p><p>このようなテキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。
HygrometerHelpStringComponentPallette=周囲の相対湿度を測定できるセンサー部品です。ほとんどのAndroid端末にはこのセンサーは搭載されていません。
HorizontalScrollArrangementHelpStringComponentPallette=p>左から右に表示されるコンポーネントを配置する書式設定要素です。コンポーネントを重ねて表示したい場合は、代わりに <code>縦配置</code> を使用してください。</p><p>このバージョンはスクロール可能です。
HorizontalArrangementHelpStringComponentPallette=<p>左から右に表示されるコンポーネントを配置する書式設定要素です。コンポーネントを重ねて表示したい場合は、代わりに <code>VerticalArrangement（縦配置）</code> を使用してください。</p>
GyroscopeSensorHelpStringComponentPallette=<p>1 秒あたりの度単位で 3 次元の角速度を測定できる非表示コンポーネントです。</p><p>機能するには、コンポーネントの <code>有効</code> プロパティが Trueに設定されている必要があります。 Trデバイスにはジャイロスコープ センサーが必要です。</p>
FilePickerHelpStringComponentPallette=<code>FilePicker</code> コンポーネントはボタンのようなコンポーネントで、ユーザーがクリックすると、システムからファイルを選択するように求められます。ピッカーは、<a href="/reference/components/media.html#FilePicker.Open" target="_blank">Open</a> メソッドを呼び出してプログラムで開くこともできます。 FilePicker を使用するには、Android 4.4 以降または iOS 11 以降が必要です。
AnomalyDetectionHelpStringComponentPallette=異常検出モデルを含むコンポーネント
ListPickerHelpStringComponentPallette=<p>クリックすると、ユーザーが選択できるテキストのリストが表示されるボタンです。テキストは、<code>ElementsFromString（列の要素）</code> プロパティを文字列で区切られた連結 (<em>選択肢 1、選択肢 2、選択肢 3</em> など) に設定することで、デザイナーまたはブロック エディターを通じて指定できます。ブロック エディタで <code>Elements</code> プロパティをリストに設定します。</p><p>ShowFilterBar（ファイルバーを見せる） プロパティを true に設定すると、リストが検索可能になります。他のプロパティは、ボタンの外観 (<code>TextAlignment（テキストアライメント）</code>、<code>BackgroundColor（背景色）</code> など) とボタンをクリックできるかどうか (<code>Enabled</code>) に影響します。 p>
LineStringHelpStringComponentPallette=ラインストリングは、マップ上に開いた連続した線を描くためのコンポーネントです。デザイナーでラインストリングに新しい点を追加するには、線分の中点をドラッグして線分から離し、新しい頂点を導入します。頂点を移動するには、頂点をクリックして新しい場所にドラッグします。頂点をクリックすると、2つしか残っていない場合を除き、その頂点が削除されます。
LightSensorHelpStringComponentPallette=光量を測定できるセンサー部品。
LabelHelpStringComponentPallette=ラベルは、<code>Text</code>プロパティで指定されたテキストを表示します。その他のプロパティは、デザイナーやブロックエディタで設定することができ、テキストの外観や配置を制御します。
ImageSpriteHelpStringComponentPallette=<p><code>キャンバス</code> 上に配置できる「スプライト」。タッチやドラッグに反応したり、他のスプライト (<code>Ball</code> や他の < code>画像スプライト(ImageSprite)</code>s) と Canvas の端を移動し、そのプロパティ値に従って移動します。その外観は、その <code>Picture</code> プロパティで指定された画像になります (<code>Visible</code> プロパティが <code>False</code> でない場合)。</p> <p>To <code>画像スプライト</code> が 1000 ミリ秒 (1 秒) ごとに左に 10 ピクセル移動するようにします。たとえば、<code>Speed</code> プロパティを 10 [ピクセル] に設定すると、<code> Interval</code> プロパティを 1000 [ミリ秒]、<code>Heading</code> プロパティを 180 [度]、<code>Enabled</code> プロパティを <code>True</code> に設定します。 <code>Rotates</code> プロパティが <code>True</code> であるスプライトは、スプライトの <code>Heading</code> が変更されると画像を回転します。現在、回転されたスプライトとの衝突をチェックすると、スプライトの回転されていない位置がチェックされるため、回転された背が高くて幅が狭いスプライトや幅が低くて短いスプライトの場合、衝突チェックが不正確になります。スプライトのプロパティはどれも、プログラムの制御でいつでも変更できます。</p>
ImagePickerHelpStringComponentPallette=特殊な用途のボタンです。ユーザーが画像ピッカーをタップすると、デバイスの画像ギャラリーが表示され、画像を選択できます。画像が選択されると保存され、<code>Selected</code> プロパティは画像が保存されるファイルの名前になります。ストレージがいっぱいにならないように、最大 10 枚の画像が保存されます。さらに画像を選択すると、古い画像から新しい画像の順に前の画像が削除されます。
ImageHelpStringComponentPallette=画像を表示するコンポーネントです。表示する画像やその他の外観は、デザイナーまたはブロックエディターで指定できます。
ImageBotHelpStringComponentPallette=ImageBotは、DALL-E 2を使って画像を作成・編集する非可視コンポーネントです。このコンポーネントには、ブロックのApiKeyプロパティを設定することで、独自のOpenAI APIキーを提供する必要があります。
ListViewHelpStringComponentPallette=</p> <p>これは、テキストとイメージ要素のリストを表示する可視コンポーネントです。</p> <p>文字列の単純なリストは、文字列からの要素プロパティを使用して設定することができます。複数の文字列および/または画像を含む要素のより複雑なリストは、リストデータおよびリストビューレイアウトプロパティを使用して作成できます。</p>
TranslatorHelpStringComponentPallette=このコンポーネントを使用して、単語や文章を異なる言語間で翻訳します。 このコンポーネントは、MIT のサーバーに翻訳を要求するため、インターネット アクセスが必要です (さらに、MIT は商用翻訳サービスに翻訳を要求します)。 2 つの文字言語コードを使用して、ソースとターゲットの形式でソース言語とターゲット言語を指定します。 したがって、「en-es」は英語からスペイン語に翻訳され、「es-ru」はスペイン語からロシア語に翻訳されます。 ソース言語を省略した場合、サービスはソース言語の検出を試みます。 したがって、「es」だけを指定すると、ソース言語が検出され、スペイン語に翻訳されます。 <i>注</i>: 翻訳はバックグラウンドで非同期的に行われます。 翻訳が完了すると、<b>GotTranslation（翻訳を取得）(String, String)</b> イベントがトリガーされます。
TinyWebDBHelpStringComponentPallette=Web サービスと通信して情報を保存および取得する非表示コンポーネント。
TinyDBHelpStringComponentPallette=TinyDB は、アプリのデータを保存する非表示コンポーネントです。 <p> App Inventor で作成されたアプリは、実行するたびに初期化されます。アプリが変数の値を設定し、ユーザーがアプリを終了した場合、その変数の値は次回アプリを実行するときに記憶されません。 対照的に、TinyDB はアプリの<em>永続</em>データ ストアです。つまり、そこに保存されているデータは、アプリが実行されるたびに利用可能になります。 例としては、ハイスコアを保存し、ゲームがプレイされるたびに取得するゲームが挙げられます。 </<p> <p> データ項目は、 <em>タグ</em> の下に保存される文字列です。 データ項目を保存するには、データ項目を保存するタグを指定します。 その後、特定のタグの下に保存されたデータを取得できます。 </p><p> アプリごとにデータ ストアは 1 つだけです。 複数の TinyDB コンポーネントがある場合でも、それらは同じデータ ストアを使用します。 個別のストアの効果を得るには、異なるキーを使用します。 また、各アプリには独自のデータ ストアがあります。 TinyDB を使用して電話機上の 2 つの異なるアプリ間でデータを受け渡すことはできませんが、TinyDb を使用してマルチスクリーン アプリの異なる画面間でデータを共有することは<em>可能</em>です。 </p> <p>AI Companion を使用してアプリを開発している場合、そのコンパニオンを使用するすべてのアプリは同じ TinyDb を共有します。 アプリがパッケージ化されると、その共有はなくなります。 ただし、開発中は、新しいアプリの作業を開始するたびに TinyDb をクリアするように注意する必要があります。</p>
SpreadsheetHelpStringComponentPallette=スプレッドシートは、Google Sheets API を使用してスプレッドシート ドキュメントのデータを保存および受信するための非表示コンポーネントです。 <p>このコンポーネントを利用するには、まず Google 開発者アカウントを持っている必要があります。次に、その Google デベロッパー アカウントで新しいプロジェクトを作成し、そのプロジェクトで Google Sheets API を有効にして、最後に Sheets API のサービス アカウントを作成する必要があります。</p><p>サービス アカウントの作成方法についての説明。スプレッドシート コンポーネントの使用に関するその他の関連情報の入手先については、<a href=''/reference/other/googlesheets-api-setup.html''>こちら</a>をご覧ください。</p>
SharingHelpStringComponentPallette=共有は、アプリとデバイスにインストールされている他のアプリの間でファイルやメッセージを共有できるようにする非表示のコンポーネントです。このコンポーネントは、提供された情報を処理できるインストール済みアプリのリストを表示し、ユーザーがコンテンツを共有するアプリ (メール アプリ、ソーシャル ネットワーク アプリ、テキスト メッセージ アプリなど) を選択できるようにします。 <br>ファイル パスは、カメラや ImagePicker などの他のコンポーネントから直接取得できますが、ストレージから読み取るように直接指定することもできます。デバイスによってストレージの扱いが異なることに注意してください。そのため、たとえば、フォルダ <code>Appinventor/assets</code> に arrow.gif というファイルがある場合、次のようなことを試してみてください。 ><code>"file:///sdcard/Appinventor/assets/arrow.gif"</code></li> または <li><code>"/storage/Appinventor/assets/arrow.gif"</code ></li></ul>
SerialHelpStringComponentPallette=Arduinoなどのデバイスに接続するためのシリアルコンポーネント
ScreenHelpStringComponentPallette=プログラム内の他のすべてのコンポーネントを含む最上位コンポーネント
RegressionHelpStringComponentPallette=回帰モデルを含むコンポーネント
RectangleHelpStringComponentPallette=矩形は、東西南北の境界の緯度と経度が固定された多角形です。矩形の頂点を動かすと、それに応じて適切な辺が更新されます。
ProximitySensorHelpStringComponentPallette=<p>デバイスの表示画面に対する物体の距離を cm 単位で測定できる目に見えないコンポーネントです。このセンサーは通常、ハンドセットが人の耳に当てられているかどうかを判断するために使用されます。つまり、オブジェクトがデバイスからどのくらい離れているかを判断できます。多くのデバイスは絶対距離を cm 単位で返しますが、近い値と遠い値のみを返すデバイスもあります。この場合、センサーは通常、遠い状態では最大範囲値を報告し、近い状態ではそれより小さい値を報告します。</p>
PolygonHelpStringComponentPallette=ポリゴンは地図上の任意の2次元領域を囲みます。多角形は、キャンパス、都市、国などの周囲を描くのに使うことができます。ポリゴンは基本的な三角形から始まります。多角形の中点を辺から離れるようにドラッグすると、新しい頂点を作成できます。頂点をクリックするとその頂点は削除されますが、常に最低3つの頂点が存在する必要があります。
SpinnerHelpStringComponentPallette=<p>要素のリストを含むポップアップを表示するスピナー コンポーネントです。これらの要素は、<code>ElementsFromString</code> プロパティを文字列で区切られた連結 (<em>選択肢 1、選択肢 2、選択肢 3</em> など) に設定することによって、デザイナーまたはブロック エディターで設定できます。ブロックエディターで <code>Elements</code> プロパティをリストに設定します。スピナーは、最初の項目がすでに選択された状態で作成されます。したがって、これを選択しても After Picking イベントは生成されません。したがって、最初のスピナー項目を「下から選択...」のような非選択項目にすると便利です。 </p>
SpeechRecognizerHelpStringComponentPallette=音声認識を使って音声からテキストに変換するコンポーネント
SoundRecorderHelpStringComponentPallette=<p>音声を録音するマルチメディアコンポーネント。</p>
SoundHelpStringComponentPallette=<p>サウンド ファイルを再生し、オプションでブロック エディターで指定されたミリ秒数 (1000 分の 1 秒) 振動するマルチメディア コンポーネントです。再生するサウンド ファイルの名前は、デザイナーまたはブロック エディターで指定できます。</p> <p>サポートされているサウンド ファイル形式については、<a href="http://developer.android.com/" を参照してください。 guide/appendix/media-formats.html" target="_blank">Android でサポートされるメディア フォーマット</a>。</p><p>この <code>Sound</code> コンポーネントは、次のような短いサウンド ファイルに最適です。 <code>Player</code> コンポーネントは、歌などの長いサウンドの場合により効率的です。</p><p>ソースを設定した直後にサウンドを再生しようとすると、エラーが発生する可能性があります。</p>
SliderHelpStringComponentPallette=スライダーは、ドラッグ可能な Thumbを追加する進行状況バーです。 Thumbをタッチして左右にドラッグして、スライダーの Thumbの位置を設定できます。スライダーの Thumbがドラッグされると、PositionChanged（ポジション変更）イベントがトリガーされ、スライダーのサムの位置が報告されます。報告されたスライダー  Thumbの位置を使用して、テキスト ボックスのフォント サイズやボールの半径など、別のコンポーネント属性を動的に更新できます。
PlayerHelpStringComponentPallette=オーディオを再生し、電話の振動を制御するマルチメディア コンポーネントです。マルチメディア フィールドの名前は、<code>Source</code> プロパティで指定されます。このプロパティは、デザイナーまたはブロック エディターで設定できます。振動の時間の長さは、ブロック エディターでミリ秒 (1000 分の 1 秒) 単位で指定します。<p>サポートされているオーディオ形式については、<a href="http://developer.android.com/guide/appendix/" を参照してください。 media-formats.html" target="_blank">Android でサポートされるメディア フォーマット</a>。</p><p>このコンポーネントは、曲などの長いサウンド ファイルに最適ですが、<code>サウンド</code > コンポーネントは、効果音などの短いファイルの場合により効率的です。</p>
PhoneStatusHelpStringComponentPallette=電話に関する情報を返すコンポーネント。
PhoneNumberPickerHelpStringComponentPallette=クリックすると、連絡先の電話番号のリストが表示され、その中から選択できるボタン。ユーザーが選択を行うと、次のプロパティが選択した連絡先に関する情報に設定されます: <ul><li> <code>ContactName</code>: 連絡先の名前 </li> <li> < code>PhoneNumber</code>: 連絡先の電話番号 </li> <li> <code>EmailAddress</code>: 連絡先の電子メール アドレス </li> <li> <code>Picture< /code>: 連絡先の画像を含むファイルの名前。<code>Image</code> または <code>ImageSprite</code> の <code>Picture</code> プロパティ値として使用できます。 code> コンポーネント。</li></ul></p><p>その他のプロパティはボタンの外観に影響します (<code>TextAlignment</code>、<code>BackgroundColor</code> など)。クリックできるかどうか (<code>Enabled</code>)。</p><p>PhoneNumberPicker コンポーネントは、すべての Android デバイスで動作するとは限りません。たとえば、システム 3.0 より前の Android システムでは、返される電話番号と電子メール アドレスのリストは空になります。
PhoneCallHelpStringComponentPallette=<p><code>PhoneNumber</code> プロパティで指定された番号に電話をかける非表示コンポーネント。デザイナーまたはブロック エディターで設定できます。このコンポーネントには <code>MakePhoneCall</code> メソッドがあり、プログラムで電話をかけることができます。</p><p>多くの場合、このコンポーネントは <code>ContactPicker</code> コンポーネントと一緒に使用されます。ユーザーは電話機に保存されている連絡先から連絡先を選択し、<code>PhoneNumber</code> プロパティを連絡先の電話番号に設定します。</p><p>電話番号を直接指定するには (例: 650) -555-1212)、<code>PhoneNumber</code> プロパティを、指定された数字を含むテキスト (例: "6505551212") に設定します。ダッシュ、ドット、括弧を含めることができますが (例: "(650)-555-1212")、無視されます。スペースを含めることはできません。</p>
PedometerHelpStringComponentPallette=歩数計のように動作するコンポーネントです。加速度センサーで動きを感知し、歩いたかどうかを判断しようとします。設定可能な歩幅を使用して、移動距離も推定できます。
PasswordTextBoxHelpStringComponentPallette=<p>パスワードを入力するボックスです。これは、ユーザーが入力した文字を表示しない点を除けば、通常の <code>テキストボックス</code> コンポーネントと同じです。</p><p>ボックス内のテキストの値は、 <code>テキスト</code> プロパティです。空白の場合、ボックス内に淡いテキストとして表示される <code>Hint</code> プロパティは、ユーザーに何を入力するかのガイダンスを提供します。</p> <p>テキスト ボックスは通常、< とともに使用されます。 code>Button</code> コンポーネント。テキストの入力が完了したらユーザーがボタンをクリックします。</p>
OrientationSensorHelpStringComponentPallette=<p>デバイスの物理的な向きに関する情報を 3 次元で提供する非表示コンポーネント: <ul> <li> <strong>ロール</strong>: デバイスが水平の場合は 0 度、デバイスが水平になるにつれて 90 度に増加します。デバイスの左側を上に傾けると、デバイスの右側を上に傾けると -90 度まで下がります。 </li> <li> <strong>ピッチ</strong>: デバイスが水平の場合は 0 度、上部が下を向くようにデバイスを傾けると最大 90 度、裏返すと最大 180 度になります。同様に、底部が下を向くようにデバイスを傾けると、ピッチは -90 度に減少し、完全に裏返すとさらに -180 度に減少します。</li> <li> <strong>方位角</strong> >: デバイスの上部が北を向いている場合は 0 度、東を向いている場合は 90 度、南を向いている場合は 180 度、西を向いている場合は 270 度など。</li></ul> これらの測定値デバイス自体は動いていないと仮定します。</p>
NxtUltrasonicSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットの超音波センサーに高レベルのインターフェースを提供するコンポーネントです。
NxtTouchSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットのタッチセンサーに高レベルのインターフェースを提供するコンポーネントです。
NxtSoundSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットのサウンドセンサーにハイレベルインターフェースを提供するコンポーネントです。
NxtLightSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットの光センサーに高レベルのインターフェースを提供するコンポーネントです。
NxtDriveHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットに高レベルのインターフェースを提供するコンポーネントです。
NxtDirectCommandsHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットへの低レベルインターフェースを提供するコンポーネントで、NXTダイレクトコマンドを送信する機能を備えています。
NxtColorSensorHelpStringComponentPallette=LEGO MINDSTORMS NXTロボットのカラーセンサーに高レベルのインターフェースを提供するコンポーネントです。
NotifierHelpStringComponentPallette=Notifier（通知）コンポーネントは、アラート ダイアログ、メッセージ、一時アラートを表示し、次のメソッドを通じて Android ログ エントリを作成します。 <ul><li> ShowMessageDialog: ユーザーがボタンを押して閉じる必要があるメッセージを表示します。</li><li> > ShowChooseDialog: メッセージ 2 つのボタンを表示して、ユーザーが 2 つの応答 (たとえば、「はい」または「いいえ」) のうちの 1 つを選択できるようにします。その後、AfterChoosing （選択後 ）イベントが発生します。</li><li> ShowTextDialog: ユーザーが応答としてテキストを入力できるようにします。メッセージの後に AfterTextInput（AfterTextInput ）イベントが発生します。 <li> ShowPasswordDialog: ユーザーがメッセージに応じてパスワードを入力できるようにし、その後 AfterTextInput イベントが発生します。 <li> ShowAlert: しばらくすると自然に消える一時的なアラートを表示します。</li><li> ShowProgressDialog: ユーザーが閉じることのできない読み込み中のスピナーを含むアラートを表示します。これを閉じるには、DismissProgressDialog ブロックを使用する必要があります。</li><li> DismissProgressDialog: ShowProgressDialog によって表示される進行状況ダイアログを閉じます。</li><li> LogError: Android ログにエラー メッセージを記録します。 </li><li> LogInfo: 情報メッセージを Android ログに記録します。</li><li> LogWarning: 警告メッセージを Android ログに記録します。</li><li>ダイアログ内のメッセージ (ただし、アラートではありません) は、次の HTML タグを使用して書式設定できます:&lt;b&gt;、&lt;big&gt;、&lt;blockquote&gt;、&lt;br&gt;、&lt;cite&gt;、&lt;dfn&gt;、&lt;div&gt;、&lt; em>、<small>、<strong>、<sub>、<sup>、<tt>。 &lt;u&gt;</li><li>&lt;font color="blue"&gt; など、font タグを使用して色を指定することもできます。利用可能な色の名前には、アクア、ブラック、ブルー、フクシア、グリーン、グレー、ライム、マルーン、ネイビー、オリーブ、パープル、レッド、シルバー、ティール、ホワイト、イエローなどがあります。</li></ul>
NearFieldHelpStringComponentPallette=<p>NFC 機能を提供する非表示コンポーネントです。現時点では、このコンポーネントはテキスト タグの読み取りと書き込みのみをサポートしています (デバイスでサポートされている場合)。</p><p>テキスト タグの読み取りと書き込みを行うには、コンポーネントに <code>ReadMode</code> プロパティが必要です。それぞれ True または False に設定します。</p><p><strong>注:</strong> このコンポーネントは、App Inventor アプリの スクリーン１でのみ動作します。</p>
NavigationHelpStringComponentPallette=ナビゲーション
MediaStoreHelpStringComponentPallette=ウェブサービスと通信し、メディアファイルを保存する、目に見えないコンポーネントです。
MarkerHelpStringComponentPallette=<p>地図上の情報を示すためにポイントに配置されるアイコンです。マーカーは、ユーザーに情報を伝えるために、情報ウィンドウ、カスタム塗りつぶし色とカスタム描線色、カスタム画像を提供するために使用できます。</p>
MapHelpStringComponentPallette=<p>バックグラウンドでマップタイルをレンダリングし、複数のマーカー要素がマップ上のポイントを識別できるようにする 2 次元コンテナです。マップ タイルは、OpenStreetMapの貢献者と米国地質調査所によって提供されています。</p><p>マップ コンポーネントには、App Inventor 内で境界を操作するための 3 つのユーティリティが用意されています。まず、画面上の他のコンポーネントに対してマップを移動できるようにするロック機構が提供されています。次に、ロックが解除されている場合、ユーザーはマップを任意の場所に移動できます。この新しい場所では、「初期境界の設定」が行われます。ボタンを押すと、現在のマップ座標をプロパティに保存できます。最後に、画面外にマーカーを追加するなど、マップを別の場所に移動すると、[マップを初期境界にリセット] ボタンが表示されます。ボタンを使用すると、開始位置で地図の中心を再調整できます。</p>
MagneticFieldSensorHelpStringComponentPallette=<p>テスラ https://en.wikipedia.org/wiki/Tesla_(unit) の 3 つの物理軸 (x,y,z) すべての周囲の地磁気を測定する目に見えないコンポーネントです。</p>
LocationSensorHelpStringComponentPallette=経度、緯度、高度 (デバイスでサポートされている場合)、速度 (デバイスでサポートされている場合)、住所などの位置情報を提供する非表示コンポーネントです。また、「ジオコーディング」を実行して、指定された住所 (必ずしも現在の住所であるとは限りません) を緯度 (<code>LatitudeFromAddress</code> メソッドを使用) と経度 (<code>LongitudeFromAddress</code> メソッドを使用) に変換することもできます。 ).</p><p>機能するには、コンポーネントの <code>Enabled</code> プロパティが True に設定されている必要があり、デバイスではワイヤレス ネットワークまたは GPS 衛星 (屋外の場合) を介した位置検出が有効になっている必要があります。 .</p>アプリの起動時に位置情報がすぐに利用できない場合があります。位置情報プロバイダーが見つかって使用されるまで少し待つか、位置変更イベントを待つ必要があります
TwitterHelpStringComponentPallette=<a href="http://www.twitter.com" target="_blank">Twitter</a> との通信を可能にする非表示のコンポーネント。 ユーザーが Twitter アカウントにログインすると (そして、認証が <code>IsAuthorized（認証済み）</code> イベントによって成功したことが確認されると)、さらに多くの操作が使用可能になります。<ul><li> Twitter でツイートまたはラベルを検索する (< code>SearchTwitter（検索ツイッタ）</code>)</li><li>ツイートの送信 (<code>Tweet</code>) </li><li>画像付きツイートの送信 (<code>TweetWithImage対―r￥と）（画像付き</code>) ) </li><li> 特定のユーザーにメッセージを送信します (<code>DirectMessage（ダイレクトメッセージ）</code>)</li> <li> ログインしているユーザーに送信された最新のメッセージを受信します (<code>RequestDirectMessages（リクエストダイレクトメッセージ）< /code>)</li> <li> 特定のユーザーのフォロー (<code>Follow</code>)</li><li> 特定のユーザーのフォローの停止 (<code>StopFollowing（フォロー停止）</code>)</ li><li> ログイン ユーザーをフォローしているユーザーのリストを取得します (<code>RequestFollowers（リクエストフォロワー）</code>)</li> <li> ログイン ユーザーがフォローしているユーザーの最新メッセージを取得します (<code> >RequestFriendTimeline（フレンドタイムラインのリクエスト）</code>)</li> <li> ログイン ユーザーの最新のメンションを取得します (<code>RequestMentions（メンションリクエスト）</code>)</li></ul></p> <p> アプリに固有の Twitter 認証用のコンシューマ キーとコンシューマ シークレットを http://twitter.com/oauth_clients/new から取得する必要があります。
TableArrangementHelpStringComponentPallette=<p>表形式で表示されるべきコンポーネントを配置するためのフォーマット要素。</p>
SwitchHelpStringComponentPallette=ユーザーがクリックするとイベントが発生するトグルスイッチです。外観に影響する多くのプロパティがあり、デザイナーや ブロックエディター で設定できます。
WebHelpStringComponentPallette=HTTP GET, POST, PUT, DELETE リクエストの関数を提供する、目に見えないコンポーネントです。
VerticalArrangementHelpStringComponentPallette=<p>上下に表示されるコンポーネントを配置する書式設定要素です。 (最初の子コンポーネントは一番上に保存され、2 番目の子コンポーネントはその下に保存されます。) コンポーネントを並べて表示したい場合は、代わりに <code>horizontalArrangement（横配置）</code> を使用してください。</p>
VerticalScrollArrangementHelpStringComponentPallette=<p>上下に表示されるコンポーネントを配置する書式設定要素です。 (最初の子コンポーネントは一番上に保存され、2 番目の子コンポーネントはその下に保存される、というように) コンポーネントを並べて表示したい場合は、代わりに <code>horizontalArrangement（横配列）</code> を使用してください。</p><p> このバージョンスクロール可能です
VideoPlayerHelpStringComponentPallette=ビデオを再生できるマルチメディア コンポーネントです。アプリケーションを実行すると、ビデオプレーヤーが画面上に長方形として表示されます。ユーザーが四角形に触れると、ビデオ内で再生/一時停止、前方へのスキップ、および後方へのスキップを行うコントロールが表示されます。アプリケーションは、<code>Start</code>、<code>Pause</code>、および <code>SeekTo</code> メソッドを呼び出して動作を制御することもできます。 <p>ビデオ ファイルは 3GPP (.3gp) または MPEG-4 (.mp4) 形式である必要があります。法的な形式の詳細については、<a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Android でサポートされるメディア形式</a>をご覧ください。 p><p>App Inventor for Android では、1 MB 未満のビデオ ファイルのみが許可され、アプリケーションの合計サイズは 5 MB に制限されます。メディア (ビデオ、オーディオ、サウンド) ファイルにはそのすべてが使用できるわけではありません。メディア ファイルが大きすぎる場合、アプリケーションのパッケージ化またはインストール時にエラーが発生する可能性があります。その場合は、メディア ファイルの数またはサイズを減らす必要があります。 Windows ムービー メーカーや Apple iMovie などのほとんどのビデオ編集ソフトウェアは、ビデオを短くしたり、ビデオをよりコンパクトな形式に再エンコードしたりすることで、ビデオのサイズを減らすことができます。</p><p>メディアを設定することもできます。ソースはストリーミング ビデオを指す URL に設定されますが、URL はビデオを再生するプログラムではなく、ビデオ ファイル自体を指す必要があります。
VotingHelpStringComponentPallette=投票コンポーネントは Web サービスと通信して投票用紙を取得し、ユーザーの投票を送り返します。 <p>アプリケーションは、Web サービス (< で指定された) から投票の質問とオプションを取得するために、通常は <code>Initialize</code> イベント ハンドラー内でメソッド <code>RequestBallot（投票用紙をリクエスト）</code> を呼び出す必要があります。 code>ServiceURL（サービスURL）</code> プロパティ)。 Web サービスからの応答に応じて、システムは次の 3 つのイベントのいずれかを発生させます: <ol> <li> <code>GotBallot（投票用紙を取得）</code>。投票の質問と選択肢が取得され、プロパティ <code> が取得されたことを示します。 BallotQuestion（投票に関する質問）</code> と <code>BallotOptions（投票オプション）</code> が設定されています。</li> <li> <code>NoOpenPoll（無開票）</code> は、投票の質問が利用できないことを示します。</li> <li> < code>WebServiceError（ウェブサービスエラー）</code> は、サービスが法的な応答を提供しなかったことを示し、エラー メッセージを表示します。</li> </ol></p> <p>投票用紙を取得した後、アプリケーションはユーザーに<code>BallotOptions（投票オプション）</code> の中から選択し、プロパティ <code>UserChoice（ユーザー選択）</code> をその選択に設定します。アプリケーションは、どのユーザーが投票しているかを指定するために <code>UserId（ユーザーID）</code> も設定する必要があります。</p> <p>アプリケーションが <code>UserChoice（ユーザー選択）</code> と <code>UserId（ユーザーID）</code> を設定したら、アプリケーションは <code>SendBallot（投票用紙を送信）</code> を呼び出して、この情報を Web サービスに送信できます。サービスが投票を正常に受信すると、イベント <code>GotBallotconfirmation（投票確認）</code> が発生します。それ以外の場合、イベント <code>WebServiceError（ウェブサービスエラー）</code> が発生し、適切なエラー メッセージが表示されます。</p>
WebViewerHelpStringComponentPallette=Webページを閲覧するためのコンポーネントです。ホーム URL は、デザイナーまたはブロック エディターで指定できます。タップされたときにリンクをたどるようにビューを設定でき、ユーザーは Web フォームに入力できます。警告: これはフルブラウザではありません。たとえば、携帯電話のハードウェアの [戻る] キーを押すと、ブラウザの履歴に戻るのではなく、アプリが終了します。<p />WebViewer.WebViewString（ウェブビュー文字）プロパティを使用して、アプリと Web ビューアで実行されている JavaScript コードの間で通信できます。ページ。アプリでは、WebViewString を取得および設定します。 WebViewer（ウェブViewer）には、</em getWebViewString（ウェブビュー文字列の取得）()</em> および <em>setWebViewString（ウェブビューも文字列の設定）(text)</em> メソッドを使用して、window.AppInventor オブジェクトを参照する Javascriptを組み込みます。 <p />たとえば、WebViewer が Javascriptコマンドを含むページを開いた場合、<br /> <em>document.write("答えは" + window.AppInventor.getWebViewString());</em> < br />そして、WebView.WebVewString を「hello」に設定すると、Web ページには </br ><em>答えは hello です</em>と表示されます。 <br />また、Web ページにコマンド <br /><em>window.AppInventor.setWebViewString("hello from Javascript")</em> を実行する Javascript が含まれている場合、<br />WebViewStringプロパティの値<br /><em>Javascriptから hello</em> になります。
accelerometerSensorComponentPallette=加速度センサー
activityStarterComponentPallette=アクティビティスターター
anomalyDetectionComponentPallette=異常検知
ballComponentPallette=ボール
barcodeScannerComponentPallette=バーコードスキャナー
bluetoothClientComponentPallette=Bluetoothクライアント
bluetoothServerComponentPallette=Bluetoothサーバー
buttonComponentPallette=ボタン
camcorderComponentPallette=コムコーダー
cameraComponentPallette=カメラ
canvasComponentPallette=キャンバス
chartComponentPallette=チャート
chartData2DComponentPallette=チャートデータ2D
chartsComponentPallette=チャート
chatBotComponentPallette=チャットbot
checkBoxComponentPallette=チェックボックス
circleComponentPallette=円
clockComponentPallette=時計
cloudDBComponentPallette=クラウドDB
connectivityComponentPallette=接続性
contactPickerComponentPallette=コンタクトピッカー
dataFileComponentPallette=データファイル
dataScienceComponentPallette=データサイエンス
datePickerComponentPallette=データピッカー
drawingAndAnimationComponentPallette=ドローイングとアニメーション
emailPickerComponentPallette=Eメールピッカー
ev3ColorSensorComponentPallette=Ev3カラーセンサー
ev3CommandsComponentPallette=Ev3コマンド
ev3GyroSensorComponentPallette=Ev3ジャイロセンサー
ev3MotorsComponentPallette=Ev3モーターズ
ev3SoundComponentPallette=Ev3サウンド
ev3TouchSensorComponentPallette=Ev3タッチセンサー
ev3UIComponentPallette=Ev3UI
ev3UltrasonicSensorComponentPallette=EV3超音波センサー
experimentalComponentPallette=実験的
extensionComponentPallette=拡張
featureCollectionComponentPallette=フィーチャーコレクション
fileComponentPallette=ファイル
filePickerComponentPallette=ファイルピッカー
firebaseDBComponentPallette=ファイヤーベースDB
forInternalUseOnlyComponentPallette=内部使用のみ
fusiontablesControlComponentPallette=フュージョンテーブルコントロール
YandexTranslateHelpStringComponentPallette=このコンポーネントを使用して、単語や文章を異なる言語間で翻訳します。このコンポーネントは Yandex.翻訳サービスへの翻訳を要求するため、インターネット アクセスが必要です。 2 文字の言語コードを使用して、ソースとターゲットの形式でソース言語とターゲット言語を指定します。したがって、「en-es」は英語からスペイン語に翻訳され、「es-ru」はスペイン語からロシア語に翻訳されます。ソース言語を省略した場合、サービスはソース言語の検出を試みます。したがって、「es」だけを指定すると、ソース言語が検出されてスペイン語に翻訳されます。<p /> このコンポーネントは、Yandex 翻訳サービスを利用しています。利用可能な言語のリスト、言語コードとステータス コードの意味などの詳細については、http://api.yandex.com/translate/ を参照してください。 <p />注: 翻訳はバックグラウンドで非同期的に行われます。翻訳が完了すると、「GotTranslation」イベントがトリガーされます。
barometerComponentPallette=バロメーター
mapComponentPallette=地図
magneticFieldSensorComponentPallette=磁場センサー
listViewComponentPallette=リストビュー
listPickerComponentPallette=リストピッカー
lightSensorComponentPallette=ライトセンサー
imageSpriteComponentPallette=画像スプライト
imagePickerComponentPallette=画像ピッカー
imageComponentPallette=画像
imageBotComponentPallette=画像ボット
gyroscopeSensorComponentPallette=ジャイロスコープセンサー
ChartData2DHelpStringComponentPallette=(x, y) 座標ベースのデータを保持するコンポーネント
nxtLightSensorComponentPallette=次のライトセンサー
nxtColorSensorComponentPallette=次のカラーセンサー
nxtDriveComponentPallette=次のドライブ
nxtDirectCommandsComponentPallette=次のダイレクトコマンド
notifierComponentPallette=通知者
nearFieldComponentPallette=近距離フィールド
navigationComponentPallette=ナビゲーション
mediaStoreComponentPallette=メディアストア
mediaComponentPallette=メディア
markerComponentPallette=マーカー
mapsComponentPallette=地図
locationSensorComponentPallette=位置センサー
lineStringComponentPallette=行文字列
legoMindstormsComponentPallette=LEGO® MINDSTORMS®
layoutComponentPallette=レイアウト
labelComponentPallette=ラベル
internalUseComponentPallette=内部使用のみ
hygrometerComponentPallette=湿度計
horizontalScrollArrangementComponentPallette=水平スクロール配列
horizontalArrangementComponentPallette=水平配置
gameClientComponentPallette=ゲームクライアント
ChatBotHelpStringComponentPallette=AIチャットボットと通信するための非可視コンポーネントです。このコンポーネントは現在、OpenAIのChatGPT APIを使用するMITのプロキシと通信しています。このコンポーネントは実験的なものです。
ChartHelpStringComponentPallette=データを可視化するコンポーネント
DataFileHelpStringComponentPallette=CSVやJSONデータを読み込むことができるコンポーネントです。データファイルには、CSVやJSONでパースされたデータを行や列の形でアクセスするための機能が含まれています。チャートデータ2Dコンポーネントと一緒に使用することで、ファイルからチャートに直接データをインポートすることができます。また、ファイルが選択され、解析に成功した後、このコンポーネントをチャート上にドラッグ＆ドロップすると、ファイルからチャートデータコンポーネントがチャート上に自動的に作成されます。
yandexTranslateComponentPallette=Yandex 翻訳
webViewerComponentPallette=ウェブ視聴者
webComponentPallette=ウェブ
votingComponentPallette=投票
videoPlayerComponentPallette=ビデオプレーヤー
verticalScrollArrangementComponentPallette=垂直スクロール配列
verticalArrangementComponentPallette=垂直配列
userInterfaceComponentPallette=ユーザーインターフェース
uninitializedComponentPallette=未初期化
twitterComponentPallette=ツイッター
translatorComponentPallette=翻訳者
tinyWebDBComponentPallette=小型ウェブDB
tinyDBComponentPallette=小型DB
timePickerComponentPallette=タイムピッカー
textBoxComponentPallette=テキストボックス
tableArrangementComponentPallette=テーブル配置
switchComponentPallette=切り替え
storageComponentPallette=ストレージ
spreadsheetComponentPallette=スプレッドシート
spinnerComponentPallette=スピナー
speechRecognizerComponentPallette=音声認識
soundRecorderComponentPallette=サウンドレコーダー
soundComponentPallette=サウンド
socialComponentPallette=ソーシャル
sliderComponentPallette=スライダー
sharingComponentPallette=共有
serialComponentPallette=シリアル
sensorsComponentPallette=センサー
screenComponentPallette=スクリーン
regressionComponentPallette=回帰
rectangleComponentPallette=矩形
proximitySensorComponentPallette=近接センサー
polygonComponentPallette=ポリゴン
playerComponentPallette=プレイヤー
phoneStatusComponentPallette=電話機の状態
phoneNumberPickerComponentPallette=電話番号ピッカー
phoneCallComponentPallette=電話の呼び出し
pedometerComponentPallette=歩数計
passwordTextBoxComponentPallette=パスワードのテキストボックス
orientationSensorComponentPallette=オリエンテーションセンサー
nxtUltrasonicSensorComponentPallette=次の超音波センサー
nxtTouchSensorComponentPallette=次の接触センサー
nxtSoundSensorComponentPallette=次のサウンドセンサー
thermometerComponentPallette=温度計
textingComponentPallette=テキスト入力
textToSpeechComponentPallette=テキスト読み上げ
