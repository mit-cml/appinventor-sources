AccelerometerSensorHelpStringComponentPallette = Nicht sichtbare Komponente, die Schütteln erkennen und Beschleunigungen in drei Richtungen näherungsweise messen kann (m/s<sup>2</sup>).  Die Komponenten sind: <ul>\n<li> <strong>xBeschl</strong>: Der Wert ist gleich 0, wenn das Handy ruhig auf einer ebenen Fläche liegt, größer 0, wenn das Handy nach rechts geneigt ist (d.h., seine linke Seite ist angehoben) und kleiner 0, wenn das Handy nach links geneigt ist (d.h., seine rechte Seite ist angehoben).</li>\n <li> <strong>yBeschl</strong>: Der Wert ist gleich 0, wenn das Handy ruhig auf einer ebenen Fläche liegt, größer 0,  wenn seine Unterkante angehoben wird und kleiner 0, wenn seine Oberkante angehoben wird.</li>\n <li> <strong>zBeschl</strong>: Der Wert ist gleich -9.8 (Erdbeschleunigung in Meter pro Quadratsekunde), wenn das Gerät mit dem Display nach oben zeigt, parallel zum Boden ist und sich in Ruhe befindet, 0, wenn das Gerät senkrecht zum Boden steht und +9.8, wenn das Display nach unten zeigt. Der Wert kann durch Beschleunigungen gegen oder mit der Schwerkraft beeinflusst werden. </li></ul>
ActivityStarterHelpStringComponentPallette = Eine Komponente, die eine Aktivität durch die Methode <code>StartActivity</code> starten kann.<p>Beispiele für Aktivitäten, die gestartet werden können: <ul> \n<li> Starten von anderen App Inventor Android Apps </li> \n<li> Aufruf der Kamera-App </li> \n<li> Durchführung einer Web-Suche </li> \n<li> Öffnen eines Web-Browsers für eine bestimmte Webseite</li> \n<li> Öffnen einer Karten-App für eine bestimmte Position</li></ul> \nSie können auch Aktivitäten starten, die Textdaten zurückliefern.  Beispiele für die Verwendung des Aktionsstarters finden Sie in der Dokumentation.</p>
BallHelpStringComponentPallette = <p>Ein rundes "Sprite", das auf einer <code>Leinwand</code> plaziert werden kann, auf der es auf Berührungen und Zug, mit anderen Sprites (<code>BildSprite</code>s und andere <code>Bälle</code>) und den Rändern der Leinwand interagieren sowie sich entsprechend seiner Eigenschaftswerte bewegen kann.</p><p>Um zum Beispiel einen <code>Ball</code> alle 500 Millisekunden (jede halbe Sekunde) auf einer <code>Leinwand</code> 4 Pixel nach oben zu bewegen, würden Sie die Eigenschaft <code>Geschwindigkeit</code> auf 4 [Pixel] setzen, die Eigenschaft <code>Intervall</code> auf 500 [Millisekunden], die Eigenschaft <code>Richtung</code> auf 90 [Grad Degree] und die Eigenschaft <code>Aktiv</code> auf <code>Wahr</code>.  Diese und andere Eigenschaften können jederzeit geändert werden.</p><p>Der Unterschied zwischen einem Ball und einem <code>BildSprite</code> ist, dass Letzteres sein Aussehen aus einer Bilddatei bezieht, während das Aussehen des Balls nur durch Änderung seiner <code>Zeichenfarbe</code> und seines <code>Radius</code> möglich ist.</p>
BarcodeScannerHelpStringComponentPallette = Komponente zur Verwendung des Barcode-Scanners um einen Barcode einzulesen
BluetoothClientHelpStringComponentPallette = Bluetooth Client Komponente
BluetoothServerHelpStringComponentPallette = Bluetooth Server Komponente
ButtonHelpStringComponentPallette = Button (Knopf) mit der Eigenschaft, "Klicks" zu erkennen.  Viele Aspekte seines Aussehens und ob er klickbar ist (<code>Aktiv</code>), können im Designer oder Codeblock-Editor eingestellt werden.
CamcorderHelpStringComponentPallette = Eine Komponente zur Aufnahme eines Videos über die Kamera des Geräts. Nach erfolgter Aufnahme steht der Name der Datei, die die Aufnahme auf dem Handy enthält, als Argument des NachAufnahne-Ereignis zur Verfügung. Der Dateiname kann zum Beispiel dazu verwendet werden, um die Eigenschaft "Quelle" einer VideoPlayer-Komponente zu setzen.
CameraHelpStringComponentPallette = Eine Komponente zur Aufnahme eines Fotos mit der Kamera des Geräts. Nach erfolgter Aufnahme steht der Name der Datei, die das Foto auf dem Handy enthält, als Argument des NachFoto-Ereignis zur Verfügung. Der Dateiname kann zum Beispiel dazu verwendet werden, um die Eigenschaft "Bild" einer Bild-Komponente zu setzen.
CanvasHelpStringComponentPallette = <p>Ein zweidimensionales, berührungsempfindliches, rechteckiges Feld, auf dem gezeichnet und Sprites bewegt werden können.</p> <p>Die <code>Hintergrundfarbe</code>, die <code>Zeichenfarbe</code>, das <code>Hintergrundbild</code>, die <code>Breite</code> und die <code>Höhe</code> der Leinwand können sowohl im Designer, als auch im Codeblock-Editor gesetzt werden. Die <code>Breite</code> und <code>Höhe</code> sind in Pixeln anzugeben und müssen positiv sein.</p> <p>Jede Position auf der Leinwand kann als Koordinatenpaar (X, Y) angegeben werden, wobei <ul> <li>X die Anzahl der Pixel vom linken Rand der Leinwand und</li> und <li>Y die Anzahl der Pixels vom oberen Rand der Leinwand</li></ul> definiert.</p> <p>Es stehen Ereignisse zur Verfügung, die mitteilen, wenn und wo eine Leinwand berührt oder ein <code>Sprite</code> (<code>BildSprite</code> oder <code>Ball</code>) gezogen wurden.  Darüber hinaus stehen Methoden zur Zeichnung von Punkten, Linien und Kreisen zur Verfügung.</p>
CheckBoxHelpStringComponentPallette = Kontrollkästchen (Kästchen zum Setzen von Haken), das ein Ereignis auslöst, wenn der Anwender darauf klickt. Kontrollkästchen haben viele Eigenschaften, die im Designer und Codeblock-Editor gesetzt werden können, die sein Aussehen beeinflussen.
ClockHelpStringComponentPallette = Nicht sichtbare Komponente, die die Uhr das Handays, einen Timer und zeitbezogene Berechnungen bereitstellt.
ContactPickerHelpStringComponentPallette = Ein Knopf, der, wenn er geklickt wird, eine Liste von Kontakten anzeigt, aus denen man einen auswählen kann. Nachem der Anwender eine Auswahl getroffen hat, werden die folgenden Eigenschaften des ausgewählten Kontakts zur weiteren Verwendung in die Komponente übernommen: <ul>\n<li> <code>KontaktName</code>: Der Name des Kontakts </li>\n <li> <code>EmailAdresse</code>: Die "primäre" E-Mail-Adresse des Kontakts </li>\n <li> <code>Foto</code>: Der Name der Datei auf dem Handy, die das Bild zum Kontakt enthält. Dieser Name kann zum Beispiel als <code>Foto</code>-Eigenschaft für das <code>Bild</code> oder für ein <code>BildSprite</code> verwendet werden.</li></ul>\n</p><p>Andere Eigenschaften betreffen das Aussehen des Knopfes (<code>TextAusrichtung</code>, <code>Hintergrundfarbe</code>, etc.) und ob dieser geklickt werden kann (<code>Aktive</code>).\n</p><p>Eine Auswahl wird nicht von allen Handys unterstützt. Wenn sie fehlschlägt, zeigt die Komponente eine entsprechende Benachrichtigung an. Das Verhalten der App in einem solchen Fehlerfall kann mit dem Ereignis-Handler Bildschirm.FehlerAufgetreten überschrieben werden.
DatePickerHelpStringComponentPallette = <p>Ein Knopf, der, wenn er geklickt wird, einen Popup-Dialog zeigt, in dem der Anwender ein Datum auswählen kann.</p>
EmailPickerHelpStringComponentPallette = Ein Email-Auswähler ist eine Art Textfeld. Wenn der Anweder beginnt den Namen oder die Email-Adresse eines Kontakts einzugeben, zeigt das Handy ein Aufklappmenü mit Auswahlmöglichkeiten, welche die Eingabe vervollständigen. Wenn viele Kontakte vorhanden sind, kann es einige Sekunden dauern, bis das Aufklappmenü erscheint, es werden aber schon unmittelbare Ergebnisse angezeigt, während die Übereinstimmungen noch berechnet werden. <p>Der Anfangsinhalt und der Inhalt des Textfelds nach der Benutzereingabe befindet sich in der <code>Text</code> Eigenschaft der Komponente. Wenn die <code>Text</code> Eigenschaft zu Beginn leer ist, wird für den Anwender der Text der <code>Hinweis</code> Eigenschaft schwach im Textfeld eingeblendet.</p>\n<p>Andere Eigenschaften beeinflussen das Aussehen des Textfeldes (<code>TextAusrichtung</code>, <code>Hintergrundfarbe</code>, etc.) und ob der Email-Auswähler aufrufbar ist (<code>Aktiv</code>).</p>\n<p>Textfelder wie dieses werden in der Regel zusammen mit <code>Knopf</code> Komponenten verwendet, auf die der Anwender klickt, wenn die Eingabe vollständig ist.
FileHelpStringComponentPallette = Nicht sichtbare Komponente zur Speichern und Lesen von Dateien. Diese Komponente kann verwendet werden, um in Dateien auf dem Gerät zu schreiben oder deren Inhalt zu lesen. Im Normalfall werden die Dateien in das private Verzeichnis geschrieben, das mit der App verknüpft ist. Der Companion stellt diesbezüglich einen Spezialfall dar, da er Dateien ins Verzeichnis /sdcard/AppInventor/data scheibt, um eine Fehlersuche zu ermöglichen. Wenn der Dateipfad mit einem Slash (/) beginnt, wird die Datei unterhalb des SD-Karten-Verzeichnisses /sdcard gesucht bzw. angelegt. Als Beispiel: Schreiben in die Datei mit Namen /myFile.txt schreibt in die tatscähliche Datei /sdcard/myFile.txt.
formComponentPallette = Formulario
FormHelpStringComponentPallette = Top-level Komponente, die alle anderen Komponenten des Programms enthält.
GameClientHelpStringComponentPallette = Stellt Applikationen einen Weg zur Verfügung, um mit Online-Game-Servern zu kommunizieren.
HorizontalArrangementHelpStringComponentPallette = <p>Ein Formatierungskomponente zur Gruppierung von Komponenten, die von links nach rechts dargestellt werden sollen.  Wenn Sie Komponenten übreinander darstellen möchten, verwenden Sie stattdessen<code>VertikaleAnordnung</code>.</p>
ImageHelpStringComponentPallette = Eine Komponente zur Darstellung von Bildern. Das darzustellende Bild sowie andere Aspekte des Aussehens des Bildes können im Designer oder Codeblock-Editor gesetzt werden.
ImagePickerHelpStringComponentPallette = Ein spezieller Knopf (Button) zur Auswahl von Bildern über die Galerie-App des Geräts. Nachdem vom Anwender ein Bild ausgewählt wurde, wird es auf der SD-Karte gespeichert und die <code>Bilddatei</code>-Eigenschaft wird auf den Namen gesetzt, unter dem das Bild gespeichert wurde. Um zu vermeiden, dass auf diese Weise der Speicherplatz aufgebraucht wird, werden maximal 10 Bilder gespeichert. Die Auswahl weiterer Bilder löscht dann vorherige Bilder, die älteren zuerst.
ImageSpriteHelpStringComponentPallette = <p>Ein "Sprite", das auf einer <code>Leinwand</code> plaziert werden kann, auf der es auf Berührungen und Zug, mit anderen Sprites (<code>BildSprite</code>s und andere <code>Bälle</code>) und den Rändern der Leinwand interagieren sowie sich entsprechend seiner Eigenschaftswerte bewegen kann. Sein Aussehen wird durch das Bild bestimmt, das über seiner <code>Bild</code>-Eigenschaft festgelegt ist (es sei denn, seine Eigenschaft <code>Sichtbar</code> ist <code>Falsch</code>).</p> <p>Um zum Beispiel ein <code>BildSprite</code> alle 1000 Millisekunden (jede Sekunde) auf einer <code>Leinwand</code> 10 Pixels nach links zu bewegen, würden Sie die Eigenschaft <code>Geschwindigkeit</code> auf 4 [Pixel] setzen, die Eigenschaft <code>Intervall</code>auf 10000 [Millisekunden], die Eigenschaft <code>Richtung</code> auf 180 [Grad Degree] und die Eigenschaft <code>Aktiv</code> auf <code>Wahr</code>.</p> <p>Ein Sprite dessen <code>Rotiert</code>-Eigenschaft <code>Wahr</code> ist, dreht sein Bild wenn die Eigenschaft <code>Richtung</code> des Sprits geändert wird. Die Kollisionsprüfung zwischen Sprites basiert hingegen momentan noch auf den nicht rotierten Bildern, so dass diese für gedrehte Sprites ungenau ist, insbesondere, wenn deren Bilder unterschiedlich hoch und breit sind.  Alle Eigenschaften des Sprites können jederzeit vom Programm aus geändert werden.</p>
LabelHelpStringComponentPallette = Ein Label (Sticker, Aufkleber) zeigt einen Text, der durch seine Eigenschaft <code>Text</code> festgelegt wird.  Andere Eigenschaften, die alle im Designer oder Codeblock-Editor gesetzt werden können, steuern das Aussehen und die Positionierung des Texts.
ListPickerHelpStringComponentPallette = <p>A button that, when clicked on, displays a list of texts for the user to choose among. The texts can be specified through the Designer or Blocks Editor by setting the <code>ElementsFromString</code> property to their string-separated concatenation (for example, <em>choice 1, choice 2, choice 3</em>) or by setting the <code>Elements</code> property to a List in the Blocks editor.</p><p>Setting property ShowFilterBar to true, will make the list searchable.  Other properties affect the appearance of the button (<code>TextAlignment</code>, <code>BackgroundColor</code>, etc.) and whether it can be clicked on (<code>Enabled</code>).</p>
ListViewHelpStringComponentPallette = <p>Dies ist eine sichtbare Komponente, welche es ermöglicht eine Liste von Textelementen auf Ihrem Bildschirm anzuzeigen. <br> Die Liste kann mit der ElementsFromString Eigenschaft oder unter Verwendung des Elements Block im Block-Editor eingerichtet werden. <br> Achtung: Diese Komponente funktioniert auf scrollbaren Bildschirmen nicht korrekt.</ p>
LocationSensorHelpStringComponentPallette = Nicht sichtbare Komponente, die Standortinformationen, einschließlich Längengrad, Breitengrad, Höhe (wenn vom Gerät unterstützt) und Adresse. Diese kann auch "Geokodierung", das Umwandeln einer angegebenen Adresse (nicht zwingend die aktuelle) auf einen Breitengrad (mit dem <code> BreitengradAusAdresse</code> Methode) und einer Länge (mit der <code> LängengradAusAddress </code> Methode ). </p> \n<p> Damit diese Komponente benutzt werden kann, muss ihre <code>Aktviert </code> Eigenschaft auf WAHr gesetzt sein. Außerdem muss im Gerät Standorterkennung durch WLAN oder GPS aktiviert sein.</p> \n Standort-Informationen sind möglicherweise nicht sofort verfügbar, wenn die Anwendung gestartet wird. Entweder warten Sie nach dem Start der App, bis ein Standort erkannt wurde, oder Sie warten auf das OnLocationChanged Ereignis.
NearFieldHelpStringComponentPallette = <p>Nicht sichtbare Komponente für NFC Einsatzmöglichkeiten. Aktuell unterstützt diese Komponente das Lesen und Schreiben von Text-Tags (sofern dies vom Gerät unterstützt wird)</p><p>Um Text-Tags zu lesen oder zu schreiben, muss bei der Komponente die Eigenschaft <code>LeseModus</code> entweder auf True oder False gesetzt sein.</p>
NotifierHelpStringComponentPallette = Die Benarichtigungs Komponente zeigt einen Warnungs Dialoge, Nachrichten, temporäre Benarichtigungen und Android Log Einträge über die folgenden Methoden: <ul><li> ZeigeNachrichtsDialog: zeigt eine Nachricht welche mit einen Knopf ausgeblendet werden muss.</li><li> ZeigeAuswahlDialog: Zeigt eine Nachricht mit zwei Knöpfen die der Nutzer zum auwählen benutzen darf, zum Beispiel, Ja oder Nein, dann wird das NachAuswahl Event ausgelöst.</li><li> ZeigeTextDialog: Lässt den Nutzer eine Nachricht zum antworten auf die Benarichtigung eingeben, damit wird das NachTextEingabe Event ausgelöst. <li> ZeigeAlarm: Zeigt eine temporäre Benarichtigung welche nach der Zeit von alleine verschwindet.</li><li> ProtokolierFehler: Protokolliert eine Fehlermeldung in den Android Log. </li><li> ProtokollInfo: Protokolliert eine Info Nachricht in den Android Log.</li><li> ProtokollierWarnung: Protokolliert eine Warn Nachricht in den Android Log.</li><li>Die Nachrichten in den Dialogen (aber nicht die Benarichtigung) kann formatiert werden mit den folgenden HTML tags:&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li>Du kannst auch die Schrift benutzen um die Farbe zu ändern, zum Beispiel, &lt;font color="blue"&gt;. Manche verfügbare Farbennamen sind aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white, and yellow</li></ul>
NxtColorSensorHelpStringComponentPallette = Eine Komponente, die eine High-Level Schnittstelle zu einem Farbsensor eines LEGO MINDSTORMS NXT Roboters bietet.
NxtDirectCommandsHelpStringComponentPallette = Eine Komponente, die eine Low-Level Schnittstelle für einen LEGO MINDSTORMS NXT Roboter bietet, um NXT Direct Instruktionen zu senden.
NxtDriveHelpStringComponentPallette = Eine Komponente, die eine High-Level Schnittstelle zu einem LEGO MINDSTORMS NXT Roboter bietet, damit dieser bewegt und gedreht werden kann.
NxtLightSensorHelpStringComponentPallette = Eine Komponente, die eine High-Level Schnittstelle zu einem Lichtsensor eines LEGO MINDSTORMS NXT Roboters bietet.
NxtSoundSensorHelpStringComponentPallette = Eine Komponente, die eine High-Level Schnittstelle zu einem Geräuschsensor eines LEGO MINDSTORMS NXT Roboters bietet.
NxtTouchSensorHelpStringComponentPallette = Eine Komponente, die eine High-Level Schnittstelle zu einem Berührungssensor eines LEGO MINDSTORMS NXT Roboters bietet.
NxtUltrasonicSensorHelpStringComponentPallette = Eine Komponente, die eine High-Level Schnittstelle zu einem Ultraschallsensor für LEGO MINDSTORMS NXT Roboter  bietet.
OrientationSensorHelpStringComponentPallette = <p>Nicht sichtbare Komponente, die Informationen zur physischen Ausrichtung des Gerätes in drei Dimensionen liefert: <ul> <li> <strong>Rollen</strong>: 0 Grad, wenn das Gerät waagerecht steht, erhöhe auf      90 Grad, wenn das Gerät auf die linke Seite geneigt ist und      reduziere auf -90 Grad, wenn das Gerät auf die rechte Seite geneigt ist.      </li> <li> <strong>Neigung</strong>: 0 Grad, wenn das Gerät waagerecht steht, auf      90 Grad, wenn das Gerät so geneigt ist, dass dessen Oberkante nach unten zeigt,      auf 180 Grad, wenn es umfällt. Analog dazu,      wenn das Gerät so geneigt ist, dass die Unterkante nach unten zeigt, reduziere die Neigung auf -90      Grad und dann schrittweise auf -180 Grad, sodass das Gerät wieder umgedreht      wird.</li> <li> <strong>Richtungswinkel</strong>: 0 Grad, wenn die Oberkante vom Gerät       nach Norden zeigt, 90 Grad, wenn es nach Osten zeigt, 180 Grad,      wenn es nach Süden zeit und 270 Grad, wenn es nach Westen zeigt,      etc.</li></ul>     Diese Messangaben gehen davon aus, dass sich das Gerät selbst nicht bewegt.</p>
PasswordTextBoxHelpStringComponentPallette = <p>Eingabefeld für Passwörter.  Dies ist die gleiche <code>TextBox</code> Komponente mit dem Unterschied, dass die vom Benutzer eingegebenen Zeichen nicht angezeigt werden.</p><p>Der Wert des Textes kann über die Eigenschaft <code>Text</code> ausgelesen oder gesetzt werden. Falls die Eigenschaft nicht gesetzt ist, kann die <code>Hint</code> Eigenschaft genutzt werden, um dem Benutzer zu erläutern, welche Eingabe erwartet wird.</p> <p>Texteingabefelder werden in der Regel mit der <code>Button</code> Komponente verwendet, wenn der Benutzer nach Eingabe des Textes auf den Button tippt.</p>
PedometerHelpStringComponentPallette = Komponente, die Schritte zählt.
PhoneCallHelpStringComponentPallette = <p>Eine nicht sichtbare Komponente, die eine Telefonnummer wählt, die in der <code>TelefonNummer</code> Eigenschaft übergeben wurde, sie kann entweder im Design oder im Block Editor gesetzt werden. Die Komponente hat eine <code>RufeAn</code> Methode, die dem Programm den Start eines Telefonarufs ermöglicht. </p><p>Diese Komponente wird häufig in der <code>KontaktPicker</code> Komponente verwendet, die dem Anwender die Auswahl eines auf seinem Telefon gespeicherten Kontakts ermöglicht.  Sie setzt die <code>TelefonNummer</code> Eigenschaft.</p><p> Zur driekten Spezifizierung der Telefonnummer (z.B.: 650-555-1212), kann die <code>TelefonNummer</code> Eigenschaft als Text (z.B.: "6505551212") gesetzt werden.  Striche, Punkte und Anführungszeichen können enthalten sein (z.B: "(650)-555-1212"), sie werden jedoch ignoriert; Leerstellen sollten nicht enhalten sein.</p>
PhoneNumberPickerHelpStringComponentPallette = Ein Knopf welcher wenn er gedrückt wird, die Liste auswählbarer Kontakte anzeigt. Nachdem der Nutzer eine Auswahl getroffen hat , werden diese bestimmten Dinge abgerufen:  <ul>\n<li> <code>KontaktName</code>: Der "Name" des Kontakts </li>\n<li> <code>TelefonNummer</code>: Die "Telefonnummer" des Kontakts </li>\n<li> <code>EmailAdresse</code>: Die E-mail-Adresse des Kontakts </li> <li><code>Bild</code>: Der Name der Datei die das Kontaktbild enthält, welche als <code>Bild</code> Eigenschaftswert für das <code>Zeichen</code> oder <code>ZeichenAnimation</code> component benutzt werden kann.</li></ul>\n</p><p>Andere Eigenschaften beeinflussen das Aussehen des Knopfs (<code>TextAusrichtung</code>,<code>HintergrundFarbe</code>, etc.) und überall wo drauf gedrückt werden kann (<code>Aktiviert</code>).</p>\n<p>Das Aussuchen wird nicht von jeden Telefon unterstützt. Wenn es fehlschlägt, wird diese Komponente eine Benarichtigung anzeigen. Diese Anzeige kann entfernt werden mit dem Screen.ErrorOccurred Event.
PhoneStatusHelpStringComponentPallette = Komponente, die Informationen über das Gerät wiedergibt.
PlayerHelpStringComponentPallette = Multimedia Komponente die Audiodateien abspielt und die Vibrationsfunktion kontrolliert. Der Name eines Multimediafeldes wird in der Eigenschaft <code>Quelle</code> angegeben, sie kann im Designer oder im Block Editor angeben werden. Die Vibrationsdauer wird im Block Editor in Millisekunden (tausendstel einer Sekunde) angegeben.\n<p>Unterstützte Audioformate, siehe: <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Androidunterstützte Medienformate</a>.</p>\n<p>Diese Komponete ist beispielsweise für lange Musikdateinen geeignet, wohingegen die <code>Ton</code> Komponete für kurze Dateien, wie zum Beispiel Soundeffekte, bessser geeignet ist.</p>
SharingHelpStringComponentPallette = Teilen ist eine unsichtbare Komponente, die das Teilen von Dateien und/ oder Nachrichten zwischen Ihrer App und anderer auf Endgeraeten installierten Apps ermöglicht. Die Komponente zeigt eine Liste installierter Apps, die die verfügbaren Informationen verarbeiten können. Außerdem können die Benutzer beispielsweise eine "eMail App", eine "Sozial Net App", oder eine "Text App" u.s.w zum Teilen von Inhalten  auswählen.<br>Der Dateipfad kann direkt von anderen Komponenten wie zum Beispiel Kamera oder BildPicker übernommen werden, es kann aber auch direkt vom Speicherplatz gelesen werden. Beachten Sie, dass unterschiedliche Geräte den Speicherplatz unterschiedlich behandeln, deshalb müssen einzelen Sachverhalte unterschiedlich behandelt werden. Wenn Sie beispielsweise eine Datei namens Pfeil.gif im Dateiordner <code>Appinventor/assets</code> vorliegen haben könnte der Dateipfad  <ul><li><code>"file:///sdcard/Appinventor/assets/arrow.gif"</code></li> oder <li><code>"/storage/Appinventor/assets/arrow.gif"</code></li></ul> lauten.
SliderHelpStringComponentPallette = Fügt einen Schieberegler hinzu. Sie können den Regler nach rechts oder links bewegen. Nachdem der Schieberegler verstellt wurde, wird das PositonGerändert Ereignis ausgeloest und die Schiebereglerposition zurückgegeben. Der Rückgabewert des Schiebereglers kann zur dynamischen Veränderung anderer Komponenten, wie zum Beispiel die Größe einer Textbox oder der Radius eines Balles, verwendet werden.
SoundHelpStringComponentPallette = <p>Eine Multimediakomponente zum Abspielen von Tondateien. Optional kann im Block Editor für einige Millisekunden (Tausendstel einer Sekunde) der Vibrationsmodus aktiviert werden.</p><p> Siehe auch:<a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Androidunterstuetzte Tonformate</a>.</p><p>Die <code>Klang</code> Komponete ist besser für Klangeffekte geeignet, während die <code>Spieler</code> Komponete besser für längere Tön, wie zum Beispiel Musikstücke, geeignet ist.</p>
SoundRecorderHelpStringComponentPallette = <p>Multimediakomponente zur Audioaufnahme.</p>
SpeechRecognizerHelpStringComponentPallette = Spracherkennungskomponete zur Konvertierung von Sprache zu Text
SpinnerHelpStringComponentPallette = <p>Drehfeldkomponete die in  einem Benachrichtigungsfenster eine Liste von Elementen anzeigt. Diese Elemente können im Designer oder Blockeditor unter der Eigenschaft <code>EintraegeAusZeichenkette</code> zu einem zeichenseparierten String verkettet werden. (Zum Beispiel: <em>Auswahl1, Auswahl 2, Auswahl 3</em>). Alternativ führt das Setzen der  <code>Eintraege</code> Eigenschaft im Block Editor zu einer Liste von Elementen.</p>
TableArrangementHelpStringComponentPallette = <p>Ein Formatierungselement in das Komponeten paziert werden können, die in tabellarischer Form angezeigt werden sollen.</p>
TextBoxHelpStringComponentPallette = <p>Ein Textfeld, dass dem Benutzern Texteintraege ermoeglicht. Ein Standardtext kann in der <code>Text</code> Eigenschaft vorgegeben werden. Die <code>Hinweis</code> Eigenschaft ermöglicht die Anzeige eines ausgegrauten Hilfstextes im Textfeld. Die <code>MultiLine</code> Eigenschaft bestimmt ob der Text mehr als eine Zeile haben kann. Bei einer einzeiligen Textbox wird die Tastatur automatisch ausgebledet (geschlossen) sobald die Eingabertaste (Entertaster) gedrueckt wird.</p><p>Die <code> NurZahlen</code> Eigenschaft unterbindet die Eingabe nichtnumerischer Zeichen.</p><p> Andere Eigenschaften betreffen die Darstellung des Eingabefeldes (<code>TextAusrichtung</code>,<code>HintergrundFarbe</code>, u.s.w.) und ob das Eingabefed aktiv oder nicht <code>aktiv</code> ist.</p><p>Eingabefelder werden in der Regel in Kombination mit Knoepfen verwendet. Der Benutzer kann einen Knopf druecken sobald er die Texteingabe beendet hat.</p><p>
TextToSpeechHelpStringComponentPallette = Komponente zu Nutzung von TextZuSprache zur Sprachausgabe von Text
TextingHelpStringComponentPallette = <p>Eine Komponente, die, wenn die <code>SendeNachricht</code> Methode aufgerufen wird, den Text, der in <code>Nachricht</code> gespeichert ist, an das Telefon mit der Telefonnummer <code>TelefonNummer</code> sendet.</p> <p>Falls <code>EmpfangAktiviert</code> auf 1 gesetzt ist, wird die Nachricht <b>nicht</b> empfangen. Falls <code>EmpfangAktiviert</code> auf 2 gesetzt ist, wird die Nachricht nur empfangen, falls die Anwendung gerade läuft.  Falls <code>EmpfangAktiviert</code> auf 3 gesetzt ist, werden Nachrichten empfangen, falls die Anwendung gerade läuft <b>und</b> wenn die Anwendung gerade nicht läuft, werden die Nachrichten gespeichert und dem Nutzer wird eine Benachrichtigung angezeigt.</p> <p>Wenn eine Nachricht empfangen wird, wird das Ereignis <code>NachrichtErhalten</code> ausgelöst, außerdem werden die Sendernummer und die Nachricht bereitgestellt.</p> <p>Eine App die diese Komponente enthält, wird Nachrichten erhalten, auch wenn sie im Hintergrund läuft (d.h. wenn sie gerade nicht auf dem Bildschirm sichtbar ist).  Außerdem auch, wenn die App auf dem Telefon installiert ist aber gerade nicht läuft.  Falls das Telefon eine Textnachricht empfängt während die App gerade nicht im Vordergrund läuft, wird es eine Benachrichtigung in der Benachrichtigungsleiste anzeigen. Wenn man diese antippt, wird die App geöffnet. Als Appentwickler solltest du den Benutzern die Möglichkeit geben, die EmpfangAktiviert-Eigenschaft zu ändern, damit Sie ihr Telefon Textnachrichten ignorieren lassen können. </p> <p> Falls die GoogleVoiceAktiviert-Eigenschaft auf wahr gesetzt ist, können Nachrichten über WLAN mit Google Voice gesendet werden. Dazu muss der Benutzer einen Google Voice Account hat und die Google Voice App auf dem Telefon installiert haben.  Diese Funktion benötigt Android 2.0 (Eclair) oder höher.</p> <p>Um die Telefonnummer zu speichern (z.B. 650-555-1212), setze das <code>TelefonNummer</code> Feld als Text mit der entsprechenden Nummer (z.B. 6505551212). Bindestriche, Punkte und Klammern können verwendet werden (z.B. (650)-555-1212) , diese werden aber ignoriert; Leerzeichen dürfen nicht verwendet werden.</p> <p>Eine andere Methode um eine Telefonnummer zu setzen ist die <code>TelefonNummerPicker</code> Komponente, welche es Benutzern erlaubt eine Telefonnummer aus ihren Kontakten zu wählen. </p>
TimePickerHelpStringComponentPallette = <p>Ein Knopf, der sobald er angeklickt wurde, ein Dialogfeld anzeigt, das dem Anwender die Auswahl einer Uhrzeit erlaubt.</p>
TinyDBHelpStringComponentPallette = TinyDatenbank ist eine nicht sichtbare Komponente für das Speichern von Daten für eine App.<p> Apps welche mit App Inventor erstellt werden, werden bei jedem Start neu initialisiert, das bedeutet, dass Werte, die Benutzer gesetzt haben beim Beenden der App verloren gehen. Im Gegensatz dazu ist TinyDB eine <em>persistente</em> Speichermöglichkeit. Daten die mit TinyDB gespeichert werden stehen jedesmal zur Verfügung, wenn die App gestartet wird. Beispielsweise kann man auf diese Art Highscores eines Spiels speichern, damit sich auch noch vorhanden sind, wenn man das Spiel einmal geschlossen hat.</p><p> Dateneinträge werden als Zeichenketten mit <em>Tags</em> gespeichert. Um einen Eintrag zu speichern, müssen Sie einen Tag angeben, unter dem der Eintrag abgelegt werden soll. Folglich kannst du Daten abrufen, indem du den entsprechenden Tag angibst.</p><p> Es gibt nur eine Datenbank pro App. Selbst wenn Sie mehrere TinyDB Komponenten benutzen, werden diese die selbe Datenbank verwenden. Um den Effekt mehrerer Datenbanken zu erreichen, benutzen Sie unterschiedliche Schlüssel. Weiterhin hat jede App eine eigene Datenbank. Sie können Daten nicht mittels TinyDB zwischen Apps auf einem Telefon austauschen. Sie <em>können</em> jedoch mittels TinyDB Daten zwischen verschiedenen Bildschirmen einer Multi-Bildschirm App austauschen.</p><p> Wenn sie Apps mit Hilfe des AI Begleiters entwickeln, teilen sich Apps mit diesem Begleiter die selbe TinyDB Datenbank. Diese ist nicht mehr der Fall, wenn die Apps gepackt werden. Während der Entwicklung sollten Sie allerdings jedes mal die TinyDB Datenbank leeren, wenn Sie anfangen, eine neue App zu entwickeln.</p>
TinyWebDBHelpStringComponentPallette = Nicht sichtbare Komponente die mit einem Webservice kommuniziert. Sie speichert und empfängt Informationen.
TwitterHelpStringComponentPallette = Eine nicht sichtbare Komponente welche die Kommunikation mit <a href="http://www.twitter.com" target="_blank">Twitter</a> ermöglicht. Sobald sich der Benutzer mit seinem Twitter Account angemeldet hat, (und die Autorisierung durch ein <code> IstAutorisiert </code> Ereignis bestätigt wurde) sind viele weitere Aktionen verfügbar:<ul><li>Twitter nach tweets oder Label durchsuchen (<code> DurchsucheTwitter</code></li>\n<li>Einen Tweet senden (<code> Tweet </code></li>\n<li>Einen Tweet mit Bild senden (<code> TweetMitBild </code>)</li>\n<li>Eine Direktnachricht an einen bestimmten Nutzer schicken (<code>DirektNachricht</code</in>\n<li>Die neuest an den angemeldeten Nutzer gesendete Direktnachricht empfangen (<code> AnfrageDirektNachricht </code>)</li>\n<li>Einem bestimmten Nutzer folgen (<code> Folge </code>)</li>\n<li>Aufhören einem bestimmten Nutzer zu folgen (<code>StoppFolgen </code>)</li>\n<li>Eine Liste aller Nutzer, die dem angemeldeten Nutzer folgen anfragen (<code> AbfrageFollower </code>)</li>\n<li>Abfragen der neuesten Nachrichten von Nutzern denen der angemeldete Nutzer folgt (<code> AbfrageFreundZeitZeitleiste </code>)</li>\n<li>Abfrage der neuesten Erwähnungen des angemeldeten Nutzers (<code> AbfrageErwähnungen</code>)</li></ul></p>\n<p>Sie müssen einen  Nutzerschlüssel und eine Nutzergeheimnis für Twitter Autorisierungen  für ihre spezifische App von http://twitter.com/oauth_clients/new erhalten.
userInterfaceComponentPallette = Benutzerschnitstelle
VerticalArrangementHelpStringComponentPallette = <p>Ein Formatierungselement in das Komponenten plaziert werden, die untereinander angezeigt werden sollen. (Die erste Kind Komponente wird oben gespeichert, die zweite darunter, usw.) Wenn Sie Komponenten nebeneinader angezeigt haben möchten benutzen Sie bitte: <code>HorizontaleAnordnung</code></p>
VideoPlayerHelpStringComponentPallette = Eine Multimedia Komponente zum Abspielen von Videodateien. Wenn die Anwendung gestartet wird, wird der Videoplayer als Rechteck auf dem Bildschirm angezeigt. Sobald der Nutzer das Rechteck berührt, erscheinen Kontrollelemente zum Anhalten/Abspielen des Videos, sowie zum vorwärts und rückwärts Springen. Die Anwendung kann das Verhalten auch durch Aufrufen der Methoden <code>Start</code>, <code>Pause</code> und <code>SpringeZu</code>. <p> Videodateien sollten in den Formaten: Windows Media Video (.wmv), 3GPP (.3gp) oder MPEG-4 (.mp4) vorliegen. Für mehr Details über zulässige Formate, besuchen Sie <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Von Android unterstützte Medienformate</a>. </p> <p> App Inventor für Android erlaubt nur Dateien bis zu 1 MB und erlaubt nur Anwendungen mit einer maximalen Größe von 5 MB. Diese 5 MB stehen nicht komplett für Mediendateien (Video, Audio) zur Verfügung. Sollten ihre Mediendateien zu groß sein, kann es zu Fehlern beim Packen oder Installieren ihrer Anwendungen kommen. In diesem Fall sollten die die Anzahl ihrere Mediendateien oder deren Größre reduzieren. Die meisten Programme zur Videobearbeitung, beispielsweise Windows Movie Maker oder Apple iMovie, können ihnen dabei helfen die Größe ihrer Dateien zu reduzieren indem sie Videos zu kürzen oder in kompaktere Formate zu überführen.</p><p> Sie können auch eine URL als Quelle angeben, diese muss dann auf das zu streamende Video und nicht etwa auf ein Programm welches das Video abspielt zeigen.
VotingHelpStringComponentPallette = <p>Die Abstimmungskomponete ermöglicht Anwendern die durchführung einer Abstimmung durch Kommunikation mit einem Webservice. Die Wahlergenisse des Benutzers werden später zurückgesendet.</p>
WebHelpStringComponentPallette = Nichtsichtbare Komponente die die HTTP Funktionen GET, POST, PUT und DELETE bereitstellt.
WebViewerHelpStringComponentPallette = Komponente zum Anzeigen von Webseiten. Die Haupt-URL kann durch den Designer oder im Block-Editor gesetzt werden. Die Ansicht kann so eingestellt werden, dass den Links folgt, wenn sie angetippt werden. Achtung: Dies ist kein vollwertiger Browser. Zum Beispiel führt das Drücken der Zurück-Taste dazu, dass die App geschlossen wird, anstatt auf die vorherige Seite zurück zu gehen.<p /> Sie können die WebBetrachter.WebAnsichtString Eigenschaft nutzen um zwischen Ihrer App und Javascriptcode zu vermitteln. In der App benutzen die Getter und Setter fürWebAnsichtStrings. In der WebAnsicht wird Javascript eingebunden, welches das fenster.AppInventor Objekt referenziert. Mit Hilfe der Methoden <em> getWebAnsichtString() </em> und <em> setWebAnsichtString(Text)</em>. <p /> Falls beispielsweise die Webansicht eine Seite mit Javascript Befehlen öffnet:<br /> <em> dokument.schreiben("Die Antwort ist" +fenster.AppInventor.getWebAnsichtString());</em> <br/>, falls sie nun WebAnsicht.WebAnsichtString auf "Hallo" setzen, wird die Seite </br> <em> Die Antwort ist Hallo </em> anzeigen. <br /> Falls die Webseite Javascript enthält, welches den Befehl <br /> <em> fensterAppInventor.setWebAnzeigeString("hello from Javascript")</em>ausführt , <br /> dann wird der Inhalt von WebAnzeigeString auf <br /> <em> hello from Javascript </em> gesetzt.
YandexTranslateHelpStringComponentPallette = Verwende diese Komponente, um Wörter und Sätze in verschiedene Sprachen zu übersetzen. Diese Komponente benötigt einen Internetzugang, da sie Übersetzungen von dem Dienst Yandex.Translate anfordert. Lege die Ausgangssprache und die Zielsprache fest mit einem Code mit zwei Buchstaben. Zum Beispiel übersetzt "en-es" vom Englischen ins Spanische und "es-ru" vom Englischen ins Russische. Wenn du die Ausgangssprache offen lässt, wird der Dienst versuchen, die Sprache selbst zu erkennen. Wenn man also nur "es" eingibt, wird versucht, die Ausgangssprache automatisch zu erkennen und ins Spanische zu übersetzen. <p/> Diese Komponente wird vom Yandex-Übersetzungsdienst betrieben. Mehr Information dazu auf http://api.yandex.com/translate/ , einschließlich einer Liste der verfügbaren Sprachen und der Bedeutungen von Sprachcodes und Statuscodes. <p/> Beachte: Übersetzungen laufen asynchron im Hintergrund ab. Wenn die Übersetzung fertig ist, wird das "GotTranslation" - Ereignis ausgelöst.
accelerometerSensorComponentPallette = Beschleunigungssensor
activityStarterComponentPallette = AktivitätsStarter
ballComponentPallette = Ball
barcodeScannerComponentPallette = BarcodeScanner
bluetoothClientComponentPallette = BluetoothClient
bluetoothServerComponentPallette = BluetoothServer
buttonComponentPallette = Taste
camcorderComponentPallette = Videorekorder
cameraComponentPallette = Kamera
canvasComponentPallette = Zeichenfläche
checkBoxComponentPallette = Ankreuzfeld
clockComponentPallette = Uhr
connectivityComponentPallette = Verbindung
contactPickerComponentPallette = KontaktAuswahl
datePickerComponentPallette = DatumAuswahl
drawingAndAnimationComponentPallette = Zeichnen und Animation
emailPickerComponentPallette = EmailAuswahl
experimentalComponentPallette = Experimentell
fileComponentPallette = Datei
fusiontablesControlComponentPallette = KreuztabelleKontrolle
gameClientComponentPallette = SpielClient
horizontalArrangementComponentPallette = HorizontaleAusrichtung
imageComponentPallette = Bild
imagePickerComponentPallette = BildAuswahl
imageSpriteComponentPallette = ZeichenAnimation
internalUseComponentPallette = Nur zum interen Gebrauch.
labelComponentPallette = Bezeichnung
layoutComponentPallette = Anordnung
legoMindstormsComponentPallette = LEGO MINDSTORMS
listPickerComponentPallette = ListenAuswahl
listViewComponentPallette = ListenAnsicht
locationSensorComponentPallette = OrtsSensor
mediaComponentPallette = Medien
nearFieldComponentPallette = NearField
notifierComponentPallette = Benachrichtigung
nxtColorSensorComponentPallette = NxtFarbSensor
nxtDirectCommandsComponentPallette = NxtRichtungsKommando
nxtDriveComponentPallette = NxtMotor
nxtLightSensorComponentPallette = NxtLichtSensor
nxtSoundSensorComponentPallette = NxtGeraeuschSensor
nxtTouchSensorComponentPallette = NxtBeruehrungsSensor
nxtUltrasonicSensorComponentPallette = NxtUltraschallSensor
orientationSensorComponentPallette = OrientierungsSensor
passwordTextBoxComponentPallette = PasswortTextBox
phoneCallComponentPallette = TelefonAnruf
phoneNumberPickerComponentPallette = TelefonNummernAuswahl
playerComponentPallette = Musikwiedergabe
sensorsComponentPallette = Sensoren:
sharingComponentPallette = Teilen
sliderComponentPallette = Schieberegler
socialComponentPallette = SocialMedia
soundComponentPallette = Tonwiedergabe
soundRecorderComponentPallette = AusioAufnahmegerät
speechRecognizerComponentPallette = SprachErkennung
spinnerComponentPallette = Drehfeld
storageComponentPallette = Speicher
tableArrangementComponentPallette = Tabelle
textBoxComponentPallette = TextFeld
textToSpeechComponentPallette = TextZuSprache
textingComponentPallette = Texten
timePickerComponentPallette = ZeitAuswahl
tinyDBComponentPallette = TinyDatenbank
tinyWebDBComponentPallette = WebDatenbank
twitterComponentPallette = Twitter
uninitializedComponentPallette = Nicht initialisiert
verticalArrangementComponentPallette = VertikaleAusrichtung
videoPlayerComponentPallette = Videowiedergabe
votingComponentPallette = Abstimmung
webComponentPallette = Web
webViewerComponentPallette = WebBetrachter
yandexTranslateComponentPallette = YandexUebersetze
