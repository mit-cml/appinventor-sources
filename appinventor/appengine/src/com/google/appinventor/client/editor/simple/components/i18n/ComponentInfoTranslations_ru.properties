AccelerometerSensorHelpStringComponentPallette = Невидимый компонент, который определят встряску устройства и измеряет ускорение устройства в трёх измерениях используя различные единицы измерения (м/с<sup>2</sup>). Может измерять значения осей. Â Ускорение по  <ul>\n<li> <strong> оси X</strong>:Значение=0 используется когда устройство находится на ровной Â Â Â Â Â поверхности, положительное - когда телефон наклонен Â Â Â Â Â  налево (например, когда правая сторона поднята) отрицательные значения используются если телефон наклонен направо. <li> <strong>Ускорение по оси Y</strong>:Значение=0 если устройство лежит на ровной Â Â Â Â Â поверхности,положительные значения используются если задняя часть устройства поднята вверх,отрицательные если передняя часть устройства поднята вверх. <li> <strong>Ускорение по оси Z</strong>:если устройство находится дисплеем вверх,то оно равно -9.8,если устройство находится дисплеем вниз то оно равно +9.8, и Â Â Â Â Â  0 - если устройство находится перпендикулярно поверхности. Это значение может изменяться при ускорении в направлении или против Â Â Â Â Â силы тяжести</li></ul>
ActivityStarterHelpStringComponentPallette = Компонент, который может запустить действие, используя <code>StartActivity</code>  метод.<p>Действия которые могут быть запущены: <ul> \n<li> Запустить другое приложение через App Inventor </li> \n<li> Запустить камеру </li> \n<li> Открыть поисковую систему</li> \n<li> Открыть браузер на определённой странице</li> \n<li> Открыть приложение ''Карты'',с  отображением заранее заданной местности</li></ul> \nТакже возможно использование этого компонента для возвращения текстовых данных. Â Для более подробной информации об этом компоненте смотрите примеры приложений.</p>
BallHelpStringComponentPallette = <p>Круглый "спрайт", который может быть помещен на <code>Холст</code>, где он может откликаться на прикосновения и перетаскивания и взаимодействовать с другим спрайтом, (<code>СпрайтомИзображением</code> или другим  <code>Шаром</code>) и краем Холста, а также перемещаться в соответствии со своими свойствами.</p><p>Например, для того, чтобы <code>Шар</code> двигался на 4 пикселя к верхнему краю <code>Холста</code> каждые 500 милисекунд (половину секунды), вам нужно установить свойство <code>Скорость</code> в 4 [пикселя], свойство <code>Интервал</code> в 500 [милисекунд], свойство <code>Направление</code> в 90 [градусов], а свойство <code>Включить</code> в положение <code>Верно</code>. Â Все эти свойства можно изменить в любое время.</p><p>Различие между Шаром и его  <code>СпрайтомИзображением</code> состоит в том, что изображение последнего может быть взято из любого файла изображения, а для свойств Шара можно лишь задать их свойства <code>ЦветОкраски</code> и <code>Радиус</code>.</p>
BarcodeScannerHelpStringComponentPallette = Компонент, использующий сканер штрихкодов для прочтения штрихкода
BluetoothClientHelpStringComponentPallette = Элемент ''Bluetooth клиент''
BluetoothServerHelpStringComponentPallette = Элемент ''Bluetooth сервер''
ButtonHelpStringComponentPallette = Кнопка, реагирующая на щелчки мыши. Â Вид кнопки, а также её способность реагировать на щелчки,  (<code>Включено</code>), можно задать в Редакторе блоков или Дизайнере.
CamcorderHelpStringComponentPallette = Компонент для записи видео с помощью видеокамеры устройства. После записи видео, имя файла на телефоне, содержащем клип, доступно в качестве аргумента события ПослеЗаписи. Имя файла может быть использовано, например, для установки свойства source компонента ВидеоПлеер.
CameraHelpStringComponentPallette = Элемент, предназначенный для фотографирования с помощью камеры телефона. После того, как фотография будет сделана, название файла фотографии будет доступно в качестве аргумента события ПослеФотографии. Этот файл можно использовать, например, для того, чтобы установить свойство Фотографии в качестве элемента изображения.
CanvasHelpStringComponentPallette = <p>Двумерная сенсорная прямоугольная панель, на которой можно рисовать и перемещать изображения (спрайтов).</p> <p> <code>ЦветФона</code>, <code>ЦветКраски</code>, <code>ФоновоеИзображение</code>, <code>Ширина</code>и<code>Высота</code> Холста могут быть заданы в Редакторе дизайна или в Редакторе Блоков. <code>Ширина</code> и <code>Высота</code> задаются в пикселях и должны быть положительными числами.</p><p>Любая точка на Холсте может быть задана парой координат  (X, Y), где  <ul> <li>X - это количество точек от левого края Холста, </li><li>Y  - это количество точек от верхнего края Холста.</li></ul>.</p> <p> Существуют события, указывающие на то, что до Холста дотронулись или что <code>Спрайт</code> (<code>ИзображениеСпрайт</code> или <code>Шар</code>) были перемещены. Â Существуют также методы для рисования точек, линий или кругов. </p>
CheckBoxHelpStringComponentPallette = Флажок, порождающий событие при щелчке мыши. Существует несколько свойств, определяющих вид флажка, которые могут быть заданы в Дизайнере  или Редакторе блоков.
ClockHelpStringComponentPallette = Невидимый элемент, отвечающий за часы, таймер и подсчеты времени.
ContactPickerHelpStringComponentPallette = Кнопка, при щелчке по которой появляется список контактов, из которых можно делать выбор. После того, как пользователь сделает выбор, у него появится возможность установить следующую информацию о выбранном контакте : <ul>\n<li> <code>ИмяКонтакта</code>: имя контакта </li>\n <li> <code>АдресEmail</code>: основной адрес email </li>\n <li> <code>Изображение</code>: название файла, в котором находится изображение контакта, которое может использоваться как  <code>Картинка</code>для<code>Изображения</code> или <code>СпрайтаИзоражения</code>.</li></ul>\n</p><p>Другие свойства влияют на внешний вид кнопки (<code>ВыравниваниеТекста</code>, <code>ЦветФона</code>, и.т.д.) и то, можно ли осуществить по ней щелчок (<code>Активизирован</code>).\n</p><p>Выбор поддерживается не на всех телефонах. Â Если его не удается сделать, на этом элементе будет показано уведомление. Â Поверх ошибки появится сообщение ПроизошлаОшибкаЭкрана.
DatePickerHelpStringComponentPallette = <p>Кнопка, при нажатии на которую открывается всплывающее окно, позволяющее пользователю выбирать дату.</p>
EmailPickerHelpStringComponentPallette = EmailPicker является аналогом текстового поля. Если пользователь начнет вводить имя или e-mail адрес контакта, его телефон покажет   выпадающее меню, для завершения ввода. Если  есть  множество контактов, то потребуется несколько секунд, чтобы появилось выпадающее меню,  в котором будут предложены имена этих контактов, e-mail для каждого, в этом случае не определяется.<p><p> Начальное содержимое текстового поля  и содержание <после ввода  пользователя находится соотвественно в  <code> Текст </ code>. • Если <code> Текст </ code> изначально пуст, содержимое <code> Подсказка </ code>  не будет отображаться  в текстовом поле как подсказка   для  пользователя. </ p> \ n<р> Другие параметры, влияют на   внешний вид текстового поля (<code> РасположениеТекста </ code>, <code> ЦыетФонаr </ code>, и т.д.) или может  быть использовано (<code> Включено </ code>) . </ P> \ n<p> Текстовые поля, как это обычно бывает,  используется  вместе с  компонентом <code> Кнопка </ code> , когда пользоваетль нажимает кнопку, ввод текста завершается. 
FileHelpStringComponentPallette = Невидимый элемент для хранения и получения файлов. Используйте этот компонент для записи и чтения файлов на вашем устройстве. По умолчанию он записывает файлы в ваш личный каталог, ассоциированный с вашим приложением. Ваш Помощник записывает файлы в /sdcard/AppInventor/data для того, чтобы облегчить устранение ошибок. Если путь к файлу начинается со слеша (/), то файл записывается на sd карту. Например, запись файла в /myFile.txt запишет его в /sdcard/myFile.txt.
formComponentPallette = Форма
FormHelpStringComponentPallette = Компонент верхнего уровня, включающий все другие компоненты программы
FusiontablesControlHelpStringComponentPallette = <p>Невидимый компонент, с помощью которого осуществляется взаимодействие с Динамическими таблицами. Â Динамические таблицы позволяют вам сохранять, предоставлять в общий доступ, осуществлять запросы и визуализировать массивы данных; этот компонент позволяет вам создавать запросы, создавать и модифицировать эти таблицы. </p> <p>Этот компонент использует <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank"> API Динамических таблиц V2.0</a>. Â <p> Приложение, использующее динамические таблицы, должно проходить авторизацию на серверах Google. Это может быть сделано одним из двух способов. Первый использует ключ API разработчика (см. ниже). Этот подход предполагает, что конечные пользователи для получения доступа к динамическим таблицам должны авторизовываться. Второй подход предполагает использование учетной записи сервиса. Для этого вам самим нужно ввести регистрационную информацию и специальный "адрес email учетной записи сервиса, получаемый из  <a href="https://code.google.com/apis/console/" target="_blank">Консоли Google API</a>. Â Вы сообщаете сервису Динамических таблиц имя адреса электронной почты учетной записи сервиса и загружаете свой секретный ключ, что позволяет задать свойство КлючевогоФайла для того, чтобы определить этот файл. Наконец, вы отмечаете в редакторе дизайна "ИспользоватьАвторизациюСервиса". Â Во время использования учетной записи сервиса, конечным пользователям не нужно авторизовываться в динамических таблицах, весь доступ обеспечивается сервисом.</p> <p>Для того, чтобы получить ключ API, следуйте этим инструкциям.</p> <ol> <li>Перейдите к <a href="https://code.google.com/apis/console/" target="_blank">консоли Google APIs</a> и, в случае необходимости, авторизуйтесь в ней. </li> <li>Выберите пункт <i>Сервисы</i> из меню слева.</li> <li>Выберите сервис <i>Динамические таблицы</i> из предложенного списка и включите его </li> <li>Вернитесь к главному меню и выберите <i>Доступ к API </i>. </li> </ol> <p>Ваш ключ API будет находиться в нижней части панели в разделе  "Простой доступ к API". Â Вам нужно будет указать ваш ключ в качестве значения свойства <i>КлючApi</i> в приложении Динамические таблицы.</p> <p>Когда у вас будет ключ API, установите значение свойства <i>Запрос</i> в действительный запрос SQL динамических таблиц и вызовите  <i>ПослатьЗапрос</i> для того, чтобы выполнить запрос. Â App Inventor пошлет запрос серверу динамических таблиц и когда сервер вернет ответ, подсветится блок<i>ПолученРезультат</i>. Â Результат запроса будет получен в формате CSV и конвертирован в списочный формат с помощью блоков  "lсписок из таблицы csv" or "список из рядов csv" </p> <p>Обратите внимание, что вам не нужно заботиться о кодировке запроса.  Â Однако вам нужно придерживаться синтаксиса, описанного в <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">справочнике</a>, что означает, что регистры имеют значение и что если в названиях столбцов есть пробелы, их нужно заключать в одинарные кавычки.</p>
GameClientHelpStringComponentPallette = Обеспечивает возможность коммуникации приложения с серверами онлайн игр.
HorizontalArrangementHelpStringComponentPallette = <p>Элемент форматирования, при использовании которого компоненты размещаются на экране слева направо. Если необходимо, чтобы компоненты приложения были размещены друг над другом, используйте  <code>ВертикальноеРасположение</code>/.</p>
ImageHelpStringComponentPallette = Элемент  для отображения изображений. Â  Изображение и его различные параметры могут быть настроены в Редакторе дизайна и Редакторе блоков.
ImagePickerHelpStringComponentPallette = Специальная кнопка. Когда пользователь нажимает на кнопку выбора изображения, появляется галерея изображений, из которой пользователь может выбрать свое изображение. После того, как изображение выбрано, оно сохраняется на SD карту с именем файла <code>ФайлИзображения</code> , в котором сохраняется изображение. Лимит сохраняемых изображений составляет 10 штук. Â Если лимит будет превышен, то добавление новых изображений будет удалять старые.
ImageSpriteHelpStringComponentPallette = <p>"Спрайт" может быть помещен на <code>Холст</code>, где он будет реагировать на прикосновения и перемещения, взаимодействовать с другими спрайтами  (например <code>Шары</code>и другие <code>ИзображенияСпрайтов</code>) и краем Холста, а также перемещаться в соответствии со своими свойствами. Â Его внешний вид определяется его свойством <code>Изображение</code>  (если только его свойство <code>Видимый</code> не установлено как <code>Неверно</code>.</p> <p> Для того, чтобы  <code>ИзображениеСпрайта</code> перемещалось на влево каждые 1000 миллисекунд (одну секунду) вам нужно установить свойство <code>Скорость </code> на 10 [пикселей], а свойство <code>Интервал </code> в 1000 [миллисекунд ], свойство  <code>Направление </code> в 180 [градусов], а свойство <code>Включено </code> в <code>Верно</code>. Â Спрайт, свойство которого  <code>Поворачивается </code> установлено в <code>Верно</code> будет поворачиваться, по мере того, как свойство <code>Направление </code> будет меняться. Â Проверка на столкновения с вращающимся спрайтом может быть неточна для высоких узких или широких коротких спрайтов.  Â Любые свойства спрайта могут быть изменены в любое время с помощью программы. </p>
LabelHelpStringComponentPallette = Элемент Надпись отображает фрагмент текст, который  указан в  <code>Текст</code>. Другие параметры Надписи задающие ее отображение и расположение в ней текста, могут быть установлены в Дизайнере или Редакторе Блоков.
ListPickerHelpStringComponentPallette = <p>Кнопка, при нажатии на которую пользователю показывается список текстов для выбора. Это тексты, которые можно определять, задавая в Дизайнере или Редакторе блоков свойство <code>ЭлементыИзЦепочек</code> для цепочек, разделенных последовательностями символов (например, <em>выбор 1, выбор  2, выбор 3</em>) или с помощью свойства  <code>Элементы </code> в редакторе блоков .</p><p>Установка значения свойства ПоказатьЛинейкуФильтра в положение верно сделает список доступным для поиска. Â Другие свойства также влияют на внешний вид кнопки  (<code>ВыравниваниеТекста </code>, <code>ЦветФона </code>, и т. д.) а также на то, можно ли по этой кнопке щелкнуть  (<code>Включено</code>).</p>
ListViewHelpStringComponentPallette = <p>Это видимый элемент, который позволяет поместить список текстовых элементов на ваш Экран. <br> Этот лист может быть использован с помощью свойства ЭлементыИзЦепочек или с помощью использования блока Элементы в редакторе блоков.  <br> Внимание: этот элемент работает некорректно с прокручиваемыми экранами.</p>
LocationSensorHelpStringComponentPallette = Невидимый компонент, предоставляющий информацию о местоположении, включая широту, долготу, высоту (если устройство поддерживает такую возможность). Â Это также позволяет осуществлять геокодирование, трансформируя адрес в координаты с помощью методов <code>ШиротаИзАдреса</code> и <code>ДолготаИзАдреса</code>.</p>\n<p>Для обеспечения функционирования свойство элемента  <code>Включено</code> должно быть установлено в положение Верно и опция определения местоположения должна быть активизирована с помощью GPS  спутников.</p>\nИнформация о местоположении может быть доступна не сразу.  Â Вам придется подождать некоторое время, пока не будет найден сигнал от местного провайдера или же подождать события ПриИзменении Местоположения. 
NearFieldHelpStringComponentPallette = <p>Невидимый компонент, предоставляющий возможности NFC. Â В настоящее время компонент поддерживает только чтение и запись текстовых тегов (если это поддерживается устройством). </p><p>Для чтения или записи свойство <code>РежимЧтения</code> компонента должно быть установлено в Истина или Ложь соответственно. </p>
NotifierHelpStringComponentPallette = Элемент Уведомитель показывает диалоги уведомлений, сообщения и временные предупреждения, а также создает записи логов Андроида следующими методами:  <ul><li> ПоказатьДиалогСообщения: показывает диалог сообщения, который пользователь может скрыть с помощью нажатия кнопки.</li><li>ПоказатьДиалогВыбора: показывает сообщение с двумя кнопками, позволяющее пользователю выбрать один из двух ответов, например, да или нет, после чего запускается событие ПослеВыбора .</li><li> ПоказатьТекстДиалога: позволяет пользователю ввести текст в ответ на сообщение, после чего запускается событие ПослеВведенияТекста. <li> ПоказатьПредупрежедение:  показывает временное Â предупреждение, которое через некоторое время исчезает .</li><li> ЛогОшибки: записывает сообщение об ошибке в лог Андроида. </li><li> LogInfo: logs an info message to the Android log.</li><li>ПредупреждениеЛога: записывает предупреждение в лог Андроида.</li><li> Сообщения в диалогах (но не в предупреждениях) могут быть отформатированы с помощью следующих тэгов  HTML :&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li> Вы также можете использовать тэги шрифтов для того, чтобы указывать цвет, например , &lt;font color="blue"&gt;. Â Некоторые из доступных названий цветов - aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white и yellow</li></ul>
NxtColorSensorHelpStringComponentPallette = Компонент, обеспечивающий цветовому сенсору робота LEGO MINDSTORMS NXT интерфейс высокого уровня.
NxtDirectCommandsHelpStringComponentPallette = Компонент, предоставляющий интерфейс низкого уровня робота LEGO MINDSTORMS NXT, с функциями посылки прямых команд NXT.
NxtDriveHelpStringComponentPallette = Компонент интерфейса высокого уровня LEGO MINDSTORMS NXT робота с функциями перемещения и поворота робота.
NxtLightSensorHelpStringComponentPallette = Компонент, обеспечивающий cветовому сенсору робота LEGO MINDSTORMS NXT интерфейс высокого уровня.
NxtSoundSensorHelpStringComponentPallette = Компонент, обеспечивающий звуковому сенсору робота LEGO MINDSTORMS NXT интерфейс высокого уровня.
NxtTouchSensorHelpStringComponentPallette = Компонент, обеспечивающий тактильному сенсору робота LEGO MINDSTORMS NXT интерфейс высокого уровня.
NxtUltrasonicSensorHelpStringComponentPallette = Компонент, обеспечивающий ультразвуковому сенсору робота LEGO MINDSTORMS NXT интерфейс высокого уровня.
OrientationSensorHelpStringComponentPallette = <p>Невидимые элементы, предоставляющие информацию об ориентации устройства в трех измерениях : <ul> <li> <strong>Крен</strong>: 0 градусов, когда устройство находится в горизонтальной плоскости, увеличивается до Â Â Â Â Â 90 градусов, когда устройство наклонено налево и Â Â Â Â Â уменьшается на -90 градусов, когда устройство наклонено направо. Â Â Â Â Â </li> <li> <strong>Высота</strong>: 0 градусов, когда устройство находится в горизонтальной плоскости, до Â Â Â Â Â 90 градусов, когда устройство наклонено так, что его верхняя часть направлена вниз и Â Â Â Â Â до  180 градусов, когда оно перевернуто.  Â Точно так же, когда устройство  Â Â Â Â Â наклонено так, что его нижняя часть направлена вниз, высота уменьшается до  -90 Â Â Â Â Â градусов, и затем уменьшается на -180 градусов, когда оно  Â Â Â Â Â полностью перевернуто.</li> <li> <strong>Азимут</strong>: 0 градусов, когда верх устройства направлен  Â Â Â Â Â на север, 90 градусов, когда оно направлено на восток, 180 градусов Â Â Â Â Â когда оно направлено на юг, 270 градусов, когда оно направлено на запад , Â Â Â Â Â и т.д .</li></ul> Â Â Â Â Эти измерения предполагают, что само устройство находится в неподвижном положении.</p>
PasswordTextBoxHelpStringComponentPallette = Окно для ввода пароля. Â Такое же, как <code>Текст</code>, за исключением того, что печатаемые символы не отображаются. Текст окна может быть считан или записан с помощью свойства <code>Текст</code>. Если окно пустое, свойство <code>Подсказка</code>, появляющееся как бледный текст, даёт пользователю наводящую информацию для ввода текста. Текстовые компонетны обычно используются с компонентом<code>Кнопка</code> для сообщения о завершении ввода текста.
PedometerHelpStringComponentPallette = Элемент, способный считать шаги.
PhoneCallHelpStringComponentPallette = <p>Невидимый элемент, совершающий звонок на указанный в свойстве  <code>НомерТелефона</code> номер, который может быть задан в Дизайнере или Редакторе блоков. У этого элемента есть метод <code>ПозвонитьПоТелефону</code> запускающий программу для совершения телефонного звонка.</p><p>Часто этот элемент используется вместе с элементом <code>ВыборщикНомеров</code> , который позволяет выбрать один из сохраненных на телефоне номеров и установить свойство  <code>НомерТелефона</code> в телефонный номер контакта. </p><p>Для того, чтобы непосредственно указать телефонный номер (например, 650-555-1212), установите свойство <code>НомерТелефона</code> в Текст с конкретными цифрами  (например, "6505551212"). Â В номер также можно включать дефисы, точки и кавычки  (например, "(650)-555-1212") , пробелы же включать нельзя.</p>
PhoneNumberPickerHelpStringComponentPallette = Кнопка, при щелчке на которую показывается список, из которого можно выбирать нужный контактный телефон. После того, как пользователь делает свой выбор, ему становится доступен следующий набор свойств контакта: <ul>\n<li> <code>ИмяКонтакта</code>: имя контакта </li>\n <li> <code>НомерТелефона</code>:  номер телефона контакта </li>\n <li> <code>АдресЭлектроннойПочты</code>: адрес электронной почты контакта  </li> <li> <code>Фотография</code>: название файла, в котором находится изображение контакта, которое можно использовать как свойство  <code>Фотография</code> для элемента <code>Изображение</code> или <code>СпрайтИзображения</code>.</li></ul>\n</p><p>Другие свойства влияют на внешний вид кнопок  (<code>ВыравниваниеТекста</code>, <code>ЦветФона</code>, и т.д.)  а также то, можно ли на эти кнопки нажимать (<code>Включено</code>).</p>\n<p>Выбор работает не на всех телефонах. Â Если он не срабатывает, этот элемент покажет соответствующее уведомление.  Â  Эта ошибка может быть исправлена с помощью обработчика событий Экран.ПроизошлаОшибка.
PhoneStatusHelpStringComponentPallette = Компонент, возвращающий информацию о телефоне.
PlayerHelpStringComponentPallette = Мультимедийный элемент, воспроизводящий аудио и контролирующий вибрацию телефона. Â Название мультимедийного поля указывается в свойстве  <code>Источник</code> которое можно задать в Дизайнере или в Редакторе блоков. Â Длительность времени вибрации указывается в Редакторе блоков в миллисекундах (тысячных долях секунды).\n<p>С поддерживаемыми аудиоформатами можно ознакомиться по ссылке <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Медиаформаты, поддерживаемые Android</a>.</p>\n<p>Этот элемент лучше всего подходит для длинных звуковых файлов, например, песен, а элемент <code>Звук</code> лучше подходит для коротких файлов, например, звуковых сигналов.</p>
SharingHelpStringComponentPallette = Предоставление в общий доступ - это невидимый элемент, который позволяет обмениваться файлами и сообщениями между вашим приложением и другими приложениями, установленными на устройство. Этот элемент показывает список всех установленных приложений, которые могут обрабатывать информацию и позволяют пользователю выбрать то, с которым он хочет произвести обмен информацией, например, почтовое приложение, приложение социальной сети, обмена смс и т.д. <br>Путь к файлу может быть взят непосредственно из других элементов, например, Камера или ВыбощикИзображений, а также может быть задан непосредственно для того, чтобы использовать хранилище. Обратите внимание, что разные устройства используют хранилища по-разному. Например, если у вас есть файл  arrow.gif в папке  <code>Appinventor/assets</code>, то путь к нему может быть : <ul><li><code>"file:///sdcard/Appinventor/assets/arrow.gif"</code></li> или <li><code>"/storage/Appinventor/assets/arrow.gif"</code></li></ul>
SliderHelpStringComponentPallette = Бегунок это линейка с передвигаемым указателем. Можно, прикоснувшись к указателю, перемещать его вправо и влево, чтобы изменить положение указателя. Перемещение указателя Бегунка вызывает событие ПоложениеИзменено, сообщающее о положении указателя Бегунка. Полученное значение указателя Бегунка может использоваться для динамического изменения свойств других компонент(ов), типа размера шрифта Текста или радиуса Шара.
SoundHelpStringComponentPallette = <p>Мультимедийный элемент, воспроизводящий звуковые файлы и управляющий вибрацией телефона на протяжении количества миллисекунд (тысячных долей секунды), указанных в Редакторе блоков. Â Название звукового файла для воспроизведения должно быть указано в Дизайнере или в Редакторе блоков. </p> <p>Со списком поддерживаемых звуковых форматов можно ознакомиться по ссылке  <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Поддерживаемые медиаформаты Android </a>.</p><p>Этот элемент <code>Звук</code> лучше использовать с короткими звуковыми файлами, например звуковыми сигналами, а элемент, while the <code>Плеер</code> лучше подходит для длинных файлов, например, песен.</p>
SoundRecorderHelpStringComponentPallette = p>Мультимедийный компонент, записывающий аудио.</p>
SpeechRecognizerHelpStringComponentPallette = Компонент Распознавания Речи для преобразования речи в текст
SpinnerHelpStringComponentPallette = <p>Элемент, выводящий выпадающий список элементов. Эти элементы могут быть заданы в Дизайнере или Редакторе блоков с помощью свойства <code>ЭлементыИзЦепочкиg</code> в цепочку, разделенную запятыми (например, <em>выбор 1, выбор 2, выбор 3</em>) или с помощью определения свойства  <code>Элементы</code>в Списке в Редакторе блоков.</p>
TableArrangementHelpStringComponentPallette = <p>Элемент форматирования с помощью которого, элементы приложения могут быть размещены в форме таблицы.</p>
TextBoxHelpStringComponentPallette = <p>Окно для ввода текста пользователем. Â Начальный или задаваемый пользователем текст находится в свойстве <code>Текст</code>. Â Если свойство остается пустым, то в свойстве <code>Подсказка</code>, которое показывается полупрозрачным шрифтом в окне, может содержаться рекомендация о том, какой текст нужно ввести.</p><p>Свойство <code>МультиСтрока</code> определяет, может ли в тексте быть больше одной строки. Â Для окна с одной строкой, клавиатура автоматически закроется, когда пользователь нажмет клавишу Готово. Â Для того, чтобы закрыть клавиатуру для окон с текстами из нескольких строк, приложение должно использовать метод СпрятатьКлавиатуру или  Â ожидать, пока пользователь не нажмет клавишу Назад </p><p>Свойство <code> ТолькоЧисла</code> ограничивает клавиатуру в вводе только численных значений. </p><p>Другие свойства также влияют на внешний вид текстового окна - например, (<code>ВыравниваниеТекста</code>, <code>ЦветФона</code>, и т.д.) а также то, может ли оно быть использовано  (<code>Включено</code>).</p><p>Текстовые окна обычно используются с элементом <code>Кнопка</code>; когда пользователь нажимает на кнопку, текстовое окно закрывается. </p><p>Если текст, введенный пользователем, не должен быть показан, используйте <code>ТекстовоеОкноПароля</code>.</p>
TextToSpeechHelpStringComponentPallette = Компонент для произнесения сообщения с помощью ТекстВРечь
TextingHelpStringComponentPallette = <p>Элемент, который при вызове  метода <code>ПослатьСообщение</code> посылает сообщение, указанное в свойстве  <code>Сообщение</code> на телефонный номер, указанный в свойстве <code>НомерТелефона</code>.</p> <p>Если свойство <code>ПолучениеВключено</code> установлено в значение 1, сообщения  <b>не</b> будут получаться. Если <code>ПолучениеВключено</code> установлено в значение 2 сообщения будут получаться только тогда, когда приложение запущено. Наконец, когда  if <code>ПолучениеВключено</code> установлено в значение 3, сообщения будут получаться, когда приложение запущено, <b>а</b> когда приложение не запущено, они будут добавляться в очередь, а пользователю будет показываться уведомление.</p> <p>Когда сообщение поступает, происходит событие <code>СообщениеПолучено</code>, в котором содержатся номер телефона и само сообщение </p> <p> Приложение, содержащее этот элемент получит сообщение, даже когда оно работает в фоновом режиме (т.е. когда оно не видимо на экране) и даже, когда оно не запущено, а просто установлено на устройстве. Если телефон получает текстовое сообщение, когда приложение не запущено, на телефоне появится уведомление. Â Выбор этого уведомления запустит это приложение.  Â Как разработчик приложения вы, возможно, захотите дать вашим пользователям возможность контроля с помощью ПолучениеВключено для того, чтобы их телефон смог игнорировать такие сообщения. </p> <p>Если свойство GoogleVoiceВключено истинно, сообщения могут быть посланы по Wifi с помощью GoogleVoice. Эта опция предполагает, что у пользователя есть свой аккаунт Google Voice и что на телефоне установлено мобильное приложение Voice. Опция Google Voice работает только на телефонах, поддерживающих Android 2.0 (Eclair) или более поздних версий.</p> <p>Чтобы указать номер телефона (например, 650-555-1212), установите свойство <code>НомерТелефона </code> в текстовую строку с указанными цифрами (например, 6505551212). Â Дефисы, точки и кавычки могут быть включены (например, (650)-555-1212), пробелы не допускаются.</p> <p> Другой способ указать телефонный номер - это указать его с помощью элемента <code>ВыборщикТелефонногоНомера</code>, который позволяет выбрать один из номеров телефона из списка контактов.</p>
TimePickerHelpStringComponentPallette = <p>Кнопка, при нажатии на которую появляется Â всплывающее окно, позволяющее пользователю выбрать время.</p>
TinyDBHelpStringComponentPallette = TinyDB - это невидимый элемент, который сохраняет данные, используемые в приложении. <p> Приложения, создаваемые с помощью App Inventor инициализируются каждый раз при запуске. Если приложение устанавливает значение переменной, а пользователь закрывает приложение, то значение этой переменной не будет сохранено для следующего сеанса работы этого приложения. Напротив, TinyDB - это  <em> постоянное </em> хранилище данных для приложения, данные в нем сохраняются для последующих сеансов работы приложения. Примером может быть игра, в которой сохраняются баллы, полученные игроками и используются при ее следующих запусках. </<p> <p> Данные - это цепочки, сохраняемые с <em>тэгами</em> . Для того, чтобы сохранить запись с данными, вам необходимо указать тэг, под которым они будут сохранены.  Â Соответственно, вы можете извлечь данные, сохраненные с определенным тэгом. </p><p> На каждое приложение выделяется только одно хранилище данных. Для того, чтобы пользоваться несколькими хранилищами, пользуйтесь разрыми ключами. Также у каждого приложения есть свое хранилище данных. Вы не можете использовать  TinyDB для того, чтобы передавать данные между двумя различными приложениями на телефоне, хотя вы<em>можете</em> использовать TinyDb , чтобы обмениваться данными между двумя экранами многоэкранного приложения. </p> <p>Когда вы разрабатываете приложения с помощью Помощника AI, все приложения, использующие его, все приложения будут использовать одну и ту же TinyDb. Â Это исчезнет, когда все эти приложения будут упакованы. Â Однако, в процессе разработки, не забывайте очистить вашу  TinyDb всякий раз, когда вы работаете над новым приложением.</p>
TinyWebDBHelpStringComponentPallette = Невидимый компонент, который позволяет взаимодействовать с Web-сервсами, для  хранения и извлечения информации.
TwitterHelpStringComponentPallette = Невидимый компонент, позволяющий использовать  <a href="http://www.twitter.com" target="_blank">Twitter</a>. После того, как пользователь авторизуется в аккаунте Twitter  (и авторизация успешно подтверждается событием <code>Авторизован</code>), ему становятся доступны многие операции:<ul><li> Поиск в Twitter твитов и тэгов (<code>ИскатьВTwitter</code>)</li>\n<li> Послать твит (<code>Твит</code>) Â Â Â Â </li>\n<li> Посылание твита с изображением  (<code>ТвитСИзображением</code>) Â Â Â Â </li>\n<li> Направление сообщения конкретному пользователю Â Â Â Â Â (<code>НаправитьСообщение</code>)</li>\n <li> Получение последних сообщений, отправленных авторизованному пользователю  Â Â Â Â Â (<code>ЗапроситьЛичныеСообщения</code>)</li>\n <li> Подписка на конкретного пользователя  (<code>Подписаться </code>)</li>\n<li> Отписаться от конкретного пользователя  (<code>StopFollowing</code>)</li>\n<li> Получения списка пользователей, подписанных на авторизованного пользователя  Â Â Â Â Â (<code>ЗапроситьПодписчиков</code>)</li>\n <li> Получение последних сообщений от пользователей, на которых подписан  Â Â Â Â Â авторизованный пользователь (<code>ЗапроситьСообщенияДрузей</code>)</li>\n <li> Получение последних упоминаний авторизованного пользователя  Â Â Â Â Â (<code>ЗапроситьУпоминания </code>)</li></ul></p>\n <p>Для авторизации в Twitter у вас должен быть пользовательский ключ и пользовательский секрет Â  , специфический для вашего приложения  from http://twitter.com/oauth_clients/new
userInterfaceComponentPallette = Интерфейс пользователя
VerticalArrangementHelpStringComponentPallette = <p>Элемент форматирования, при использовании которого компоненты располагаются один над другим. Â (Первый компонент располагается сверху, второй под ним и т. д.) Â Если необходимо расположить компоненты друг за другом, используйте <code>ГоризонтальноеРасположение.</p>
VideoPlayerHelpStringComponentPallette = Мультимедийный элемент, отвечающий за воспроизведение видео. Когда приложение запущено, ВидеоПлеер будет воспроизводиться в прямоугольном окне. Â Если пользователь прикасается к прямоугольнику, появляются кнопки управления пуск/пауза, прокрутка вперед и назад. Â Приложение также может управляться с помощью методов  <code>Старт</code>, <code>Пауза</code>, и <code>ПерейтиК</code>. Â <p>Видеофайлы должны быть в форматах Windows Media Video (.wmv), 3GPP (.3gp), или MPEG-4 (.mp4). Â С дополнительной информацией можно ознакомиться по ссылке <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Поддерживаемые медиа форматы Android</a>.</p><p>App Inventor для Android допускает файлы размером до 1 MB и ограничивает размер приложения 5 MB, не все из которых доступны для медиа  (видео, аудио и звуковые файлы). Â Если ваши медиа файлы слишком большие, вы получите сообщение об ошибке при упаковке или инсталляции вашего приложения, поэтому вам нужно будет уменьшить размер ваших медиа файлов.  Â Большинство программ для редактирования видео, такие, как  Windows Movie Maker или Apple iMovie, помогут вам уменьшить размер видео за счет их укорачивания или конвертации в более контактный формат. </p><p>Вы можете указать в качестве медиаисточника ссылку, которая указывает на потоковое видео. Обратите внимание, что ссылка должна указывать на само видео, а не на программу его воспроизведения. 
VotingHelpStringComponentPallette = <p>Элемент Голосование позволяет пользователям голосовать по вопросу, связываясь с Веб сервисом, чтобы получить вопрос и затем вернуть голоса пользователей.</p>
WebHelpStringComponentPallette = Невидимый компонент, предоставляющий функции для запросов HTTP GET, POST, PUT и DELETE.
WebViewerHelpStringComponentPallette = Элемент для просмотра Веб страниц Â Адрес домашней страницы может быть задан в Дизайнере или в Редакторе блоков.  Â Вид может быть задан для того, чтобы переходить по ссылкам, на которые щелкает пользователь, а пользователи могут заполнять Веб формы. Предупреждение: это не является полноценным браузером. Â Например, при нажатии на физическую кнопку телефона Назад произойдет не возвращение на предыдущую страницу, а полное закрытие приложения.<p />Вы можете использовать свойство  ВебПросмотрщик.ЦепочкаПросмотраВеб для того, чтобы связать ваше приложение с кодом Javascript , размещенным на странице просмотрщика.  Â В вебпросмотрщике вам нужно включить Javascript , относящийся к объекту с помощью методов  </em getWebViewString()</em> и <em>setWebViewString(text)</em>. Â <p />Например, если просмотрщик открывает страницу, содержащую команду  Javascript <br /> <em>document.write("Ответ" + window.AppInventor.getWebViewString());</em> <br />и если вы устанавливаете WebView.WebVewString в "привет", то веб страница покажет  </br ><em>Ответ привет </em>. Â <br />И если веб страница содержит Javascript, который выполняет команду  <br /><em>window.AppInventor.setWebViewString("привет от  Javascript")</em>, <br />то значение ЦепочкиВебПросмотра будет  <br /><em>привет от Javascript</em>.
YandexTranslateHelpStringComponentPallette = Используйте этот элемент для перевода слов и предложений на различные языки. Для этого элемента нужен доступ к интернету и доступ к сервису Yandex.Translate. Укажите языки источника и перевода в форме, используя коды языков. En-es означает перевод с английского на испанский, а es-ru - перевод с испанского на русский. Если вы не укажете языки сами, сервис попытается определить их. Если вы укажете только es то сервис попытается перевести его на испанский <p /> Этот элемент работает на основе сервиса перевода Yandex. Дополнительную информацию можно найти по ссылке http://api.yandex.com/translate/ . Там вы увидите список доступных языков и коды для них. <p /> Внимание: перевод осуществляется в фоновом режиме асинхронно. Когда перевод будет закончен, будет показано событие "ПолученПеревод".
accelerometerSensorComponentPallette = СенсорАкселерометра
activityStarterComponentPallette = СтартерДействия
ballComponentPallette = Шар
barcodeScannerComponentPallette = СканерШтрихКода
bluetoothClientComponentPallette = КлиентBluetooth
bluetoothServerComponentPallette = СерверBluetooth
buttonComponentPallette = Кнопка
camcorderComponentPallette = Видеокамера
cameraComponentPallette = Камера
canvasComponentPallette = Холст
checkBoxComponentPallette = Флажок
clockComponentPallette = Часы
connectivityComponentPallette = Каналы
contactPickerComponentPallette = СборщикКонтактов
datePickerComponentPallette = ВыборДаты
drawingAndAnimationComponentPallette = Рисование и анимация
emailPickerComponentPallette = сборщикEmail
experimentalComponentPallette = Экспериментальный
fileComponentPallette = Файл
fusiontablesControlComponentPallette = УправлениеДинамическимиТаблицами
gameClientComponentPallette = ИгровойКлиент
horizontalArrangementComponentPallette = ГоризонтальноеРасположение
imageComponentPallette = Изображение
imagePickerComponentPallette = ВыборщикИзображений
imageSpriteComponentPallette = ИзображениеСпрайта
internalUseComponentPallette = Для внутреннего использования
labelComponentPallette = Надпись
layoutComponentPallette = Расположение
legoMindstormsComponentPallette = LEGO® MINDSTORMS®
listPickerComponentPallette = ВыборИзСписка
listViewComponentPallette = Список
locationSensorComponentPallette = СенсорМестоположения
mediaComponentPallette = Медиа
nearFieldComponentPallette = БлижайшаяЯчейка
notifierComponentPallette = Уведомитель
nxtColorSensorComponentPallette = СенсорЦветаNxt
nxtDirectCommandsComponentPallette = ПрямыеКомандыNxt
nxtDriveComponentPallette = ПриводNXT
nxtLightSensorComponentPallette = СенсорСветаNxt
nxtSoundSensorComponentPallette = СенсорЗвукаNxt
nxtTouchSensorComponentPallette = СенсорКасанияNxt
nxtUltrasonicSensorComponentPallette = УльтразвуковойСенсорNxt
orientationSensorComponentPallette = СенсорОриентации
passwordTextBoxComponentPallette = Пароль
phoneCallComponentPallette = Позвонить
phoneNumberPickerComponentPallette = НомероНабиратель
playerComponentPallette = Проигрыватель
sensorsComponentPallette = Сенсоры
sharingComponentPallette = Публикация
sliderComponentPallette = Бегунок
socialComponentPallette = Общение
soundComponentPallette = Звук
soundRecorderComponentPallette = Диктофон
speechRecognizerComponentPallette = РаспознавательРечи
spinnerComponentPallette = ИндикаторОжидания
storageComponentPallette = Хранилище
tableArrangementComponentPallette = ТабличноеРасположение
textBoxComponentPallette = Текст
textToSpeechComponentPallette = ТекстВРечь
textingComponentPallette = Текст
timePickerComponentPallette = выборВремени
tinyDBComponentPallette = TinyDB
tinyWebDBComponentPallette = TinyWebDB
twitterComponentPallette = Твиттер
uninitializedComponentPallette = Несоздано
verticalArrangementComponentPallette = ВертикальноеРасположение
videoPlayerComponentPallette = ВидеоПлеер
votingComponentPallette = Голосование
webComponentPallette = Интернет
webViewerComponentPallette = WebПросмотрщик
yandexTranslateComponentPallette = Яндекс.Переводчик
