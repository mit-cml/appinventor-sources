AccelerometerSensorHelpStringComponentPallette = Niewidoczny komponent, który może wykrywać wstrząsy i mierzyć przyspieszenie w przybliżeniu w trzech wymiarach przy użyciu jednostek SI (m/s <sup>2</sup>). Składniki to: <ul><li><strong>xPrzyspieszenie</strong>: 0, gdy telefon spoczywa na płaskiej powierzchni, dodatni, gdy telefon jest pochylony w prawo (tzn. Jego lewa strona jest uniesiona), i ujemne, gdy telefon jest przechylony w lewo (tzn. jego prawa strona jest uniesiona). </li><li><strong>yPrzyspieszenie</strong>: 0, gdy telefon spoczywa na płaskiej powierzchni, dodatni, gdy jego dolna część jest uniesiona, a ujemne, gdy jego górna część jest uniesiona. </li><li><strong> zPrzyspieszenie </strong>: równy -9.8 (grawitacja ziemi w metrach na sekundę do kwadratu, gdy urządzenie jest ustawione równolegle do ziemi z wyświetlaczem skierowanym do góry, 0 gdy prostopadle do ziemi i +9.8 gdy jest skierowane do dołu. Na wartość może mieć również wpływ przyspieszenie z lub przeciw grawitacji. </li></ul>
ActivityStarterHelpStringComponentPallette = Komponent, który może uruchomić działanie za pomocą metody <code>StartActivity</code>. <p>Działania, które można uruchomić, obejmują: <ul><li> Uruchamianie innej aplikacji App Inventor dla Androida. Aby to zrobić, najpierw znajdź <em>klasę</em> innej aplikacji, pobierając kod źródłowy i używając eksploratora plików lub narzędzia unzip, aby znaleźć plik o nazwie „youngandroidproject/project.properties”. Pierwszy wiersz pliku rozpocznie się od „main=” i nastąpi po nim nazwa klasy; na przykład <code>main=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>. (Pierwsze komponenty wskazują, że to zostało stworzone przez Ben.Bitdiddle@gmail.com.) Aby ustawić <code>ActivityStarter</code> na uruchomienie tej aplikacji, ustaw następujące właściwości: <ul><li><code>ActivityPackage</code> do nazwy klasy, upuszczając ostatni komponent (na przykład <code>com.gmail.Bitdiddle.Ben.HelloPurr</code>) </li><li><code>ActivityClass</code> do całej nazwy klasy (na przykład <code>com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>) </li></ul></li><li> Uruchamianie aplikacji kamery przez ustawienie następujących właściwości: <ul><li><code>Akcja: android.intent.action.MAIN</code></li><li><code>ActivityPackage: com.android.camera</code></li><li><code>ActivityClass: com.android.camera.Camera</code></li></ul></li><li> Przeprowadzanie wyszukiwania w sieci. Zakładając, że termin, który chcesz wyszukać, to „wampir” (nie wahaj się użyć innego terminu), ustaw właściwości na: <ul><code><li> Akcja: android.intent.action.WEB_SEARCH </li><li> ExtraKey: zapytanie </li><li> Dodatkowa wartość: wampir </li><li>ActivityPackage: com.google.android.providers.enhancedgooglesearch </li><li> ActivityClass: com.google.android.providers. enhancedgooglesearch.Launcher </li></code></ul></li><li> Otwieranie przeglądarki na określonej stronie internetowej. Zakładając, że strona, do której chcesz przejść, to „www.facebook.com” (możesz użyć własnego wyboru), ustaw właściwości na: <ul><code><li> Akcja: android.intent.action.VIEW </li><li> DataUri: http://www.facebook.com </li></code></ul></li></ul></p>
BallHelpStringComponentPallette = <p>Okrągła „ikona”, która może być umieszczona na <code>Canvasie</code>, gdzie może reagować na dotyk i przeciąganie, interakcję z innymi ikonkami (<code>Ikonka</code> i inne <code>Piłka</code>) i krawędzią Canvasu i porusza się zgodnie z zadanymi parametrami. </p><p> Na przykład, aby mieć <code>Piłkę</code>, przesuń 4 piksele w kierunku początku <code>Canvasu</code> co 500 milisekund (pół sekundy), ustawiamy właściwość <code>Prędkość</code> na 4 [piksele], właściwość <code>Interwał</code> na 500 [milisekund], właściwość <code>Kierunek</code> na 90 [stopni] i właściwość <code>Włączony</code> na <code>Prawda</code>. Te i inne właściwości można zmienić w dowolnym momencie. </p><p> Różnica między Piłką a <code>Ikoną</code> polega na tym, że ta ostatnia może uzyskać swój wygląd z pliku obrazu, podczas gdy wygląd piłki może zostać zmieniony tylko przez zmianę jej właściwości <code>Kolor</code> i <code>Promień</code>. </p>
BarcodeScannerHelpStringComponentPallette = Komponent do używania skanera kodów kreskowych do odczytu kodu kreskowego
BluetoothClientHelpStringComponentPallette = Komponent klienta Bluetooth
BluetoothServerHelpStringComponentPallette = Komponent serwera Bluetooth
ButtonHelpStringComponentPallette = Przycisk z możliwością wykrywania kliknięć. Wiele aspektów jego wyglądu można zmienić, a także to, czy można go kliknąć (<code>Włączony</code>), można go zmienić w Projektancie lub w Edytorze Blokowym.
CamcorderHelpStringComponentPallette = Komponent do nagrywania wideo za pomocą kamery urządzenia. Po nagraniu wideo, nazwa pliku w telefonie zawierającym klip jest dostępna jako argument zdarzenia PoNagraniu. Nazwa pliku może być użyta na przykład do ustawienia właściwości źródła komponentu VideoPlayer.
CameraHelpStringComponentPallette = Komponent do robienia zdjęcia za pomocą aparatu urządzenia. Po zrobieniu zdjęcia nazwa pliku w telefonie zawierającym obraz jest dostępna jako argument do zdarzenia PoObrazie. Nazwa pliku może być używana na przykład do ustawienia właściwości Obraz komponentu obrazu.
CanvasHelpStringComponentPallette = <p> Dwuwymiarowy, czuły na dotyk prostokątny panel, na którym można wykonać rysunek i można przesuwać ikony. </p><p><code>KolorTła</code>, <code>Kolor</code>, <code>ObrazTła</code>, <code>Szerokość</code> i <code>Wysokość</code> Canvas można ustawić w Projektancie lub Edytorze Blokowym. <code>Szerokość</code> i <code>Wysokość</code> są mierzone w pikselach i muszą być dodatnie. </p><p> Dowolną lokalizację na Canvasie można określić jako parę wartości (X, Y), gdzie <ul><li> X to liczba pikseli od lewej krawędzi canvasu </li><li> Y to liczba pikseli od górnej krawędzi canvasu. </li></ul></p><p> Istnieją zdarzenia informujące, kiedy i gdzie dotknięto Canvas lub <code>Ikony</code> (<code>Ikonka</code> lub <code>Piłka</code>) zostały przeciągnięte. Istnieją również metody rysowania punktów, linii i okręgów. </p>
CheckBoxHelpStringComponentPallette = Pole wyboru, które wywołuje zdarzenie, gdy użytkownik je kliknie. Istnieje wiele właściwości wpływających na jego wygląd, które można ustawić w Projektancie lub edytorze blokowym.
CircleHelpStringComponentPallette = Okrąg
ClockHelpStringComponentPallette = <p> Niewidoczny komponent, który zapewnia natychmiastowy wskaźnik czasu przy użyciu wewnętrznego zegara w telefonie. Może uruchamiać stoper w regularnych odstępach czasu i wykonywać obliczenia czasu, manipulacje i konwersje. </p><p> Dostępne są również metody konwertowania czasu i daty na tekst. Dopuszczalne wzory to pusty ciąg, MM/DD/YYYY HH:mm:ss a lub MMM d, yyyyHH:mm. Pusty łańcuch zapewni domyślny format - „MMM d, yyyy HH:mm:ss a” dla FormatDataCzas „MMM d, yyyy” dla FormatDaty. Aby zobaczyć wszystkie możliwe formaty, zobacz <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html\" _target=\"_blank\"> tutaj </a>. </p>
CloudDBHelpStringComponentPallette = Niewidoczny komponent umożliwiający przechowywanie danych na serwerze bazy danych podłączonym do Internetu (przy użyciu oprogramowania Redis). Dzięki temu użytkownicy aplikacji mogą dzielić się danymi. Domyślnie dane będą przechowywane na serwerze obsługiwanym przez MIT, jednak możesz skonfigurować i uruchomić własny serwer. Ustaw właściwość „RedisServer” i właściwość „RedisPort”, aby uzyskać dostęp do własnego serwera.
ContactPickerHelpStringComponentPallette = Przycisk, który po kliknięciu wyświetla listę kontaktów do wyboru. Po dokonaniu wyboru przez użytkownika, następujące właściwości zostaną ustawione na informacje o wybranym kontakcie: <ul><li><code>NazwaKontaktu</code>: nazwa kontaktu </li><li><code> AdresEmail</code>: podstawowy adres e-mail kontaktu </li><li><code>ContactUri</code>: identyfikator URI kontaktu na urządzeniu </li><li><code> ListaAdresówEmail</code>: lista adresów e-mailowych kontaktu </li><li><code>NumerTelefonu</code>: podstawowy numer telefonu kontaktu (w późniejszych wersjach Androida) </li><li><code>ListaNumerówTelefonów</code>: lista numerów telefonów kontaktu (w późniejszych wersjach Androida) </li><li><code>Obrazek</code>: nazwa pliku zawierającego obraz kontaktu, który może być użyty jako wartość właściwości <code>Obrazek</code> dla komponentu <code>Obraz</code> lub <code>Ikonka</code>. </li></ul></p><p> Inne właściwości wpływają na wygląd przycisku (<code>WyrównanieTekstu</code>, <code>KolorTła</code> itp.) i czy można go kliknąć (<code> Włączony </code>). </p><p> Składnik SelektorKontaktów może nie działać na wszystkich telefonach. Na przykład w systemach Android przed systemem 3.0 nie może wybrać numerów telefonów, a lista adresów e-mail będzie zawierać tylko jeden e-mail.
DatePickerHelpStringComponentPallette = <p> Przycisk, który po kliknięciu uruchamia okno dialogowe umożliwiające użytkownikowi wybranie daty. </p>
EmailPickerHelpStringComponentPallette = Email to rodzaj pola tekstowego. Jeśli użytkownik rozpocznie wprowadzanie nazwy lub adresu e-mail kontaktu, telefon wyświetli menu rozwijane opcji, które uzupełniają wpis. Jeśli istnieje wiele kontaktów, wyświetlenie listy rozwijanej może zająć kilka sekund i może pokazać wyniki pośrednie podczas obliczania podobieństw. <p> Początkowa zawartość pola tekstowego i wpis zawartości <po użytkowniku znajduje się we właściwości <code>Tekst</code>. Jeśli właściwość <code>Tekst</code> jest początkowo pusta, zawartość właściwości <code>Podpowiedź</code> będzie słabo widoczna w polu tekstowym jako wskazówka dla użytkownika. </p><p> Inne właściwości wpływają na wygląd pola tekstowego (<code>WyrównanieTekstu</code>, <code>KolorTła</code> itp.) I czy można go użyć (<code>Włączony</code>). </p><p> Takie pola tekstowe są zwykle używane z komponentami <code>Przycisk</code>, gdy użytkownik kliknie przycisk po zakończeniu wprowadzania tekstu.
Ev3ColorSensorHelpStringComponentPallette = Komponent, który zapewnia interfejs wysokiego poziomu do czujnika koloru w robocie LEGO MINDSTORMS EV3.
Ev3CommandsHelpStringComponentPallette = Komponent zapewniający niskopoziomowy interfejs do robota LEGO MINDSTORMS EV3 z funkcjami wysyłania systemu lub bezpośrednich poleceń do robotów EV3.
Ev3GyroSensorHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do czujnika żyroskopowego w robocie LEGO MINDSTORMS EV3.
Ev3MotorsHelpStringComponentPallette = Komponent, który zapewnia interfejsy wysokiego i niskiego poziomu do robota LEGO MINDSTORMS EV3, z funkcjami, które mogą sterować silnikami.
Ev3SoundHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do funkcji dźwiękowych robota LEGO MINDSTORMS EV3.
Ev3TouchSensorHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do czujnika dotykowego w robocie LEGO MINDSTORMS EV3.
Ev3UIHelpStringComponentPallette = Komponent, który zapewnia interfejs wysokiego poziomu do robota LEGO MINDSTORMS EV3, z funkcjami rysowania wykresów na ekranie EV3.
Ev3UltrasonicSensorHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do czujnika ultradźwiękowego w robocie LEGO MINDSTORMS EV3.
FeatureCollectionHelpStringComponentPallette = Funkcja FeatureColletion zawiera co najmniej jedną funkcję mapy jako grupę. Wszelkie zdarzenia wyzwalane przez funkcję w kolekcji również wyzwalają odpowiednie zdarzenie w obiekcie kolekcji. Funkcje FeatureCollections mogą być ładowane z zasobów zewnętrznych w celu wypełnienia mapy treścią.
FileHelpStringComponentPallette = Niewidoczny komponent do przechowywania i pobierania plików. Użyj tego komponentu do zapisu lub odczytu plików na urządzeniu. Domyślnym zachowaniem jest zapisywanie plików w prywatnym katalogu danych powiązanym z Twoją aplikacją. Companion jest specjalny do zapisywania plików do /sdcard/AppInventor/data, aby ułatwić debugowanie. Jeśli ścieżka do pliku zaczyna się od ukośnika (/), to plik jest tworzony względem /sdcard. Na przykład zapisanie pliku do /myFile.txt spowoduje zapisanie pliku w /sdcard/myFile.txt.
FirebaseDBHelpStringComponentPallette = Niewidoczny komponent komunikujący się z Firebase w celu przechowywania i pobierania informacji.
FormHelpStringComponentPallette = Komponent najwyższego poziomu zawierający wszystkie inne składniki programu
FusiontablesControlHelpStringComponentPallette = <p> Niewidoczny składnik komunikujący się z tabelami Google Fusion. Tabele Fusion pozwalają przechowywać, udostępniać, wysyłać zapytania i wizualizować tabele danych; ten komponent pozwala na wyszukiwanie, tworzenie i modyfikowanie tych tabel. </p><p> Ten komponent używa <a href = \"https://developers.google.com/fusiontables/docs/v2/getting_started\" target = \" _blank \"> API Fusion Tables V2.0 </a>. <p> Aplikacje używające Fusion Tables muszą uwierzytelniać się na serwerach Google. Można to zrobić na dwa sposoby. Pierwszy sposób wykorzystuje klucz API, który otrzymujesz od programisty (patrz poniżej). Dzięki takiemu podejściu użytkownicy końcowi muszą również zalogować się, aby uzyskać dostęp do tabeli Fusion. Drugim podejściem jest użycie konta usługi. Dzięki takiemu podejściu tworzysz poświadczenia i specjalny „Adres e-mail konta usługi” uzyskiwany z <a href=\"https://code.google.com/apis/console/\" target=\"_blank\"> konsoli Google API </a>. Następnie powiadamiasz Fusion Table Control o nazwie adresu e-mail konta usługi i przesyła tajny klucz jako zasób do aplikacji i ustawia właściwość KeyFile tak, aby wskazywała na ten plik. Na koniec zaznacz pole wyboru „UseServiceAuthentication” w projektancie. Podczas korzystania z konta usługi użytkownicy końcowi nie muszą się logować, aby korzystać z tabel Fusion. Twoje konto usług uwierzytelnia cały dostęp. </p><p> Aby uzyskać klucz API, postępuj zgodnie z poniższymi instrukcjami. </p><ol><li> Przejdź do <a href=\"https://code.google.com/apis/console/\" target=\"_blank\"> konsoli Google API </a> i zaloguj się, jeśli to konieczne. </li><li> Wybierz element <i> Usługi </i> z menu po lewej stronie. </li><li> Wybierz usługę <i> Fusiontables </i> z podanej listy i włącz ją. </li><li> Wróć do głównego menu i wybierz element <i> API Access </i>. </li></ol><p> Twój klucz API będzie w dolnej części tego okienka w sekcji „Prosty dostęp do API”. Musisz podać ten klucz jako wartość dla <i> ApiKey </i> właściwość w aplikacji Fusiontables. </p><p> Po uzyskaniu klucza API ustaw wartość właściwości <i> Query </i> na poprawne zapytanie SQL Fusiontables i wywołaj <i> SendQuery </i>, aby wykonać zapytanie. Aplikacja Inventor wyśle zapytanie do serwera Fusion Tables, a blok <i> GotResult </i> zostanie uruchomiony po zwróceniu wyniku z serwera. Wyniki zapytania zostaną zwrócone w formacie CSV i mogą zostać przekonwertowane na format listy przy użyciu „lista z tabeli csv” lub „lista z wierszy csv”. </p><p> Zauważ, że nie musisz się martwić o kodowanie zapytania w UTF. Ale musisz się upewnić, że zapytanie jest zgodne ze składnią opisaną w <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\"> podręczniku </a>, co oznacza, że znaczenie mają takie rzeczy jak wielkie litery w nazwach kolumn, a pojedyncze cudzysłowy muszą być używane wokół nazw kolumn, jeśli są w nich spacje. </p>
GameClientHelpStringComponentPallette = Umożliwia komunikację aplikacji z serwerami gier online
GyroscopeSensorHelpStringComponentPallette = <p> Niewidoczny komponent, który może mierzyć prędkość kątową w trzech wymiarach w jednostkach stopni na sekundę. </p><p> Aby funkcjonować, komponent musi mieć ustawioną właściwość <code>Włączony</code> na Prawda, a urządzenie musi mieć czujnik żyroskopowy. </p>
HorizontalArrangementHelpStringComponentPallette = <p> Element formatujący, w którym umieszcza się komponenty, które powinny być wyświetlane od lewej do prawej. Jeśli chcesz, aby składniki były wyświetlane jeden nad drugim, użyj zamiast tego <code>UkładPionowy</code>. </p>
HorizontalScrollArrangementHelpStringComponentPallette = <p> Element formatujący, w którym umieszcza się komponenty, które powinny być wyświetlane od lewej do prawej. Jeśli chcesz, aby składniki były wyświetlane jeden nad drugim, użyj zamiast tego <code>UkładPionowy</code>. </p><p> Ta wersja jest przewijalna.
ImageHelpStringComponentPallette = Komponent do wyświetlania obrazów. Obraz do wyświetlenia i inne aspekty wyglądu Obrazu można określić w Projektancie lub w Edytorze blokowym.
ImagePickerHelpStringComponentPallette = Specjalny przycisk. Gdy użytkownik stuknie selektor obrazu, pojawia się galeria obrazów urządzenia, a użytkownik może wybrać obraz. Po wybraniu obrazu jest on zapisywany, a właściwość <code>Selected</code> będzie nazwą pliku, w którym przechowywany jest obraz. Aby nie zapełniać pamięci, zostanie zapisanych maksymalnie 10 zdjęć. Wybór większej liczby obrazów spowoduje usunięcie poprzednich obrazów, w kolejności od najstarszego do najnowszego.
ImageSpriteHelpStringComponentPallette = <p> „Ikona”, którą można umieścić na <code>Canvasie</code>, gdzie może reagować na dotyk i przeciąganie, interakcję z innymi Ikonami (<code>Piłką</code> i inne <code> Ikonka</code>) i krawędzią Canvasu, i porusza się zgodnie z jej wartościami właściwości. Jej wygląd jest taki jak w obrazie określonym we właściwości <code>Obraz</code> (chyba że właściwość <code>Widoczny</code> jest ustawiona na <code>Fałsz</code>. </p><p> Aby <code>Ikonka</code> przesuwała się o 10 pikseli w lewo co 1000 milisekund (jedna sekunda), na przykład ustawiając właściwość <code>Prędkość</code> na 10 [pikseli], <code>Interwał</code> do 1000 [milisekund], właściwość <code>Kierunek</code> do 180 [stopni], a właściwość <code>Włączony</code> na <code>Prawda</code>. Ikona której właściwość <code>Obraca się</code> jest ustawiona na <code>Prawda</code> będzie obracać swój obraz w ikonie, gdy <code>Kierunek</code> się zmieni. Sprawdzanie kolizji będzie niedokładne dla wysokich, wąskich lub krótkich Ikon, które są obracane. Każda z właściwości ikony może zostać zmieniona w dowolnym momencie pod kontrolą programu.
LabelHelpStringComponentPallette = Etykieta wyświetla fragment tekstu określony przez właściwość <code>Tekst</code>. Inne właściwości, z których wszystkie można ustawić w Projektancie lub edytorze blokowym, kontrolują wygląd i rozmieszczenie tekstu.
LineStringHelpStringComponentPallette = Linia
ListPickerHelpStringComponentPallette = <p> Przycisk, który po kliknięciu wyświetla listę tekstów do wyboru przez użytkownika. Teksty można określić za pomocą Projektanta lub edytora blokowego, ustawiając właściwość <code>ElementyZŁańcuchaTekst</code> na ich rozdzieloną łańcuchami konkatenację (na przykład <em> wybór 1, wybór 2, wybór 3 </em>) lub ustawiając właściwość <code>Elementy</code> na Listę w Edytorze Blokowym. </p><p> Ustawienie właściwości PokażPasekFiltra na Prawda włączy opcję przeszukiwania listy. Inne właściwości wpływają na wygląd przycisku (<code>WyrównanieTekstu</code>, <code>KolorTła</code> itp.) I czy można go kliknąć (<code>Włączony</code>). <p>
ListViewHelpStringComponentPallette = <p> Jest to widoczny komponent wyświetlający listę elementów tekstowych. <br> Listę można ustawić za pomocą właściwości ElementyZŁańcuchaTekst lub za pomocą bloku Elementy w Edytorze Blokowym. </p>
LocationSensorHelpStringComponentPallette = Niewidoczny komponent zapewniający informacje o lokalizacji, w tym długość i szerokość geograficzną, wysokość (jeśli jest obsługiwana przez urządzenie), prędkość (jeśli jest obsługiwana przez urządzenie) i adres. Może to również wykonać „geokodowanie”, przekształcając podany adres (niekoniecznie bieżący) na szerokość geograficzną (za pomocą metody <code>SzerGeogrZAdresu</code>) i długości geograficznej (za pomocą metody <code>DługGeogrZAdresu</code>). </p><p> Aby funkcjonować, komponent musi mieć ustawioną właściwość <code>Włączony</code> na Prawda, a urządzenie musi mieć włączone wykrywanie lokalizacji przez sieci bezprzewodowe lub satelity GPS (jeśli na zewnątrz). </p> Informacje o lokalizacji mogą nie być dostępne natychmiast po uruchomieniu aplikacji. Będziesz musiał chwilę poczekać na znalezienie i użycie dostawcy lokalizacji lub czekać na zdarzenie GdyZmianaLokalizacji
MapHelpStringComponentPallette = <p> Dwuwymiarowy pojemnik, który renderuje kafelki mapy w tle i pozwala na wiele elementów znacznika do identyfikacji punktów na mapie. Płytki z mapami są dostarczane przez współpracowników OpenStreetMap i United States Geological Survey. </p><p> Komponent Map udostępnia trzy narzędzia do manipulowania jego granicami w aplikacji Inventor. Po pierwsze, zapewniony jest mechanizm blokujący, aby umożliwić przesunięcie mapy względem innych komponentów na ekranie. Po drugie, po odblokowaniu użytkownik może przesunąć mapę w dowolne miejsce. W tej nowej lokalizacji „Ustaw początkową granicę” można nacisnąć przycisk, aby zapisać bieżące współrzędne mapy do jego właściwości. Wreszcie, jeśli mapa zostanie przeniesiona do innej lokalizacji, na przykład w celu dodania znaczników poza ekranem, to „Zresetuj mapę do początkowych obwiedni” przycisku można użyć do ponownego wyśrodkowania mapy w lokalizacji początkowej. </p>
MarkerHelpStringComponentPallette = <p> Ikona umieszczona w punkcie wskazującym informacje na mapie. Markery mogą być używane do dostarczenia okna informacyjnego, niestandardowych kolorów wypełnienia i obrysu oraz niestandardowych obrazów do przekazania informacji użytkownikowi. </p>
MediaStoreHelpStringComponentPallette = Niewidoczny komponent komunikujący się z usługą sieci Web i przechowujący pliki multimedialne.
NearFieldHelpStringComponentPallette = <p> Niewidoczny komponent zapewniający możliwości NFC. Na razie ten komponent obsługuje tylko odczytywanie i zapisywanie znaczników tekstowych (jeśli są obsługiwane przez urządzenie) </p><p> Aby odczytać i napisać znaczniki tekstowe, komponent musi mieć właściwość <code>TrybOdczytu</code> ustawiona na Prawda lub Fałsz. </p><p><strong> Uwaga: </strong> ten komponent będzie działać tylko na ekranie 1 dowolnej aplikacji App Inventor. </p>
NotifierHelpStringComponentPallette = Składnik Powiadomienia wyświetla okna dialogowe alertów, komunikaty i alerty tymczasowe oraz tworzy wpisy dziennika systemu Android za pomocą następujących metod: <ul><li> PokażOknoKomunikatu: wyświetla komunikat, który użytkownik musi odrzucić, naciskając przycisk. </li><li> PokażOknoWyboru: wyświetla komunikat dwóch przycisków, aby użytkownik mógł wybrać jedną z dwóch odpowiedzi, na przykład tak lub nie, po czym wywoływane jest zdarzenie PoWybraniu. </li><li> PokażOknoTekstowe: pozwala użytkownikowi wprowadzić tekst w odpowiedzi na komunikat, po którym wywoływane jest zdarzenie PoWprowadzeniuTekstu. <li> PokażAlert: wyświetla tymczasowy alert, który sam znika po krótkim czasie. </li><li> PokażOknoPostępu: wyświetla alert z ładowaniem spinnera, którego użytkownik nie może odrzucić. Można go odrzucić tylko za pomocą bloku OdrzućOknoPostępu. </li><li> OdrzućOknoPostępu: Odrzuca okno postępu wyświetlane przez PokażOknoPostępu. </li><li> LogError: rejestruje komunikat o błędzie w dzienniku systemu Android. </li><li> LogInfo: loguje komunikat informacyjny do dziennika systemu Android. </li><li> Ostrzeżenie LogWar: rejestruje komunikat ostrzegawczy w dzienniku systemu Android. </li><li> Komunikaty w oknach dialogowych (ale nie alert) może być sformatowany przy użyciu następujących znaczników HTML:&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li> Możesz także użyć znacznika czcionki, aby określić kolor, na przykład  &lt;font color=\"blue\"&gt;. Niektóre z dostępnych nazw kolorów to aqua, black, blue, fuchsia, green, gray, lime,maroon, navy, olive, purple, red, silver, teal, white i yellow</li></ul>
NxtColorSensorHelpStringComponentPallette = Komponent, który zapewnia interfejs wysokiego poziomu do czujnika koloru w robocie LEGO MINDSTORMS NXT.
NxtDirectCommandsHelpStringComponentPallette = Komponent zapewniający niskopoziomowy interfejs do robota LEGO MINDSTORMS NXT z funkcjami wysyłania poleceń bezpośrednich NXT.
NxtDriveHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do robota LEGO MINDSTORMS NXT z funkcjami, które mogą poruszać i obracać robota.
NxtLightSensorHelpStringComponentPallette = Komponent, który zapewnia interfejs wysokiego poziomu do czujnika światła w robocie LEGO MINDSTORMS NXT.
NxtSoundSensorHelpStringComponentPallette = Komponent, który zapewnia interfejs wysokiego poziomu do czujnika dźwięku w robocie LEGO MINDSTORMS NXT.
NxtTouchSensorHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do czujnika dotykowego w robocie LEGO MINDSTORMS NXT.
NxtUltrasonicSensorHelpStringComponentPallette = Komponent zapewniający interfejs wysokiego poziomu do czujnika ultradźwiękowego w robocie LEGO MINDSTORMS NXT.
OrientationSensorHelpStringComponentPallette = <p> Niewidoczny komponent informujący o fizycznej orientacji urządzenia w trzech wymiarach: <ul><li><strong> Rolka </strong>: 0 stopni, gdy urządzenie jest na poziomie, zwiększa się do 90 stopni, gdy urządzenie jest przechylone w górę po lewej stronie i zmniejsza się do -90 stopni, gdy urządzenie jest przechylone w górę po prawej stronie. </li><li><strong> Skok </strong>: 0 stopni, gdy urządzenie jest wypoziomowane, do 90 stopni, gdy urządzenie jest przechylone, tak że jego wierzchołek jest skierowany w dół, do 180 stopni, gdy urządzenie się obróci. Podobnie, gdy urządzenie jest przechylone tak, że jego dno jest skierowane w dół, nachylenie zmniejsza się do -90 stopni, a następnie zmniejsza się do -180 stopni, gdy jest obracane do końca. </li><li><strong> Azymut </strong>: 0 stopni, gdy góra urządzenia wskazuje północ, 90 stopni, gdy wskazuje wschód, 180 stopni, gdy wskazuje południe, 270 stopni, gdy wskazuje na zachód, itp. </li></ul> Te pomiary załóżmy, że samo urządzenie się nie porusza. </p>
PasswordTextBoxHelpStringComponentPallette = <p> Pole do wprowadzania haseł. Jest to to samo, co zwykły komponent <code>PoleTekstowe</code>, z wyjątkiem tego, że nie wyświetla znaków wpisanych przez użytkownika. </p><p> Wartość tekstu w polu można znaleźć lub ustawić za pomocą Właściwość <code>Tekst</code>. Jeśli jest pusta, właściwość <code>Podpowiedź</code>, która pojawia się jako niewyraźny tekst w polu, może dostarczyć użytkownikowi wskazówek, co wpisać. </p><p> Pola tekstowe są zwykle używane z <code> Przycisk</code>, gdy użytkownik kliknie przycisk po zakończeniu wprowadzania tekstu. </p>
PedometerHelpStringComponentPallette = Komponent, który działa jak krokomierz. Wyczuwa ruch przez Akcelerometr i próbuje określić, czy został podjęty krok. Używając konfigurowalnej długości kroku, może również oszacować przebytą odległość.
PhoneCallHelpStringComponentPallette = <p> Niewidoczny komponent, który wywołuje numer podany we właściwości <code>NumerTelefonu</code>, który można ustawić w Projektancie lub edytorze blokowym. Komponent ma metodę <code>WykonajPołączenieTelefoniczne</code>, umożliwiającą programowi uruchomienie połączenia telefonicznego. </p><p> Często ten komponent jest używany ze składnikiem <code>SelektorKontaktów</code>, który pozwala użytkownikowi wybrać kontakt z tych zapisanych w telefonie i ustawia właściwość <code>NumerTelefonu</code> na numer telefonu kontaktu. </p><p> Aby bezpośrednio określić numer telefonu (np. 650 -555-1212), ustaw właściwość <code>NumerTelefonu</code> na tekst o określonych cyfrach (np. „6505551212”). Kreski, kropki i nawiasy mogą być zawarte (np. „(650) -555-1212”), ale zostaną zignorowane; spacje mogą nie zostać uwzględnione. </p>
PhoneNumberPickerHelpStringComponentPallette = Przycisk, który po kliknięciu wyświetla listę numerów telefonów kontaktów do wyboru. Po dokonaniu wyboru przez użytkownika, następujące właściwości zostaną ustawione na informacje o wybranym kontakcie: <ul><li><code>NazwaKontaktu</code>: nazwa kontaktu </li><li><code> NumerTelefonu</code>: numer telefonu kontaktu </li><li><code>AdresEmail</code>: adres e-mail kontaktu </li><li><code>Obraz </code>: nazwa pliku zawierającego obraz kontaktu, który może być użyty jako wartość właściwości <code>Obrazek</code> dla <code>Obraz</code> lub komponent <code>Ikonka</code>. </li></ul></p><p> Inne właściwości wpływają na wygląd przycisku (<code>WyrównanieTekstu</code>, <code>KolorTła</code> itp.) i czy można go kliknąć (<code>Włączony</code>). </p><p> Komponent NumerTelefonuSelektor może nie działać na wszystkich urządzeniach z Androidem. Na przykład w systemach Android przed systemem 3.0 zwrócone listy numerów telefonów i adresów e-mail będą puste.
PhoneStatusHelpStringComponentPallette = Komponent, który zwraca informacje o telefonie.
PlayerHelpStringComponentPallette = Komponent multimedialny, który odtwarza dźwięk i kontroluje wibłracje telefonu. Nazwa pola multimedialnego jest określona we właściwości <code>Źródło</code>, którą można ustawić w Projektancie lub Edytorze Blokowym. Czas trwania wibracji jest określony w edytorze bloków w milisekundach (tysięczne części sekundy). <p> W przypadku obsługiwanych formatów audio zobacz <a href = \"http://developer.android.com/guide/appendix/ media-formats.html \"target =\" _ blank \"> Formaty multimediów obsługiwane przez Android </a>. </p><p> Ten komponent jest najlepszy dla długich plików dźwiękowych, takich jak utwory, podczas gdy komponent <code>dźwięk</code> jest bardziej wydajny w przypadku krótkich plików, takich jak efekty dźwiękowe.</p>
PolygonHelpStringComponentPallette = Wielokąt
ProximitySensorHelpStringComponentPallette = <p> Element niewidoczny, który może mierzyć bliskość obiektu w cm w stosunku do ekranu widoku urządzenia. Ten czujnik jest zwykle używany do określenia, czy słuchawka jest trzymana blisko ucha; tzn. pozwala określić, jak daleko obiekt znajduje się od urządzenia. Wiele urządzeń zwraca bezwzględną odległość w cm, ale niektóre zwracają tylko wartości bliskie i dalekie. W tym przypadku czujnik zwykle zgłasza swoją maksymalną wartość zasięgu w stanie dalekim i mniejszą wartość w stanie bliskim. </p>
RectangleHelpStringComponentPallette = Prostokąt
SharingHelpStringComponentPallette = Udostępnianie to niewidoczny komponent umożliwiający udostępnianie plików i/lub wiadomości między aplikacją a innymi aplikacjami zainstalowanymi na urządzeniu. Komponent wyświetli listę zainstalowanych aplikacji, które mogą obsłużyć dostarczone informacje, i pozwoli użytkownikowi wybrać jedną z nich, aby udostępnić zawartość, na przykład aplikację pocztową, aplikację sieci społecznościowej, aplikację SMS-ową i tak dalej. <br> Ścieżkę do pliku można pobrać bezpośrednio z innych komponentów, takich jak kamera lub SelektorObrazów, ale można ją także określić bezpośrednio do odczytu z pamięci. Należy pamiętać, że różne urządzenia traktują pamięć inaczej, więc kilka rzeczy do wypróbowania, jeśli na przykład masz plik o nazwie arrow.gif w folderze <code>Appinventor/assets</code>, to: <ul><li><code>\"file:///sdcard/Appinventor/assets/arrow.gif\"</code></li> lub <li><code>\"/storage/Appinventor/assets/arrow.gif\"</code ></li></ul>
SliderHelpStringComponentPallette = Suwak to pasek postępu, który dodaje przeciągalny kciuk. Możesz dotknąć kciuka i przeciągnąć w lewo lub w prawo, aby ustawić pozycję kciuka suwaka. Po przesunięciu kciuka suwaka wyzwoli on zdarzenie PozycjaZmieniona, informując o pozycji kciuka suwaka. Zgłoszona pozycja kciuka suwaka może być używana do dynamicznej aktualizacji innego atrybutu składnika, takiego jak rozmiar czcionki PoleTekstowe lub promień kuli.
SoundHelpStringComponentPallette = <p> Komponent multimedialny, który odtwarza pliki dźwiękowe i opcjonalnie wibruje przez liczbę milisekund (tysięcznych części sekundy) określonych w edytorze bloków. Nazwę pliku dźwiękowego do odtworzenia można określić w Projektancie lub w Edytorze bloków. </p><p> Aby uzyskać informacje na temat obsługiwanych formatów plików dźwiękowych, zobacz <a href = \"http://developer.android.com/przewodnik/appendix/media-formats.html target =\"_ blank\"> Formaty multimediów obsługiwane przez Android </a>. </p><p>Komponent <code>Dźwięk</code> jest najlepszy dla krótkich plików dźwiękowych, takich jak jako efekty dźwiękowe, podczas gdy komponent <code>Odtwarzacz</code> jest bardziej wydajny na dłuższe dźwięki, takie jak piosenki. </p><p> Może wystąpić błąd, jeśli próbujesz odtworzyć dźwięk natychmiast po ustawieniu źródła.</p>
SoundRecorderHelpStringComponentPallette = <p> Komponent multimedialny, który nagrywa dźwięk. </p>
SpeechRecognizerHelpStringComponentPallette = Komponent do używania funkcji rozpoznawania mowy do konwersji z mowy na tekst
SpinnerHelpStringComponentPallette = <p>Lista rozwijana wyświetlająca wyskakujące okienko z listą elementów. Te elementy można ustawić w Projektancie lub Edytorze Blokowym, ustawiając właściwość <code>ElementsFromString</code> na konkatenację rozdzielaną łańcuchami (na przykład <em> wybór 1, wybór 2, wybór 3 </em>) lub ustawiając właściwość <code>Elementy</code> na listę w edytorze bloków. Podświetlenie jest tworzone przy pierwszym wybranym elemencie. Tak więc wybranie go nie wygeneruje zdarzenia PoWybraniu. W związku z tym użyteczne jest, aby pierwszy przedmiot ListyRozwijanej był niewybieralny, np. „Wybierz z listy poniżej ...”. </p>
SwitchHelpStringComponentPallette = Pole wyboru, które wywołuje zdarzenie, gdy użytkownik je kliknie. Istnieje wiele właściwości wpływających na jego wygląd, które można ustawić w Projektancie lub edytorze blokowym.
TableArrangementHelpStringComponentPallette = <p> Element formatujący, w którym umieszcza się komponenty, które powinny być wyświetlane w formie tabelarycznej. </p>
TextBoxHelpStringComponentPallette = <p>Pole do wprowadzania tekstu przez użytkownika. Początkowa lub wprowadzona przez użytkownika wartość tekstu znajduje się we właściwości <code>Tekst</code>. Jeśli jest pusta, właściwość <code>Podpowiedź</code>, która pojawia się jako niewyraźny tekst w polu, może dostarczyć użytkownikowi wskazówek, co wpisać. </p><p> Właściwość <code>WieloWiersz</code> określa, czy tekst może mieć więcej niż jedną linię. Dla pojedynczego wiersza tekstowego klawiatura zamknie się automatycznie, gdy użytkownik naciśnie klawisz Gotowe. Aby zamknąć klawiaturę dla wielowierszowych pól tekstowych, aplikacja powinna użyć metody UkryjKlawiaturę lub polegać na użytkowniku, aby nacisnąć klawisz Wstecz. tylko. </p><p> Inne właściwości wpływają na wygląd pola tekstowego (<code>WyrównanieTekstu</code>, <code>KolorTła</code> itp.) i czy można go użyć (<code>Włączone</code>). </p><p> Pola tekstowe są zwykle używane z komponentem <code>Przycisk</code>, gdy użytkownik kliknie przycisk po zakończeniu wprowadzania tekstu. </p><p> Jeśli tekst wprowadzony przez użytkownika nie powinien być wyświetlany, użyj zamiast tego <code>PoleTekstHasło</code>. </p>
TextToSpeechHelpStringComponentPallette = Komponent TekstNaMowę mówi na głos dany tekst. Możesz ustawić wysokość i tempo mowy. <p> Możesz także ustawić język, podając kod języka. Zmienia to wymawianie słów, a nie rzeczywisty język. Na przykład ustawienie języka na francuski i mówienie po angielsku będzie brzmiało jak mówienie po angielsku (en) z francuskim akcentem. </p><p> Możesz także określić kraj, podając kod kraju. Może to wpłynąć na wymowę. Na przykład, angielski angielski (GBR) będzie brzmiał inaczej niż amerykański angielski (USA). Nie każdy kod kraju wpłynie na każdy język. </p><p> Dostępne języki i kraje zależą od konkretnego urządzenia i mogą być wymienione z właściwościami Dostępne języki i Dostępne kraje. </p>
TextingHelpStringComponentPallette = <p> Komponent, który po wywołaniu metody <code>WyślijWiadomość</code> wyśle wiadomość tekstową określoną we właściwości <code>Wiadomość</code> na numer telefonu określony we właściwości <code>NumerTelefonu</code>. </p><p> Jeśli właściwość <code>OdbieranieWłączone</code> jest ustawiona na 1, wiadomości <b> nie zostaną </b> odebrane. Jeśli <code>OdbieranieWłączone</code> jest ustawiony na 2, wiadomości będą odbierane tylko wtedy, gdy aplikacja jest uruchomiona. Wreszcie, jeśli <code>OdbieranieWłączone</code> jest ustawione na 3, wiadomości będą odbierane, gdy aplikacja działa <b> i </b>, gdy aplikacja nie jest uruchomiona, będą kolejkowane i wyświetlane jest powiadomienie dla użytkownika. </p><p> Gdy nadejdzie wiadomość, wywoływane jest zdarzenie <code>WiadomośćOdebrana</code> i zapewnia wysyłanie numeru i wiadomości. </p><p> Aplikacja, która zawiera ten składnik, będzie otrzymywać wiadomości nawet wtedy, gdy jest w tle (tzn. gdy nie jest widoczny na ekranie) i, nawet, jeśli aplikacja nie jest uruchomiona, o ile jest zainstalowana w telefonie. Jeśli telefon otrzyma wiadomość tekstową, gdy aplikacja nie jest na pierwszym planie, telefon wyświetli powiadomienie na pasku powiadomień. Wybranie powiadomienia spowoduje wyświetlenie aplikacji. Jako twórca aplikacji prawdopodobnie będziesz chciał dać swoim użytkownikom możliwość kontrolowania OdbieranieWłączone, dzięki czemu telefon będzie mógł ignorować wiadomości tekstowe. </p><p> Jeśli właściwość GoogleVoiceWłączone ma wartość Prawda, wiadomości można przesyłać dalej Wifi za pomocą Google Voice. Ta opcja wymaga, aby użytkownik miał konto Google Voice, a mobilna aplikacja głosowa została zainstalowana w telefonie. Opcja Google Voice działa tylko na telefonach obsługujących Android 2.0 (Eclair) lub nowszy. </p><p> Aby określić numer telefonu (np. 650-555-1212), ustaw <code>NumerTelefonu</code> właściwość do ciągu tekstowego o określonych cyfrach (np. 6505551212). Kreski, kropki i nawiasy mogą być zawarte (np. (650) -555-1212), ale zostaną zignorowane; spacje mogą nie być uwzględniane. </p><p> Innym sposobem określenia numeru telefonu przez aplikację jest dołączenie komponentu <code>SelektorNumeruTelefonu</code>, który pozwala użytkownikom wybrać numery telefonów z przechowywanych w kontaktach telefonu. </p>
TimePickerHelpStringComponentPallette = <p> Przycisk, który po kliknięciu uruchamia wyskakujące okno dialogowe, aby umożliwić użytkownikowi wybór czasu. </p>
TinyDBHelpStringComponentPallette = TinyDB to niewidoczny składnik, który przechowuje dane dla aplikacji. <p> Aplikacje utworzone w App Inventor są inicjowane przy każdym uruchomieniu: jeśli aplikacja ustawia wartość zmiennej, a użytkownik zamyka aplikację, wartość tej zmiennej nie zostanie zapamiętana przy następnym uruchomieniu aplikacji. Natomiast TinyDB to <em> trwały </em> magazyn danych dla aplikacji, czyli przechowywane tam dane będą dostępne za każdym razem, gdy aplikacja jest uruchamiana. Przykładem może być gra, która zapisuje wysoki wynik i pobiera go za każdym razem, gdy gra jest rozgrywana. </ <p><p> Elementy danych to łańcuchy przechowywane pod <em> tagami </em>. Aby zapisać element danych, określ tag, w którym ma być przechowywany. Następnie możesz pobrać dane, które były przechowywane pod danym tagiem. </p><p> Na aplikację przypada tylko jeden magazyn danych. Nawet jeśli masz wiele komponentów TinyDB, będą korzystać z tego samego magazynu danych. Aby uzyskać efekt oddzielnych sklepów, użyj różnych kluczy. Każda aplikacja ma także własny magazyn danych. Nie możesz używać TinyDB do przekazywania danych między dwoma różnymi aplikacjami w telefonie, chociaż <em> możesz </em> użyć TinyDb do udostępniania danych między różnymi ekranami aplikacji wieloekranowej. </p><p> Podczas tworzenia aplikacji korzystających z AI Companion wszystkie aplikacje korzystające z niego będą miały ten sam TinyDb. To udostępnienie zniknie po zbudowaniu aplikacji. Ale podczas tworzenia powinieneś uważać, aby wyczyścić TinyDb za każdym razem, gdy zaczniesz pracować nad nową aplikacją. </p>
TinyWebDBHelpStringComponentPallette = Niewidoczny komponent komunikujący się z usługą internetową w celu przechowywania i pobierania informacji.
TwitterHelpStringComponentPallette = Niewidoczny komponent umożliwiający komunikację z <a href=\"http://www.twitter.com\" target=\"_blank\"> Twitter </a>. Gdy użytkownik zaloguje się do swojego konta na Twitterze (a autoryzacja została potwierdzona pomyślnie przez zdarzenie <code>JestAutoryzowany</code>), dostępnych jest o wiele więcej operacji: <ul><li> Wyszukiwanie Twittera dla tweetów lub etykiet (<code> SearchTwitter</code>) </li><li> Wysyłanie tweeta (<code>Tweet</code>) </li><li> Wysyłanie tweeta z obrazem (<code>TweetZObrazem</code>) </li><li> Kierowanie wiadomości do konkretnego użytkownika (<code>BezpośredniaWiadomość</code>) </li><li> Odbieranie najnowszych wiadomości kierowanych do zalogowanego użytkownika (<code>ŻądajBezpośrednieWiadomości </code>) </li><li> Podążanie za konkretnym użytkownikiem (<code>Obserwuj</code>) </li><li> Przestań obserwować konkretnego użytkownika (<code>PrzestańObserwować</code>) </li><li> Pobieranie listy użytkowników śledzących zalogowanego użytkownika (<code>ŻądajObserwujących</code>) </li><li> Pobieranie najnowszych wiadomości użytkowników, a następnie zalogowanego użytkownika (<code> RequestFriendTimeline</code>) </li><li> Pobieranie najnowszych informacji o zalogowanym użytkowniku (<code>ŻądajWzmianek<code>) </li></ul></p><p> Musisz uzyskać klucz konsumenta i tajemnicę konsumenta dla autoryzacji Twittera specyficznej dla twojej aplikacji z http://twitter.com/oauth_clients/new
VerticalArrangementHelpStringComponentPallette = <p> Element formatujący, w którym umieszcza się komponenty, które powinny być wyświetlane jeden pod drugim. (Pierwszy komponent potomny jest przechowywany na górze, drugi pod nim itp.) Jeśli chcesz, aby składniki były wyświetlane obok siebie, użyj zamiast tego <code>UkładPoziomy</code>. </p>
VerticalScrollArrangementHelpStringComponentPallette = <p> Element formatujący, w którym umieszcza się komponenty, które powinny być wyświetlane jeden pod drugim. (Pierwszy komponent potomny jest przechowywany na górze, drugi pod nim itp.) Jeśli chcesz, aby składniki były wyświetlane obok siebie, użyj zamiast tego <code>UkładPoziomy</code>. </p><p> Ta wersja jest przewijalna
VideoPlayerHelpStringComponentPallette = Komponent multimedialny umożliwiający odtwarzanie filmów. Po uruchomieniu aplikacji VideoPlayer zostanie wyświetlony jako prostokąt na ekranie. Jeśli użytkownik dotknie prostokąta, pojawią się kontrolki do odtwarzania/pauzy, przeskakiwania do przodu i przeskakiwania do tyłu w obrębie wideo. Aplikacja może również kontrolować zachowanie, wywołując metody <code>Start</code>, <code>Pauza</code> i <code>SzukajDo</code>. <p> Pliki wideo powinny być w formatach 3GPP (.3gp) lub MPEG-4 (.mp4). Aby uzyskać więcej informacji na temat formatów prawnych, zobacz <a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\"> Formaty multimediów obsługiwane przez Android </a>. </p><p> Aplikacja Inventor dla systemu Android zezwala tylko na pliki wideo o rozmiarze poniżej 1 MB i ogranicza łączny rozmiar aplikacji do 5 MB, z których nie wszystkie są dostępne dla plików multimedialnych (wideo, audio i dźwiękowe). Jeśli pliki multimedialne są zbyt duże, mogą pojawić się błędy podczas pakowania lub instalowania aplikacji. W takim przypadku należy zmniejszyć liczbę plików multimedialnych lub ich rozmiary. Większość programów do edycji wideo, takich jak Windows Movie Maker i Apple iMovie, może pomóc w zmniejszeniu rozmiaru filmów, skracając je lub przekodowując wideo w bardziej kompaktowy format. </p><p> Możesz także ustawić źródło mediów do adresu URL, który wskazuje na strumieniowe wideo, ale adres URL musi wskazywać na sam plik wideo, a nie na program, który odtwarza wideo.
VotingHelpStringComponentPallette = Składnik głosowania komunikuje się z usługą internetową, aby pobrać kartę do głosowania i odesłać głosy użytkowników. <p> Aplikacja powinna wywołać metodę <code>ŻądanieKarty</code>, zwykle w procedurze obsługi zdarzenia <code>Inicjalizuj</code>, aby uzyskać pytanie i opcje głosowania z usługi sieci Web (określone przez <code> właściwość ServiceURL</code>). W zależności od odpowiedzi usługi sieci Web, system aktywuje jedno z trzech następujących zdarzeń: <ol><li><code>UzyskanoKartę</code>, wskazując, że pytanie o głosowanie i opcje zostały pobrane, a właściwości <code>GłosowaniePytanie</code> i <code>OpcjeGłosowania</code> zostały ustawione. </li><li><code>NoOpenPoll</code>, wskazując, że nie jest dostępne pytanie o głosowanie. </li><li><code> WebServiceError</code>, wskazując, że usługa nie dostarczyła odpowiedzi prawnej i wysłała komunikaty o błędach. </li></ol></p><p> Po uzyskaniu karty do głosowania aplikacja powinna pozwolić użytkownikowi aby dokonać wyboru spośród <code>OpcjeGłosowania</code> i ustawić właściwość <code>WybórUżytkownika</code> na ten wybór. Aplikacja powinna również ustawić <code>IdUżytkownika</code>, aby określić, który użytkownik głosuje. </p><p> Po ustawieniu aplikacji <code>WybórUżytkownika</code> i <code>IdUżytkownika</code>, aplikacja może wywołać <code>WysłanoKartę</code>, aby wysłać te informacje do usługi sieci Web. Jeśli usługa pomyślnie odbierze głos, zostanie wywołane zdarzenie <code>UzyskanoPotwierdzenieKarty</code>. W przeciwnym razie zostanie wywołane zdarzenie <code>WebServiceError</code> z odpowiednim komunikatem o błędzie. </p>
WebHelpStringComponentPallette = Niewidoczny komponent, który udostępnia funkcje żądań HTTP GET, POST, PUT i DELETE.
WebViewerHelpStringComponentPallette = Komponent do przeglądania stron internetowych. Adres URL domowy można określić w Projektancie lub w Edytorze blokowym. Widok można ustawić tak, aby śledził linki, gdy są one dotknięte, a użytkownicy mogą wypełniać formularze internetowe. Ostrzeżenie: to nie jest pełna przeglądarka. Na przykład naciśnięcie klawisza sprzętowego telefonu spowoduje zamknięcie aplikacji, a nie powrót do historii przeglądarki. <p /> Możesz użyć właściwości WebViewer.WebViewString, aby komunikować się między aplikacją a kodem JavaScript uruchomionym w przeglądarce internetowej. W aplikacji otrzymujesz i ustawiasz WebViewString. W WebViewer włączasz Javascript, który odwołuje się do obiektu window.AppInventor, używając metod <em>getWebViewString()</em> i <em>setWebViewString(tekst)</em>. <p /> Na przykład, jeśli WebViewer otwiera stronę zawierającą polecenie Javascript <br /><em>document.write (\"Odpowiedź brzmi\" + window.AppInventor.getWebViewString ()); </em>< br /> i jeśli ustawisz WebView.WebVewString na „witaj”, strona internetowa pokaże </ br><em>Odpowiedź brzmi: witaj</em>. <br /> A jeśli strona internetowa zawiera Javascript, który uruchamia polecenie <br /><em> window.AppInventor.setWebViewString (\"witaj z Javascript\") </em>, <br />, a następnie wartość właściwości WebViewString będzie <br /><em>witaj z Javascriptem</em>.
YandexTranslateHelpStringComponentPallette = Użyj tego komponentu do tłumaczenia słów i zdań między różnymi językami. Ten komponent wymaga dostępu do Internetu, ponieważ zażąda tłumaczenia do usługi Yandex.Translate. Określ język źródłowy i docelowy w formularzu źródłowo-docelowym, używając kodów dwuliterowych. Tak więc „en-es” będzie tłumaczyć z angielskiego na hiszpański, podczas gdy „es-ru” będzie tłumaczyć z hiszpańskiego na rosyjski. Jeśli pominiesz język źródłowy, usługa spróbuje wykryć język źródłowy. Podanie tylko „es” będzie próbowało wykryć język źródłowy i przetłumaczyć go na hiszpański. <P /> Ten komponent jest obsługiwany przez usługę tłumaczenia Yandex. Więcej informacji można znaleźć na stronie http://api.yandex.com/translate/, w tym listę dostępnych języków oraz znaczenie kodów językowych i kodów statusu. <p /> Uwaga: Tłumaczenie odbywa się asynchronicznie w tle. Po zakończeniu tłumaczenia uruchamiane jest zdarzenie „OtrzymanoTłumaczenie”.
accelerometerSensorComponentPallette = SensorAkcelerometru
activityStarterComponentPallette = ActivityStarter
ballComponentPallette = Piłka
barcodeScannerComponentPallette = SkanerKodówKreskowych
bluetoothClientComponentPallette = KlientBluetooth
bluetoothServerComponentPallette = BluetoothSerwer
buttonComponentPallette = Przycisk
camcorderComponentPallette = KameraWideo
cameraComponentPallette = AparatFotograficzny
canvasComponentPallette = Canvas
checkBoxComponentPallette = PoleWyboru
circleComponentPallette = Okrąg
clockComponentPallette = Zegar
cloudDBComponentPallette = CloudDB
connectivityComponentPallette = Łączność
contactPickerComponentPallette = SelektorKontaktów
datePickerComponentPallette = SelektorDaty
drawingAndAnimationComponentPallette = Rysowanie i animacja
emailPickerComponentPallette = SelektorAdrEmail
ev3ColorSensorComponentPallette = Ev3ColorSensor
ev3CommandsComponentPallette = Ev3Commands
ev3GyroSensorComponentPallette = Ev3GyroSensor
ev3MotorsComponentPallette = Ev3Motors
ev3SoundComponentPallette = Ev3Sound
ev3TouchSensorComponentPallette = Ev3TouchSensor
ev3UIComponentPallette = Ev3UI
ev3UltrasonicSensorComponentPallette = Ev3UltrasonicSensor
experimentalComponentPallette = Eksperymentalne
extensionComponentPallette = Rozszerzenie
featureCollectionComponentPallette = FeatureCollection
fileComponentPallette = Plik
firebaseDBComponentPallette = FirebaseDB
forInternalUseOnlyComponentPallette = Tylkodoużytkuwewnętrznego
formComponentPallette = Formularz
fusiontablesControlComponentPallette = FusiontablesControl
gameClientComponentPallette = GameClient
gyroscopeSensorComponentPallette = Żyroskop
horizontalArrangementComponentPallette = UkładPoziomy
horizontalScrollArrangementComponentPallette = UkładPoziomyPrzewijalny
imageComponentPallette = Obraz
imagePickerComponentPallette = SelektorObrazów
imageSpriteComponentPallette = Ikonka
internalUseComponentPallette = Tylkodoużytkuwewnętrznego
labelComponentPallette = Etykieta
layoutComponentPallette = Układ
legoMindstormsComponentPallette = LEGO® MINDSTORMS®
lineStringComponentPallette = CiągLiniowy
listPickerComponentPallette = ListaWyboru
listViewComponentPallette = WidokListy
locationSensorComponentPallette = SensorLokalizacji
mapComponentPallette = Mapa
mapsComponentPallette = Mapy
markerComponentPallette = Znacznik
mediaComponentPallette = Media
mediaStoreComponentPallette = MediaStore
nearFieldComponentPallette = NearField
notifierComponentPallette = Powiadomienie
nxtColorSensorComponentPallette = NxtColorSensor
nxtDirectCommandsComponentPallette = NxtDirectCommands
nxtDriveComponentPallette = NxtDrive
nxtLightSensorComponentPallette = NxtLightSensor
nxtSoundSensorComponentPallette = NxtSoundSensor
nxtTouchSensorComponentPallette = NxtTouchSensor
nxtUltrasonicSensorComponentPallette = NxtUltrasonicSensor
orientationSensorComponentPallette = CzujnikOrientacji
passwordTextBoxComponentPallette = PoleTekstHasło
pedometerComponentPallette = Krokomierz
phoneCallComponentPallette = PołączenieTelefoniczne
phoneNumberPickerComponentPallette = SelektorNumeruTelefonu
phoneStatusComponentPallette = StatusTelefonu
playerComponentPallette = Gracz
polygonComponentPallette = Wielokąt
proximitySensorComponentPallette = CzujnikZbliżeniowy
rectangleComponentPallette = Prostokąt
sensorsComponentPallette = Czujniki
sharingComponentPallette = Udostępnianie
sliderComponentPallette = Suwak
socialComponentPallette = Społeczny
soundComponentPallette = Dźwięk
soundRecorderComponentPallette = RejestratorDźwięku
speechRecognizerComponentPallette = RozpoznawanieMowy
spinnerComponentPallette = ListaRozwijana
storageComponentPallette = Przechowywanie
switchComponentPallette = Przełącznik
tableArrangementComponentPallette = UkładTabelaryczny
textBoxComponentPallette = PoleTekstowe
textToSpeechComponentPallette = TekstNaMowę
textingComponentPallette = SMS-y
timePickerComponentPallette = SelektorCzasu
tinyDBComponentPallette = TinyDB
tinyWebDBComponentPallette = TinyWebDB
twitterComponentPallette = Twitter
uninitializedComponentPallette = Niezainicjowany
userInterfaceComponentPallette = Interfejs użytkownika
verticalArrangementComponentPallette = UkładPionowy
verticalScrollArrangementComponentPallette = UkładPionowyPrzewijany
videoPlayerComponentPallette = OdtwarzaczWideo
votingComponentPallette = Głosowanie
webComponentPallette = Web
webViewerComponentPallette = WebViewer
yandexTranslateComponentPallette = YandexTranslate
