BallHelpStringComponentPallette = <p>Um "sprite" redondo que pode ser colocado numa <code>Pintura</code>, onde pode reagir a toques e ser arrastado, interagir com outros sprites (<code>SpriteImagem</code>s e outras <code>Bola</code>s), e a borda da pintura, e se mover de acordo com seus valores de propriedade.</p><p>Por exemplo, fazer uma <code>Bola</code> se mover 4 pixels em direção ao topo de uma <code>Pintura</code> a cada 500 milissegundos, você deve ajustar a propriedade <code>Velocidade</code> para 4 [pixels], a propriedade <code>Intervalo</code> para 500 [milissegundos], a propriedade <code>Direção</code> para 90 [graus], e a propriedade <code>Ativado</code> para <code>verdadeiro</code>.  Essas e outras propriedades podem ser alteradas a qualquer momento.</p><p>A diferença entre uma Bola e um <code>SpriteImagem</code> é que o último pode obter sua aparência a partir de um ficheiro de imagem, enquanto a aparência da Bola pode ser alterada apenas variando suas propriedades <code>CorDePintura</code> e <code>Raio</code></p>
FormComponentPallette = Formulário
ImageHelpStringComponentPallette = Componente para apresentação de imagens. A figura a ser apresentada, e outros aspectos de aparência da Imagem podem ser especificados no Designer ou no Editor de Blocos.
LocationSensorHelpStringComponentPallette = Componente invisível que dá informações sobre a localização, incluindo a longitude, a latitude, a altitude (se for suportado pelo dispositivo), e o endereço.  Pode-se também executar "geocodificação", convertendo um dado endereço (não necessariamente o atual) para uma latitude (com o método <code>LatitudeDoEndereço</code>) e uma longitude (com o método <code>LongitudeDoEndereço</code>).</p><p>Para funcionar, o componente deve ter sua propriedade <code>Ativado</code> ajustada para verdadeiro, e o dispositivo deve poder registrar a localização através de redes sem fio ou satélites GPS (em ambientes externos).</p>Informações de localização podem não estar disponíveis imediatamente quando um app inicia.  Você terá que esperar alguns instantes para um provedor de localização ser encontrado e utilizado, ou esperar pelo evento LocalizaçãoAlterada
NotifierHelpStringComponentPallette = O componente Notificador mostra diálogos de alerta, mensagens, e alertas temporários, e cria entradas de log Android através dos seguintes métodos: <ul><li> MostrarDiálogoDeMensagem: mostra uma mensagem que o utilizador deve dispensar pressionando um botão.</li><li> MostrarDiálogoDeEscolha: mostra uma mensagem com dois botões para utilizador decidir entre, por exemplo, sim ou não, o que dispara o evento DepoisDeEscolher.</li><li> MostrarDiálogoDeTexto: deixa o utilizador entrar texto em resposta a uma mensagem, o que dispara o evento DepoisDeEntrarTexto.</li><li> MostrarAlerta: mostra um alerta temporário que desaparece depois de um curto tempo.</li><li> MostrarDiálogoDeProgresso: mostra um diálogo com uma rolagem de progresso que não pode ser dispensado pelo utilizador, apenas pelo bloco DispensarDiálogoDeProgresso.</li><li> DispensarDiálogoDeProgresso: Dispensa o diálogo de progresso mostrado por MostrarDiálogoDeProgresso.</li><li> LogarErro: loga uma mensagem de erro no log do Android. </li><li> LogarInfo: loga uma mensagem de informação no log do Android.</li><li> LogarAtenção: loga uma mensagem de atenção no log do Android.</li><li>As mensagens nos diálogos (mas não os alertas) podem ser formatadas com as seguintes tags HTML:&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li>Você pode também usar a tag <em>font</em> para especificar cor, por exemplo, &lt;font color="blue"&gt;.  Algumas cores disponíveis são: aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white, and yellow</li></ul>
PhoneNumberPickerHelpStringComponentPallette = Um botão que, quando clicado, exibe uma lista dos números de telefone dos contatos para se escolher. Depois que o utilizador escolhe, as seguintes propriedades conterão as informações do contato escolhido: <ul><li> <code>NomeDoContato</code>: o nome do contato </li> <li> <code>NúmeroDeTelefone</code>: Número de telefone do contato </li> <li><code>EndereçoDoEmail</code>: Endereço de email principal do contato</li> <li> <code>Imagem</code>: o nome do ficheiro que contém a imagem do contato, que pode ser usada na propriedade <code>Imagem</code> dos componentes <code>Imagem</code> ou <code>SpriteImagem</code>. </li> </ul> </p>  <p>Outras propriedades afetam a disponibilidade da caixa de texto (<code>Ativado</code>) e a sua aparência da caixa de texto (<code>AlinhamentoDoTexto</code>, <code>CorDeFundo</code>, etc.).</p> <p>A Escolha não funciona em todos os telefones. Se ele falhar, o componente irá mostrar uma notificação. O comportamento de erro pode ser substituído com o manipulador de eventos Ecrã.OcorreuErro.
PhoneStatusHelpStringComponentPallette = Componente que retorna informações sobre o telefone.
SoundRecorderHelpStringComponentPallette = <p>Componente multimédia que grava áudio.</p>
TextToSpeechHelpStringComponentPallette = Componente usado para converter um texto em voz humana sintetizada
activityStarterComponentPallette = IniciadorDeAtividades
barcodeScannerComponentPallette = CódigoDeBarras
bluetoothClientComponentPallette = ClienteBluetooth
bluetoothServerComponentPallette = ServidorBluetooth
cameraComponentPallette = Câmera
contactPickerComponentPallette = EscolheContato
nxtColorSensorComponentPallette = NxtSensorDeCor
speechRecognizerComponentPallette = ReconhecedorDeVoz
spinnerComponentPallette = ListaSuspensa
textingComponentPallette = MensagensSMS
yandexTranslateComponentPallette = TradutorYandex
BarcodeScannerHelpStringComponentPallette = Componente para reconhecer e ler um código de barras
WebHelpStringComponentPallette = Componentes invisíveis para disponibilizar funções que executam operações do tipo GET, POST, PUT e DELETE do protocolo HTTP.
WebViewerHelpStringComponentPallette = <p>Componente para a visualizar páginas da web. A URL inicial pode ser especificada no Designer ou no Editor de Blocos. A visualização pode ser ajustada para seguir os links selecionados pelo o utilizador, ou para permitir o preenchimento de formulários web. Aviso: Este não é um navegador completo. Por exemplo, pressionando a tecla Voltar do hardware do telefone irá sair do app, em vez de mover para trás no histórico do navegador.</p><p>Você pode usar a propriedade <code>NavegadorWeb.WebViewString</code>  para comunicação entre o seu app e código Javascript em execução na página NavegadorWeb. (Obs: WebViewString = Cadeia de Texto do Navegador Web). No app, você obter e ajustar <code>CadeiaNavegaçãoWeb</code>. No <code>NavegadorWeb</code>, você pode incluir no Javascript referência ao objeto <code>window.AppInventor</code>, usando os métodos <code>getWebViewString()</code> e <code>setWebViewString(texto)</code>. </p><p>Por exemplo, se o <code>NavegadorWeb</code> abre uma página que contém o comando Javascript... <br /> <em>document.write("A resposta é " + window.AppInventor.getWebViewString());</em> <br />...e se você ajustar <code>NavegadorWeb.WebViewString</code> para "Olá", então a página web vai mostrar <br /> <em>A resposta é Olá</em>. <br /> E se a página Web contém Javascript que executa o comando <br /><em>window.AppInventor.setWebViewString("Olá do Javascript")</em>, <br /> então o valor da propriedade <code>NavegadorWeb.WebViewString</code> se tornará "Olá do Javascript".</p>
drawanimationComponentPallette = Desenho e Animação
fileComponentPallette = Ficheiro
legoComponentPallette = LEGO® MINDSTORMS®
nxtUltrasonicSensorComponentPallette = NxtSensorUltrasônico
playerComponentPallette = Tocador
proximitySensorComponentPallette = SensorDeProximidade
soundComponentPallette = Som
tableArrangementComponentPallette = OrganizaçãoEmTabela
tinyDBComponentPallette = TinyDB
videoPlayerComponentPallette = ReprodutorDeVídeo
CamcorderHelpStringComponentPallette = Um componente para gravar um vídeo usando a câmera do dispositivo. Depois do vídeo ser gravado, o nome do ficheiro no telefone fica disponível como um argumento para o evento DepoisDeFilmar. O nome do ficheiro pode ser usado, por exemplo, para configurar a propriedade do componente ReprodutorDeVídeo.
CameraHelpStringComponentPallette = Um componente para tirar fotos usando a câmera do aparelho. Depois da foto ser tirada, o nome do ficheiro no telefone está disponível como um argumento para o evento <code>DepoisDeFotografar</code>. O nome do ficheiro pode ser usado, por exemplo, para atribuir a propriedade <code>Imagem</code> de um componente <code>Imagem</code>.
DatePickerHelpStringComponentPallette = <p>Um botão que, quando clicado, inicia um diálogo que permite ao utilizador selecionar uma data.</p>
ImagePickerHelpStringComponentPallette = Um botão para permitir ao utilizador selecionar uma imagem. Ao tocar o EscolheImagem a galeria de imagens do dispositivo aparece, permitindo a escolha. Depois da imagem ser escolhida, é gravada, e a propriedade <code>Selecionado</code> será o nome do ficheiro onde a imagem está armazenada. Um máximo de 10 imagens podem ser armazenadas simultaneamente: depois disso, imagens mais antigas serão apagadas, para evitar esgotar o armazenamento.
ImageSpriteHelpStringComponentPallette = <p>Um "sprite" que pode ser colocado sobre uma <code>Pintura</code>, onde poderá reagir a toques e arrastamentos, interagir com outros sprites (<code>Bola</code>s e outros <code>SpriteImagem</code>s), e com a borda do ecrã, e mover-se de acordo com suas propriedade. A aparência é dada pela propriedade <code>Imagem</code> (a menos que a propriedade <code>Visível</code> seja <code>falso</code>. </p> <p>Para mover um <code>SpriteImagem</code> 10 pixels para a esquerda a cada 1000 milissegundos, por exemplo, você deve ajustar a propriedade <code>Velocidade</code> para 10 [pixels], a propriedade <code>Intervalo</code> para 1000 [milissegundos], e a propriedade <code>Direção</code> para 180 [graus], e a propriedade <code>Ativado</code> para <code>verdadeiro</code>. Um sprite cuja propriedade <code>Rodar</code> é <code>verdadeiro</code> irá girar sua imagem conforme a propriedade <code>Direção</code> muda. A verificação de colisão com sprites, na versão atual, verifica a posição não rotacionada do sprite, ou seja, a verificação de colisão será imprecisa para sprites altos e magros, ou baixos e gordos que estejam rotacionados. Qualquer das propriedades do sprite podem ser alteradas a qualquer momento sob o controle do programa.</p>
ListViewHelpStringComponentPallette = <p>Este é um componente visível que permite colocar uma lista de elementos de texto para apresentação no seu ecrã. <br />A lista pode ser ajustada usando a propriedade <code>CadeiaDeElementos</code> ou usando o bloco <code>Elementos</code> no Editor de Blocos.</p>
NxtDriveHelpStringComponentPallette = Um componente que provê uma interface alto nível para o robô LEGO MINDSTORMS NXT, com funções que podem mover e girar o robô.
NxtTouchSensorHelpStringComponentPallette = Um componente que provê uma interface alto nível para o sensor de toque no robô LEGO MINDSTORMS NXT.
OrientationSensorHelpStringComponentPallette = <p>Componente invisível que fornece informações sobre a orientação tridimensional do dispositivo:<ul> <li><strong>Rolagem</strong>: 0 graus com o dispositivo nivelado, aumenta para 90 graus quando o dispositivo está com o lado esquerdo para cima, e diminui para -90 graus quando o dispositivo está com o lado direito para cima</li> <li> <strong>Altura</strong> (Arfagem): 0 graus com o dispositivo nivelado com o ecrã para cima, 90 quando o dispositivo está com o topo para baixo, e até 180 graus com o dispositivo totalmente invertido; da mesma forma -90 graus com a base para baixo e até -180 graus com o dispositivo totalmente invertido.</li> <li> <strong>Azimute</strong>: 0 graus quando o topo do dispositivo aponta para o norte; 90 graus quando aponta para o leste; 180 graus, para o sul; 270 graus, para o oeste</li> </ul>Estas medições assumem que o dispositivo em si não está se movendo.</p>
SpeechRecognizerHelpStringComponentPallette = Componente para usar Reconhecimento de Voz e converter voz em texto
TextBoxHelpStringComponentPallette = <p>Uma caixa para o utilizador inserir texto. O valor inicial ou texto inserido pelo utilizador está na propriedade <code>Texto</code>. Se estiver em branco, a propriedade <code>Dica</code> especifica um texto para aparecer fracamente na caixa, como orientação para o utilizador sobre o que preencher.</p><p>A propriedade <code>MultiLinha</code> especifica se o texto pode ter mais de uma linha. Para caixas de texto de linha única, o teclado fecha automaticamente quando o utilizador pressiona a tecla Concluído. Para fechar o teclado em caixas de texto de várias linhas, o app deve usar o método <code>EsconderTeclado</code> ou esperar o utilizador pressionar tecla Voltar.</p><p>A propriedade <code>SomenteNúmeros</code> restringe o teclado para entradas numéricas.</p><p>Outras propriedades afetam a disponibilidade da caixa de texto (<code>Ativado</code>) e a sua aparência da caixa de texto (<code>AlinhamentoDoTexto</code>, <code>CorDeFundo</code>, etc.).</p><p>As caixas de texto são normalmente utilizadas com o componente <code>Botão</code> para que utilizador clique o botão quando a entrada de texto estiver completa.</p><p>Se o texto digitado pelo utilizador não deve ser mostrado, prefira o componente <code>CaixaDeSenha</code>.</p>
TinyWebDBHelpStringComponentPallette = Componentes invisíveis que se comunicam com serviços web para armazenar e receber informações.
UIComponentPallette = Interface de Utilizador
VideoPlayerHelpStringComponentPallette = Um componente capaz de reproduzir vídeos multimédia. Quando a app é executada, o <code>ReprodutorDeVídeo</code> será exibido como um retângulo no ecrã. Se o utilizador toca o retângulo, controles aparecem para reproduzir / pausar, saltar para frente e para trás dentro do vídeo. O app também pode controlar o comportamento chamando os métodos <code>Iniciar</code>, <code>Pausar</code> e <code>MoverPara</code>. <p>Os ficheiros de vídeo devem estar em formato Windows Media Video (.wmv), 3GPP (.3gp), ou MPEG-4 (.mp4). Para mais detalhes sobre os formatos suportados, consulte <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Formatos Suportados pelo Android</a>. </p> <p>O App Inventor para Android permite somente ficheiros de vídeo com menos de 1 MB, e limita o tamanho total de um app para 5 MB (que não estão integralmente disponíveis para ficheiros de multimédia). Se os seus ficheiros de multimédia são muito grandes, você pode ter erros durante o empacotamento ou a instalação do app. A maioria dos softwares de edição de vídeo, como o Windows Movie Maker e Apple iMovie, pode ajudá-lo a diminuir o tamanho dos vídeos, encurtando ou recodificando o vídeo de forma mais compacta. </p> <p>Você também pode também ajustar a fonte de vídeo para um URL que aponta para um streaming de vídeo, mas o URL deverá apontar para o vídeo em si, e não para um programa que reproduz o vídeo.
YandexTranslateHelpStringComponentPallette = Use este componente para traduzir palavras e sentenças entre linguagens distintas. Este componente precisa de acesso à Internet, já que ele irá pedir as traduções ao serviço Yandex.Translate. Especifique a linguagem de origem e de destino na forma origem-destino, usando códigos de linguagem de duas letras, ou seja: "en-es" irá traduzir de inglês para espanhol, enquanto "es-ru" irá traduzir de espanhol para russo. Se você informar apenas uma linguagem, o serviço tentará detectar a linguagem de origem; ou seja, informando apenas "es", o componente tentará detectar a linguagem de origem e traduzirá para espanhol.<p />Este componente é amparado pelo serviço de traduções Yandex. Veja http://api.yandex.com/translate/ para mais informações, incluindo a lista de linguagens disponíveis, os códigos das linguagens, e os códigos de status. <p />Obs: A tradução acontece de forma assíncrona, no fundo. Quando a tarefa completa, o evento "RecebeuTradução" dispara.
clockComponentPallette = Temporizador
connectivityComponentPallette = Conectividade
datePickerComponentPallette = SeletorDeData
fusiontablesControlComponentPallette = ControleDeFusiontables
imageSpriteComponentPallette = SpriteImagem
listViewComponentPallette = VisualizadorDeListas
locationSensorComponentPallette = SensorDeLocalização
notifierComponentPallette = Notificador
passwordTextBoxComponentPallette = CaixaDeSenha
phoneCallComponentPallette = Ligação
sensorsComponentPallette = Sensores
storageComponentPallette = Armazenamento
textBoxComponentPallette = CaixaDeTexto
uninitializedComponentPallette = NãoInicializado
BluetoothServerHelpStringComponentPallette = Componente de servidor Bluetooth
ButtonHelpStringComponentPallette = Botão com a habilidade de detectar cliques. A aparência e disponibilidade (<code>Ativado</code>) do Botão podem ser alterados no Designer ou no Editor de Blocos.
ClockHelpStringComponentPallette = Componente invisível que fornece a data/hora atual usando o relógio interno do telefone. O componente pode disparar um evento em intervalos regulares, e executar cálculos, manipulações, e conversões de tempo. </p> <p>Há também métodos para converter entre instantes de tempo e cadeias de texto: padrões aceitáveis são cadeia vazia, MM/DD/AAAA HH:mm:ss a ou MMM d, aaaa hh:mm. A cadeia vazia irá fornecer o formato padrão, que é "MMM d, aaaa hh:mm:ss a" para FormatarDataHora "MMM d, aaaa" para FormatarData. Para ver todos os formatos possíveis, veja <a href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" target="_blank">aqui</a> .
ListPickerHelpStringComponentPallette = <p>Um botão que, quando clicado, mostra uma lista de textos para o utilizador escolher. Os textos podem ser especificados tanto no Designer quanto no Editor de Blocos, ajustando a propriedade <code>CadeiaDeElementos</code> para uma cadeia de texto com os elementos concatenados (por examplo, <em>opção 1, opção 2, opção 3</em>) ou ajustando a propriedade <code>Elementos</code> para uma lista no Editor de Blocos.</p><p>Ajustando a propriedade <code>MostrarBarraDeFiltragem</code> para <code>verdadeiro</code> tornará a lista buscável. Outras propriedades afetam a disponibilidade do botão (<code>Ativado</code>) e sua aparência (<code>AlinhamentoDoTexto</code>, <code>CorDeFundo</code>, etc.).</p>
NearFieldHelpStringComponentPallette = <p>Componente invisível que providencia capacidades NFC (near-field communication).  Por enquanto este componente suporta apenas a leitura e escrita de rótulos de texto (se o dispositivo suportar NFC)</p><p>Para escolher entre ler ou gravar rótulos de texto, ajuste a propriedade <code>ModoDeLeitura</code> do componente para verdadeiro ou para falso, respectivamente.</p>
NxtColorSensorHelpStringComponentPallette = Um componente que provê uma interface de alto nível para o sensor de cor no robô LEGO MINDSTORMS NXT.
NxtDirectCommandsHelpStringComponentPallette = Um componente que provê uma interface baixo nível para o robô LEGO MINDSTORMS NXT, com funções para enviar Comandos Diretos NXT.
PedometerHelpStringComponentPallette = Componente que conta passos.
PlayerHelpStringComponentPallette = Componente multimédia que reproduz áudio e controla a vibração do telefone. O nome de um ficheiro de som para tocar é especificado na propriedade <code>Fonte</code>, que pode ser ajustada no Designer ou no Editor de Blocos. A duração da vibração é especificada no Editor de Blocos em milissegundos.</p><p>Para ver os formatos de áudio suportados, consulte <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Formatos Suportados pelo Android</a>.</p> <p>Este componente é melhor para ficheiros de som longos, tais como músicas, enquanto o componente <code>Som</code> é mais eficiente para ficheiros curtos, como bips, alertas e efeitos sonoros.</p>
ProximitySensorHelpStringComponentPallette = Componente invisível, que mede a proximidade de um objeto (em cm) ao ecrã do dispositivo; ou seja, permite determinar a distância entre o objeto e o dispositivo. Este sensor é tipicamente usado para determinar se um aparelho está em uso, medindo a proximidade à orelha do utilizador. Muitos dispositivos retornam a distância absoluta, em centímetros, mas alguns apenas são capazes de diferenciar entre perto e distante, retornando um valor baixo (mínimo) para objetos próximos, e um valor alto (máximo) para objetos distantes.
SpinnerHelpStringComponentPallette = <p>Um componente para seleção que exibe um popup com uma lista de elementos. Esses elementos podem ser ajustados no Designer ou Editor de Blocos, ajustando a propriedade <code>CadeiaDeElementos</code> para uma cadeia de texto com os elementos concatenados (por examplo, <em>opção 1, opção 2, opção 3</em>) ou ajustando a propriedade <code>Elementos</code> para uma lista no Editor de Blocos.</p>
TimePickerHelpStringComponentPallette = <p>Um botão que, quando clicado, inicia um diálogo que permite ao utilizador selecionar um horário.</p>
TwitterHelpStringComponentPallette = Um componente invisível que permite a comunicação com <a href="http://www.twitter.com" target="_blank">Twitter </a>. Com o utilizador conectado à sua conta no Twitter, e a autorização confirmada pelo evento <code>FoiAutorizado</code>), muitas operações estarão disponíveis: <ul><li> pesquisar o Twitter por tweets ou rótulos (<code>ProcurarNoTwitter</code>) </li> <li>enviar um tweet (<code>Tweetar</code>) </li> <li> enviar um tweet com uma imagem (<code>TweetarComImagem</code>) </li> <li>enviar uma mensagem direta para um utilizador específico (<code>MensagemDireta</code>) </li> <li>receber as mensagens mais recentes do utilizador logado (<code>PedirMensagensDiretas</code>) </li> <li>seguir um utilizador específico (<code>Seguir</code>) </li> <li>Deixar de seguir um utilizador específico (<code>PararDeSeguir</code>) </li> <li>obter uma lista dos utilizadores que seguem o utilizador logado (<code>PedirSeguidores</code>) </li> <li>obter as mensagens mais recentes dos utilizadores que o utilizador conectado segue (<code>PedirTimelineDosAmigos</code>) </li> <li>obter as menções mais recentes ao utilizador logado (<code>PedirMenções</code>) </li> </ul> </p> <p>Você deve obter as chaves secretas Consumer Key (<code>ChaveDoConsumidor</code>) e Consumer Secret (<code>SegredoDoConsumidor</code>) específicas para autorizar seu app a utilizar o Twitter, veja os detalhes aqui: <a href="http://twitter.com/oauth_clients/new" target="_blank">http://twitter.com/oauth_clients/new</a>.
buttonComponentPallette = Botão
experimentalComponentPallette = Experimental
mediaComponentPallette = Multimédia
nearFieldComponentPallette = NearField
sharingComponentPallette = Compartilhamento
soundRecorderComponentPallette = Gravador
votingComponentPallette = Votação
webComponentPallette = Web
ActivityStarterHelpStringComponentPallette = Um componente que pode lançar uma atividade usando o método <code>IniciarAtividade</code>.<p>Atividades que podem ser lançadas incluem: <ul> <li> iniciar outros apps do App Inventor para Android </li> <li> iniciar o app de câmera </li> <li> fazer uma busca na web </li> <li> abrir um navegador da web em uma página especificada </li> <li> abir o app de mapa em um lugar específico</li></ul> Você pode também lançar atividades que retornem dados textuais. Veja a documentação que usa o IniciadorDeAtividades para exemplos.</p>
FileHelpStringComponentPallette = Componente invisível para armazenar e recuperar ficheiros. Use este componente para escrever ou ler ficheiros no seu aparelho. O comportamento padrão é escrever ficheiros no diretório privado associado ao seu App. O Companion é um caso especial para escrever ficheiros em  /sdcard/AppInventor/data para facilitar a depuração. Se o caminho do ficheiro começar com barra (/), então o ficheiro é criado relativo ao /sdcard. Por exemplo, escrever um ficheiro em /myFile.txt vai fazer com que seja escrito em /sdcard/myFile.txt.
FormHelpStringComponentPallette = Componente de nível mais alto, que contém todos os outros componentes no programa
FusiontablesControlHelpStringComponentPallette = <p>Um componente invisível que se comunica com as Google Fusion Tables. As Fusion Tables permitem armazenar, partilhar, consultar e visualizar tabelas de dados; este componente permite que você consulte, crie e modifique essas tabelas.</p> <p>Este componente usa o <a href="https://developers.google.com/fusiontables/docs/v1/getting_started" target="_blank">Fusion Tables API V1.0</a>. <p>Os apps que usam as Fusion Tables devem se autenticar nos servidores do Google, usando uma de duas maneiras. A primeira usa uma chave de API que você, o desenvolvedor, deve obter (ver abaixo). Com esta abordagem os utilizadores finais também devem fazer login para acessar uma Fusion Table. A segunda abordagem é utilizar uma conta de serviço. Com essa abordagem, você cria credenciais e um "Endereço de Email para Conta de Serviço" especial, que você obtém do <a href="https://code.google.com/apis/console/" target="_blank">Console das APIs Google</a>. Você então diz ao controle das Fusion Tables o endereço de email para conta de serviço e faz o upload da chave secreta como um recurso na sua aplicação, ajustando a propriedade <code>FicheiroDeChave</code> para esse recurso. Finalmente você marca a caixa de seleção "UsarAutenticaçãoDoServiço" no Designer. Ao utilizar uma conta de serviço, os utilizadores finais não precisarão fazer o login para usar as Fusion Tables, sua conta de serviço autentica todo o acesso.</p> <p>Para obter uma chave de API, siga estas instruções:</p> <ol><li>Vá para a <a href="https://code.google.com/apis/console/" target="_blank">Console das APIs Google</a> e faça o login, se necessário. </li> <li>Selecione o item <i>Serviços</i> (Services) do menu à esquerda. </li> <li> Escolha, na lista de serviços fornecida, <i>Fusion Tables</i> e ative-o.</li> <li> Volte ao menu principal e selecione o item <i>API de acesso</i> (Access API). </li> </ol> <p>A sua chave estará perto da parte inferior do painel na seção chamada "API de Acesso Simples" (Simple API Access). Você terá que usa essa chave na propriedade <i>chaveDaApi</i> nas suas Fusion Tables. </p> <p> Uma vez em posse da sua chave de API, ajuste o valor da propriedade <i>Consulta</i> para uma consulta SQL válida das Fusion Tables válidas e chame <i>enviarConsulta</i> para executar a consulta. O App Inventor irá enviar a consulta para o servidor Fusion Tables e o bloco <i>RecebeuResultado</i> bloco será acionado quando o resultado voltar do servidor. Os resultados da consulta serão devolvidos no formato CSV, e podem ser convertidos para formato de lista usando os blocos "de tabela csv para lista" ou "de linha csv para lista".</p> <p>Observe que você não precisa se preocupar com codificação UTF para a consulta, mas você precisa ter certeza de a consulta segue a sintaxe descrita no <a href="https://developers.google.com/fusiontables/docs/v1/getting_started" target="_blank">manual de referência</a>, respeitando detalhes como maiúsculas/minúsculas fazerem diferença nos nomes de colunas, e 'aspas simples' deverem ser usadas nos nomes de colunas se eles contiverem espaços.</p>
GameClientHelpStringComponentPallette = Fornece uma forma de comunicação entre apps e servidores de jogos online
SliderHelpStringComponentPallette = Um Deslizador é uma barra de progresso que adiciona um indicador arrastável. Você pode tocar no indicador e arrastar para a esquerda ou para a direita para ajustar sua posição. À medida que o indicador é arrastado, ele irá acionar o evento <code>PosiçãoAlterada</code>, relatando a posição. A posição do indicador deslizante pode ser utilizada para atualizar dinamicamente atributos de outros componentes, tais como o tamanho da fonte de uma <code>CaixaDeTexto</code>, ou o raio de uma <code>Bola</code>.
TextingHelpStringComponentPallette = <p>Um componente que envia, quando o método <code>EnviarMensagem</code> é chamado, uma mensagem de texto especificado em <code>Mensagem</code> para o número de telefone especificado em <code>NúmeroDeTelefone</code>. </p> <p>Se a propriedade <code>ReceberAtivado</code> for 1, mensagens <b>não</b> serão recebidas. Se <code> ReceberAtivado</code> for 2, mensagens serão recebidas somente quando o app estiver em execução. Finalmente, se <code>ReceberAtivado</code> for 3, mensagens serão recebidas durante a execução do app, e serão colocadas em fila (o utilizador receberá uma notificação) quando o app não estiver em execução. </p> <p>Quando uma mensagem chega, o evento <code>MensagemRecebida</code> é disparado e fornece o número de envio e a mensagem. </p> <p>Um app que inclui esse componente receberá mensagens mesmo se estiver executando ao fundo (ou seja, não é visível no ecrã do telefone) e, mesmo se não estiver em execução, contanto que esteja instalado. Se o telefone recebe uma mensagem de texto quando o app não está em primeiro plano, o telefone mostra uma notificação na barra de notificação. Selecionando a notificação ativa o app. Como um desenvolvedor de apps, você deve oferecer aos seus utilizadores a possibilidade de controlar <code>ReceberAtivado</code> para que eles possam fazer o telefone ignorar mensagens de texto.</p> <p>Se a propriedade <code>GoogleVoiceAtivado</code> for verdadeira, as mensagens poderão ser enviadas através de wifi usando Google Voice. Essa opção requer que o utilizador tenha uma conta do Google Voice e que o app de voz móvel esteja instalado no telefone. A opção Google Voice funciona apenas em telefones que suportam o Android 2.0 (Eclair) ou superior. </p> <p> Para especificar o número de telefone (por exemplo, 650-555-1212), ajuste a propriedade <code>NúmeroDeTelefone</code> para uma cadeia de texto com os dígitos especificados (por exemplo, 6505551212). Traços, pontos e parênteses podem ser incluídos (por exemplo, (650)-555-1212) mas serão ignorado; espaços não devem ser incluídos.</p> <p>O app também pode especificar um número de telefone usando um componente <code>EscolheNúmeroDeTelefone</code>, que permite aos utilizadores selecionar um número de telefone dentre os armazenados na lista de contatos do telefone.</p>
TinyDBHelpStringComponentPallette = TinyDB é um componente invisível que armazena dados para um app. <p> Apps criados com o App Inventor são reiniciados a cada execução: o valor das variáveis não é "lembrado" entre execuções. Em contraste, TinyDB é permite armazenamento <em>persistente</em> de dados para o app, ou seja, os dados armazenados continuarão guardados mesmo depois que o app é fechado. Por exemplo, um jogo pode guardar a pontuação máxima e recupera-la quando o jogo é aberto novamente. </p> <p> Itens de dados são cadeias de texto armazenadas sob <em>rótulos</em>. Para armazenar um item de dados, você especifica seu rótulo para armazenamento. Posteriormente, você pode recuperar os dados que armazenados com um determinado rótulo. </p> <p> Há apenas um armazenamento de dados por app. Mesmo se você tiver vários componentes TinyDB, eles vão usar o mesmo armazenamento de dados. Para obter o efeito de bancos de dados separados, use os rótulos de forma inteligente (colocando um prefixo, por exemplo). Cada app tem um armazenamento de dados independente: o TinyDB não pode passar dados entre dois apps diferentes no telefone, embora funcione para passar dados entre os ecrãs de uma app multi-ecrã. </p> <p> Quando você estiver desenvolvendo apps usando o Assistente AI, todos os apps que usam o Assistente irão partilhar o mesmo TinyDB, mas a partilha desaparecerá quando os apps forem empacotados. Durante o desenvolvimento com o Assistente, tenha cuidado de limpar a TinyDB sempre que for trabalhar em um outro app. </p>
VerticalArrangementHelpStringComponentPallette = <p>Um elemento de formatação onde colocar componentes que devem ser mostrados do alto para baixo. Se quiser mostrar os componentes da esquerda para a direita, utilize <code>OrganizaçãoHorizontal</code>.</p>
accelerometerSensorComponentPallette = SensorAcelerómetro
camcorderComponentPallette = CâmeraDeVídeo
horizontalArrangementComponentPallette = OrganizaçãoHorizontal
imageComponentPallette = Imagem
labelComponentPallette = Legenda
listPickerComponentPallette = Lista
nxtLightSensorComponentPallette = NxtSensorDeLuz
nxtSoundSensorComponentPallette = NxtSensorDeSom
socialComponentPallette = Social
textToSpeechComponentPallette = TextoParaFalar
verticalArrangementComponentPallette = OrganizaçãoVertical
webViewerComponentPallette = NavegadorWeb
BluetoothClientHelpStringComponentPallette = Componente de cliente Bluetooth
CheckBoxHelpStringComponentPallette = Caixa de seleção que pode disparar um evento quando o utilizador clica nela. Possui muitas propriedades que modificam sua aparência e que podem ser atribuídas pelo Designer ou Editor de Blocos.
ContactPickerHelpStringComponentPallette = Um botão que, quando clicado, exibe uma lista dos contatos para se escolher. Depois que o utilizador escolhe, as seguintes propriedades conterão as informações do contato escolhido: <ul><li> <code>NomeDoContato</code>: o nome do contato </li> <li> <code>EndereçoDoEmail</code>: Endereço de email principal do contato</li> <li> <code>ContactUri</code>: a URI do contato no dispositivo</li> <li><code>Imagem</code>: o nome do ficheiro que contém a imagem do contato, que pode ser usada na propriedade <code>Imagem</code> dos componentes <code>Imagem</code> ou <code>SpriteImagem</code>. </li> </ul> </p>  <p>Outras propriedades afetam a disponibilidade da caixa de texto (<code>Ativado</code>) e a sua aparência da caixa de texto (<code>AlinhamentoDoTexto</code>, <code>CorDeFundo</code>, etc.).</p> <p>A Escolha não funciona em todos os telefones. Se ele falhar, o componente irá mostrar uma notificação. O comportamento de erro pode ser substituído com o manipulador de eventos Ecran.OcorreuErro.
HorizontalArrangementHelpStringComponentPallette = <p>Um elemento de formatação onde colocar componentes que devem ser mostrados da esquerda para a direita. Se quiser mostrar os componentes do alto para baixo, utilize <code>OrganizaçãoVertical</code>.</p>
LabelHelpStringComponentPallette = Uma Legenda mostra um trecho de texto, que é especificado através da propriedade <code>Texto</code>. Outras propriedades, que podem ser ajustadas no Designer ou no Editor de Blocos, controlam a aparência e o posicionamento do texto.
NxtLightSensorHelpStringComponentPallette = Um componente que provê uma interface alto nível para o sensor de luz no robô LEGO MINDSTORMS NXT.
NxtSoundSensorHelpStringComponentPallette = Um componente que provê uma interface alto nível para o sensor de som no robô LEGO MINDSTORMS NXT.
NxtUltrasonicSensorHelpStringComponentPallette = Um componente que provê uma interface alto nível para o sensor ultra-sônico no robô LEGO MINDSTORMS NXT.
PhoneCallHelpStringComponentPallette = <p>Um componente invisível que faz uma chamada telefônica quando o método <code>FazerLigação</code> é chamado. </p> p>Esse componente pode ser usado com o componente <code>EscolheContato</code>, que permite escolher um dos contatos cadastrados no telefone e ajustar a propriedade <code>NúmeroDeTelefone</code> para a do contato.</p><p>Para especificar diretamente o número de telefone (por exemplo, 650-555-1212), ajuste a propriedade <code>NúmeroDeTelefone</code> para uma cadeia de texto com os dígitos especificados (por exemplo, 6505551212), no Designer ou no Editor de Blocos. Traços, pontos e parênteses podem ser incluídos (por exemplo, (650)-555-1212) mas serão ignorado; espaços não devem ser incluídos.</p>
SharingHelpStringComponentPallette = Compartilhamento é um componente não-visível que permite a partilha de ficheiros e/ou mensagens entre seu app e outros apps instalados em um dispositivo. O componente exibirá uma lista dos apps que podem lidar com as informações fornecidas, e permitirá que o utilizador escolha um para partilhar o conteúdo com, por exemplo, um app de email, de rede social, de mensagens de texto, e assim por diante. <br> O caminho do ficheiro pode ser tomado diretamente de outros componentes, tais como a Câmera ou o EscolheImagem, mas também pode ser especificado diretamente para ser lido da área de armazenamento. Fique atento, pois diferentes dispositivos tratam o armazenamento de forma diferente; por exemplo, se você tiver um ficheiro chamado img1.gif na pasta <code>AppInventor/assets</code>, tente, por exemplo: <code>"file:///sdcard/AppInventor/assets/img1.gif"</code> ou <code>"/storage/AppInventor/assets/img1.gif"</code>.
SoundHelpStringComponentPallette = <p>Componente multimédia que reproduz áudio e controla a vibração do telefone. O nome de um ficheiro de som para tocar é especificado na propriedade <code>Fonte</code>, que pode ser ajustada no Designer ou no Editor de Blocos. A duração da vibração é especificada no Editor de Blocos em milissegundos.</p><p>Para ver os formatos de áudio suportados, consulte <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Formatos Suportados pelo Android</a>.</p> <p>Este componente é melhor para ficheiros de som curtos, tais como bips, alertas e efeitos sonoros, enquanto o componente <code>Tocador</code> é mais eficiente para ficheiros longos, como músicas.</p>
TableArrangementHelpStringComponentPallette = <p>Um elemento de formatação para se colocar componentes que devem ser exibidos em forma de tabela.</p>
VotingHelpStringComponentPallette = <p>O componente de votação permite que utilizadores votem em uma questão, comunicando-se com um serviço web para recuperar um voto, e enviando mais tarde os resultados aos utilizadores..</p>
ballComponentPallette = Bola
canvasComponentPallette = Pintura
checkBoxComponentPallette = CaixaDeSeleção
gameClientComponentPallette = ClienteDoJogo
internalUseComponentPallette = Apenas para uso interno
nxtTouchSensorComponentPallette = NxtSensorDeToque
orientationSensorComponentPallette = SensorDeOrientação
phoneNumberPickerComponentPallette = EscolheNúmeroDeTelefone
tinyWebDBComponentPallette = TinyWebDB
AccelerometerSensorHelpStringComponentPallette = Componente invisível que mede a aceleração aproximada em três dimensões usando unidades do SI (m/s<sup>2</sup>), e detecta se o telefone está sendo sacudido. Os valores são: <ul> <li><strong>xAcel</strong>: 0 quando o telefone está em repouso sobre uma superfície plana, positivo quando o telefone está inclinado para a direita (ou seja, o lado esquerdo é elevado), e negativo quando o telefone está inclinado para a esquerda (ou seja, o lado direito é elevado)</li> <li><strong>yAcel</strong>:. 0 quando o telefone está em repouso sobre uma superfície plana, positivo quando a base é elevada, e negativo quando o topo é elevado.</li> <li><strong>zAcel</strong>: Igual a -9,8 (acelereação da gravidade na Terra), quando o dispositivo está em repoiso paralelo ao chão com o ecrã virado para cima, +9,8, quando na mesma situação com o ecrã para baixo, 0 quando perpendicular ao solo. O valor muda conforme o telefone é acelerados contra ou a favor da gravidade.</li> </ul>
CanvasHelpStringComponentPallette = <p>Um painel retangular sensível ao toque onde se pode desenhar e animar sprites.</p> <p>As propriedades <code>CorDeFundo</code>, <code>CorDePintura</code>, <code>ImagemDeFundo</code>, <code>Largura</code> e <code>Altura</code> da Pintura podem ser ajustadas no Designer ou no Editor de Blocos. <code>Largura</code> e <code>Altura</code> são medidas em pixels e devem ser positivas.</p> <p>Qualquer local na Pintura pode ser especificado como um par de valores (X, Y), onde <ul> <li>X é o número de pixels de distância da borda esquerda da Pintura</li> <li>Y é o número de pixels de distância da borda superior da Pintura</li> </ul>. </p> <p>Quando a pintura é tocada, ou um <code>Sprite</code> (<code>SpriteImagem</code> ou <code>Bola</code>) é arrastado, eventos são disparados. Existem também métodos para desenhar pontos, linhas e círculos.</p>
EmailPickerHelpStringComponentPallette = <p>Um EscolheEmail é um tipo de caixa de texto. Quando o utilizador começa um nome ou endereço de email de um contato cadastrado, aparece uma lista suspensa de sugestões que completam a entrada. Se houver muitos contatos, a lista suspensa podem levar vários segundos para aparecer, e pode mostrar resultados intermediários.</p> <p>O conteúdo inicial da caixa de texto, bem como o conteúdo após a entrada do utilizador estarão na propriedade <code>Texto</code>. Se estiver em branco, a propriedade opcional <code>Dica</code>, aparece fracamente na caixa, para dar ao utilizador uma orientação sobre o que escrever.</p><p>Outras propriedades afetam a disponibilidade da caixa de texto (<code>Ativado</code>) e a sua aparência da caixa de texto (<code>AlinhamentoDoTexto</code>, <code>CorDeFundo</code>, etc.).</p> <p> As caixas de texto são normalmente utilizadas com o componente <code>Botão</code> para que utilizador clique o botão quando a entrada de texto estiver completa.</p>
PasswordTextBoxHelpStringComponentPallette = <p>Uma caixa para digitar senhas. O mesmo que o componente <code>CaixaDeTexto</code> comum, exceto por não exibir os caracteres digitados pelo utilizador.</p> <p>O valor do texto na caixa está na propriedade <code>Texto</code>. Se estiver em branco, a propriedade opcional <code>Dica</code>, aparece fracamente na caixa, para dar ao utilizador uma orientação sobre o que escrever.</p> <p>As caixas de senha são normalmente utilizadas com o componente <code>Botão</code>, para que o utilizador clique o botão ao completar o texto.</p>
emailPickerComponentPallette = EscolheEmail
imagePickerComponentPallette = EscolheImagem
layoutComponentPallette = Organização
nxtDirectCommandsComponentPallette = NxtComandosDiretos
nxtDriveComponentPallette = NxtAcionar
sliderComponentPallette = Deslizador
timePickerComponentPallette = EscolheHora
twitterComponentPallette = Twitter
ev3ColorSensorComponentPallette = Ev3ColorSensor
Ev3ColorSensorHelpStringComponentPallette = A component that provides a high-level interface to a color sensor on a LEGO MINDSTORMS EV3 robot.
ev3CommandsComponentPallette = Ev3Commands
Ev3CommandsHelpStringComponentPallette = A component that provides a low-level interface to a LEGO MINDSTORMS EV3 robot, with functions to send system or direct commands to EV3 robots.
ev3GyroSensorComponentPallette = Ev3GyroSensor
Ev3GyroSensorHelpStringComponentPallette = A component that provides a high-level interface to a gyro sensor on a LEGO MINDSTORMS EV3 robot.
ev3MotorsComponentPallette = Ev3Motors
Ev3MotorsHelpStringComponentPallette = A component that provides both high- and low-level interfaces to control the motors on LEGO MINDSTORMS EV3.
ev3SoundComponentPallette = Ev3Sound
Ev3SoundHelpStringComponentPallette = A component that provides a high-level interface to sound functionalities on LEGO MINDSTORMS EV3 robot.
ev3TouchSensorComponentPallette = Ev3TouchSensor
Ev3TouchSensorHelpStringComponentPallette = A component that provides a high-level interface to a touch sensor on a LEGO MINDSTORMS EV3 robot.
ev3UIComponentPallette = Ev3UI
Ev3UIHelpStringComponentPallette = A component that provides a high-level interface to a LEGO MINDSTORMS EV3 robot, which provides graphic functionalities.
ev3UltrasonicSensorComponentPallette = Ev3UltrasonicSensor
Ev3UltrasonicSensorHelpStringComponentPallette = A component that provides a high-level interface to an ultrasonic sensor on a LEGO MINDSTORMS EV3 robot.
externalComponentPallette = External
FirebaseDBHelpStringComponentPallette = A non-visible component allowing you to store data on a Web database powered by Firebase. This allows the users of your app to share data with each other. By default, data will be stored in App Inventor''s shared Firebase database. Otherwise, you can specify the URL for your own Firebase in the \"FirebaseURL\" property. Learn more at <a target=\"_blank\" href=\"http://www.firebase.com\">Firebase.com</a>.
gyroscopeSensorComponentPallette = GyroscopeSensor
GyroscopeSensorHelpStringComponentPallette = <p>Non-visible component that can measure angular velocity in three dimensions in units of degrees per second.</p><p>In order to function, the component must have its <code>Enabled</code> property set to True, and the device must have a gyroscope sensor.</p>
horizontalScrollArrangementComponentPallette = HorizontalScrollArrangement
HorizontalScrollArrangementHelpStringComponentPallette = <p>A formatting element in which to place components that should be displayed from left to right.  If you wish to have components displayed one over another, use <code>VerticalArrangement</code> instead.</p><p>This version is scrollable.,
verticalScrollArrangementComponentPallette = VerticalScrollArrangement
VerticalScrollArrangementHelpStringComponentPallette = <p>A formatting element in which to place components that should be displayed one below another.  (The first child component is stored on top, the second beneath it, etc.)  If you wish to have components displayed next to one another, use <code>HorizontalArrangement</code> instead.</p><p> This version is scrollable.</p>
