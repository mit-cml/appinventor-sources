BallHelpStringComponentPallette = <p>En rund "sprajt" som kan placeras på en <code>Duk</code>, där den kan reagera på beröring och dragrörelser, interagera med andra sprajtar (<code>Bildsprajt</code>ar och andra <code>Boll</code>ar) och kanten på en Duk, och röra sig enligt sina egenskapsvärden.</p><p>För att till exempel få en <code>Boll</code> att röra sig 4 pixlar mot toppen på en Duk var 500:e millisekund (halv sekund), sätter man egenskapen <code>Hastighet</code> till 4 [pixlar], egenskapen <code>Intervall</code> till 500 [millisekunder], egenskapen <code>Riktning</code> till 90 [grader] och egenskapen <code>Aktiverad</code> till <code>Sant</code>. De här och de andra egenskaperna kan ändras när som helst.</p><p>Skillnaden mellan en Boll och en <code>Bildsprajt</code> är att den sistnämnda kan hämta sitt utseende från en bildfil men utseende på en Boll bara ändras genom att variera egenskaperna <code>Fyllnadsfärg</code> och <code>Radie</code>.</p>
formComponentPallette = Formulär
ImageHelpStringComponentPallette = Komponent för att visa bilder.  Bilden som ska visas och andra aspekter på Bildens utseende kan anges i Designern eller Blockeditorn.
LocationSensorHelpStringComponentPallette = Osynlig komponent som ger platsinformation, bl.a. longitud, latitud, höjd (om enheten stödjer det) och adress.  Den kan också "geokoda", alltså omvandla en given adress (inte nödvändigtvis aktuell adress) till latitud (med metoden <code>LatitudFrånAdress</code>) och en longitud (med medoten <code>LongitudFrånAdress</code>).</p><p>För att fungera så måste komponent ha egenskapen <code>Aktiverad</code> satt till Sant och enheten måste ha positionering påslagen via trådlösta nätverk eller GPS-satelliter (vid utomhusvistelse).</p>Platsinformationen är inte garanterat tillgänglig direkt när appen startar.  Du behöver vänta ett kort tag för att en platskälla ska hittas och användas, alternativt vänta på händelsen NärPlatsÄndras
NotifierHelpStringComponentPallette = Notifierarkomponenten visar varningsdialoger, meddelanden och tillfälliga varningar och den skriver i Androidloggen genom följande metoder: <ul><li> VisaMeddelandedialog: visar ett meddelande som användaren måste stänga med en knapptryckning.</li><li>VisaValdialog: visar ett meddelande med två knappar för låta användare välja ett av två svar, t.ex. ja eller nej, varefter händelsen EfterVal skickas.</li><li> VisaTextdialog: låter användaren mata in text som svar på meddelandet, varefter händelsen EfterTextinmatning skickas. <li> VisaVarning: visar en tillfällig varning som försvinner av sig själv efter en kort stund.</li><li> VisaStatusdialog: visar ett meddelande med en roterande hämtningsikon ("loading spinner") som inte kan stängas av användaren. Den kan bara stängas med blocket  StängStatusdialog.</li><li> StängStatusdialog: Stänger statusdialogen som visas av VisaStatusdialog.</li><li> LoggaFel: skriver ett felmeddelande till Androidloggen. </li><li> LoggaInfo: skriver ett infomeddelande till Androidloggen.</li><li> LoggaVarning: skriver ett varningsmeddelande till Androidloggen.</li><li>Meddelandet i dialogerna (men inte varningen) kan formatteras med följande HTML-taggar:&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li>Man kan också använda taggen "font" för att ange färg, t.ex. &lt;font color="blue"&gt;.  Några tillgängliga färgnamn är aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white, and yellow</li></ul>
PhoneNumberPickerHelpStringComponentPallette = En knapp som vid klick visar en lista med kontakternas telefonnummer som man kan välja bland. När användaren har valt kommer följande egenskaper att sättas med information om den valda kontakten:  <ul><li> <code>Kontaktnamn</code>: kontaktens namn </li><li> <code>Telefonnummer</code>: kontaktens telefonnummer </li><li> <code>Epostadress</code>: kontaktens e-postadress </li> <li> <code>Bild</code>: namnet på filen som innehåller kontaktens bild, som kan användas som värde för <code>Bild</code>-egenskapen hos komponenterna <code>Bild</code> eller <code>Bildsprajt/code>.</li></ul></p><p>Andra egenskaper påverkar knappens utseende (<code>Textjustering</code>, <code>Bakgrundsfärg</code>, etc.) och om den ska vara klickbar (<code>Aktiverad</code>).</p><p>Att välja fungerar inte på alla telefoner.   Om det inte går, kommer komponenten att visa en notis. Det här standardbeteendet vid fel kan bytas ut med händelsehanteraren Skärm.FelInträffat.
PhoneStatusHelpStringComponentPallette = Komponent som ger information om telefonen.
SoundRecorderHelpStringComponentPallette = <p>Multimediakomponent som spelar in ljud.</p>
TextToSpeechHelpStringComponentPallette = Komponent för att använda TextTillTal för att tala ett meddelande
activityStarterComponentPallette = Aktivitetsstartare
barcodeScannerComponentPallette = Streckkodsläsare
bluetoothClientComponentPallette = Bluetoothklient
bluetoothServerComponentPallette = Bluetoothserver
cameraComponentPallette = Kamera
contactPickerComponentPallette = Kontaktväljare
nxtColorSensorComponentPallette = NxtFärgsensor
speechRecognizerComponentPallette = Taligenkännare
spinnerComponentPallette = Spinner
textingComponentPallette = Textning
yandexTranslateComponentPallette = Yandexöversättning
BarcodeScannerHelpStringComponentPallette = Komponent för att avläsa en streckkod med streckkodsavläsare
WebHelpStringComponentPallette = Osynlig komponent som ger funktioner för HTTP GET-, POST-, PUT- och DELETE-förfrågningar.
WebViewerHelpStringComponentPallette = En komponent för att visa webbsidor.  Hem-URL:en kan sättas i Designern eller Blockeditorn.  Vyn kan ställas in så att den följer länkar som trycks på och användare kan fylla i webbformulär.  T.ex. kommer telefonens Back-knapp att avsluta appen istället för att backa i webbläsarens historik.<p />Du kan använda egenskapen WebViewer.WebViewString för att kommunicera mellan  to communicate between din app och Javascriptkoden som körs på Webviewer-sidan. I appen kan du läsa och sätta WebViewString.  I WebViewer har du med Javascript som hänvisar till objektet window.AppInventor via metoderna </em getWebViewString()</em> och <em>setWebViewString(text)</em>.  <p />Exempel: om WebViewer öppnar en sida som innehåller JavaScript-kommandot <br /> <em>document.write("Svaret är" + window.AppInventor.getWebViewString());</em> <br />och om du sätter WebView.WebVewString to "hej", så kommer webbsidan att visa </br ><em>Svaret är hej</em>.  <br />Och om webbsidan innehåller JavaScript som kör kommandot<br /><em>window.AppInventor.setWebViewString("hej från Javascript")</em>, <br />så kommer värdet av egenskapen WebViewString att vara <br /><em>hej från Javascript</em>.
drawingAndAnimationComponentPallette = Ritning och animering
fileComponentPallette = Fil
legoMindstormsComponentPallette = LEGO® MINDSTORMS®
nxtUltrasonicSensorComponentPallette = NxtUltraljudssensor
playerComponentPallette = Spelare
proximitySensorComponentPallette = Närhetssensor
soundComponentPallette = Ljud
tableArrangementComponentPallette = Tabellplacering
tinyDBComponentPallette = TinyDB
videoPlayerComponentPallette = Videospelare
CamcorderHelpStringComponentPallette = En komponent för att spela in en video med enhetens videokamera. Efter att videon spelats in är namnet på filen på telefonen som innehåller klippet tillgängligt som ett argument till händelsen EfterInspelning. Filnamnet kan användas till exempel för att ställa in källegenskapen för en Videospelare-komponent.
CameraHelpStringComponentPallette = En komponent för att ta en bild med enhetens kamera. Efter att bilden tagits, är namnet på filen på telefonen som innehåller bilden tillgängligt som ett argument till händelsen EfterBild. Filnamnet kan användas till exempel för att ställa in egenskapen Bild på en Bild-komponent.
DatePickerHelpStringComponentPallette = <p>En knapp som vid klick öppnar en dialogruta som låter användaren välja ett datum.</p>
ImagePickerHelpStringComponentPallette = En knapp med specialfunktion. När använder trycker på en bildväljare, visas enhetens bildgalleri och användaren kan välja en bild. När en bild valts, sparas den och egenskapen <code>Vald</code> kommer att vara namnet på filen där bilden finns lagrad. För att inte fylla upp minnet så lagras högst 10 bilder.  Om fler bilder väljs kommer gamla att raderas, i ordningen äldsta till nyaste.
ImageSpriteHelpStringComponentPallette = <p>En "sprajt" som kan placeras på en <code>Duk</code> där den kan reagera på beröring och att dras, samverka med andra sprajtar  (<code>Boll</code>ar och andra <code>Bildsprajt</code>ar) och kanten på Duken, och röra sig enligt sina egenskapsvärden.  Utseendet på sprajten ges av egenskapen <code>Bild</code> (om inte egenskapen <code>Synlig</code> är <code>Falskt</code>.</p> <p>Exempel: för att få en <code>Bildsprajt</code> att röra sig 10 pixlar åt vänster var 1000:e millisekund (en sekund), sätter man egenskapen <code>Speed</code> till 10 [pixlar], egenskapen <code>Intervall</code> till 1000 [millisekunder], egenskapen <code>Riktning</code> till 180 [grader] och egenskapen <code>Aktiverad</code> till <code>Sant</code>. En sprajt med egenskapen <code>Roterar</code> satt till <code>Sant</code> roterar sin bild när sprajtens <code>Riktning</code> ändras.  Sättet att upptäcka krockar med en roterad sprajt kontrollerar f.n. sprajtens icke-roterade position, så krockdekteringen kommer att vara felaktig för höga och smala eller korta och breda sprajtar som är roterade.  Alla sprajtens egenskaper kan ändras när som helst, styrt av programmet.</p> 
ListViewHelpStringComponentPallette = <p>Detta är en synlig komponent som låter dig placera en lista med textelement för visningen på en Skärm. <br> Listan kan sättas med egenskapen ElementsFrånSträng eller med Element-blocket i Blockeditorn.</p>
NxtDriveHelpStringComponentPallette = En komponent som ger ett högnivågränssnitt till en LEGO MINDSTORMS NXT-robot, med funktioner som kan flytta och styra roboten.
NxtTouchSensorHelpStringComponentPallette = En komponent som ger ett högnivågränssnitt till en trycksensor på en LEGO MINDSTORMS NXT-robot.
OrientationSensorHelpStringComponentPallette = <p>Osynlig komponent som ger information om enhetens fysiska orientering i tree dimensioner: <ul> <li> <strong>Roll</strong>: 0 grader när enheten ligger plant, ökar till 90 grader när enheten lutas med vänstersidan upp och minskar till -90 grader när enheten lutas med högersidan upp.</li> <li> <strong>Lutning</strong>: 0 grader när enheten ligger plant, upp till 90 grader när enheten lutas så att toppen pekar neråt, upp till 180 grader när enheten lutas så att den till slut har baksidan upp.När enheten lutas så att underdelen pekar neråt, minskar pitch-värdet till -90 grader och avtar sen till -180 grader när den vänds upp och ner.</li> <li> <strong>Azimut</strong>: 0 grader när enhetens övre del pekar åt norr, 90 grader när den pekar åt ost, 180 grader när den pekar åt syd, 270 grader när den pekar åt väst, osv.</li></ul>Mätningarna antar att själva enheten inte är i rörelse.</p>
SpeechRecognizerHelpStringComponentPallette = Komponent för att använda röstigenkänning för tal-till-textomvandling
TextBoxHelpStringComponentPallette = <p>En ruta där användaren matar in text. Startvärdet eller det som användaren matat in finns i egenskapen <code>Text</code>. Om det är tomt så kan egenskapen <code>Tips</code>, som visas som blek text i rutan, ge användaren ledning vad som ska matas in.</p><p>Egenskapen <code>FleraRader</code> avgör om texten kan ha mer än en rad. För en textruta med en rad kommer tangentbord automatiskt att stängas när användaren trycker på knappen Klar. För att stänga tangentbordet i flerradiga textrutor, bör appen använda metoden GömTangentbord eller låta användaren trycka på Backknappen.</p><p>Egenskapen <code> EndastTal</code> begränsar tangentbordet till enbart numeriska indata</p><p>Andra egenskaper påverkar textrutans utseende (<code>Textjustering</code>, <code>Bakgrundsfärg</code>, etc.) och ifall den kan användas (<code>Aktiverad</code>).</p><p>Textrutor används normalt med <code>Knapp</code>-komponenten där användaren klickar på knappen när hen skrivit färdigt.</p><p>Om den inmatade texten inte ska visas så använd <code>Lösenordstextruta</code> istället.</p>
TinyWebDBHelpStringComponentPallette = Osynlig komponent som kommunicerar med en webbtjänst för att lagra och hämta information.
userInterfaceComponentPallette = Användargränssnitt
VideoPlayerHelpStringComponentPallette = En multimediekomponent som spelar video. När applikationen körs så visas Videospelaren som en rektangel på skärmen. Om användaren rör rektangeln, visas kontroller för att spela/pausa, hoppa framåt och hoppat bakåt i videon. Applikationen kan också styra beteendet genom att anropa metoderna <code>Starta</code>, <code>Pausa</code>, and <code>SpolaTill</code>. <p>Videofilerna ska vara i något av formaten Windows Media Video (.wmv), 3GPP (.3gp) eller MPEG-4 (.mp4). För mer information om giltiga format, se <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Android Supported Media Formats</a>.</p><p>App Inventor för Android tillåter bara videofiler under 1 MB storlek och begränsar totalstorleken på en applikation till 5 MB, där inte hela utrymmet är tillgängligt för mediefiler (video, audio, ljudinspelningar). Om dina mediefiler är för stora, kan du få fel när applikationen packas eller installeras och i så fall behöver du minska antalet mediefiler eller deras storlek. De flesta program för videoredigering, som Windows Movie Maker och Apple iMovie, can hjälpa dig minska videostorleken genom att korta av eller komprimera videon till ett mer kompakt format.</p><p>Du kan också sätta mediekällan till en URL som pekar på en strömmande video, men URL måste peka till själva videofilen, inte till programmet som spelar upp videon.
YandexTranslateHelpStringComponentPallette = Använd den här komponenten för att översätta ord och meningar mellan olika språk. Komponenten behöver nå Internet eftersom den begär översättningar från Yandex.Translate-tjänsten. Ange käll- och målspråk i formatet källa-mål med tvåställiga språkkoder. Så "en-es" översätter från engelska till spanska medan "es-ru" översätter från spanska till ryska. Om du utelämnar källspråket, kommer tjänsten att försöka upptäcka vilket det är. Så att bara skicka "es" gör att källspråket försöker identifieras innan översättning till spanska.<p />Komponent använder av Yandex'' översättningstjänst. Se http://api.yandex.com/translate/ för mera information, bl.a. listan med tillgängliga språk och språkkodernas betydelse och statuskoder.<p />Obs! Översättningen görs asynkront i bakgrunden. När översättningen är klar, skickas händelsen "FickÖversättning".
clockComponentPallette = Klocka
connectivityComponentPallette = Anslutning
datePickerComponentPallette = Datumväljare
fusiontablesControlComponentPallette = Fusiontableskontroll
imageSpriteComponentPallette = Bildsprajt
listViewComponentPallette = Listvy
locationSensorComponentPallette = Lägessensor
notifierComponentPallette = Notifierare
passwordTextBoxComponentPallette = Lösenordstextruta
phoneCallComponentPallette = Telefonsamtal
sensorsComponentPallette = Sensorer
storageComponentPallette = Lagring
textBoxComponentPallette = Textruta
uninitializedComponentPallette = Oinitierad
BluetoothServerHelpStringComponentPallette = Bluetoothserverkomponent
ButtonHelpStringComponentPallette = Knapp med möjlighet att reagera på klick.  Många aspekter av utseendet kan ändras och också om den ska vara klickbar(<code>Aktiverad</code>) kan ändras i Designern eller Blockeditorn.
ClockHelpStringComponentPallette = Osynlig komponent som ger aktuell tidpunkt baserat på telefonens inbyggda klocka. Den kan utlösa en timer vid regelbundna intervall och beräkna, justera och omvandla tidsvärden. </p> <p>Metoder för att omvandla en tidpunkt till text finns också. Giltiga mönster är tomma strängen, MM/DD/YYYY HH:mm:ss a, eller MMM d, yyyy HH:mm. Tomma strängen ger ett standardformat som är "MMM d, yyyy HH:mm:ss a" för FormatteraDatumTid och "MMM d, yyyy" för FormatteraDatum.  För alla möjliga format, se <a href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" target="_blank"> here</a>.
ListPickerHelpStringComponentPallette = <p>En knapp som vid klick visar en lista med textalternativ som användaren kan välja bland. Texterna kan ges via Designern eller Blockeditorn genom att sätta egenskapen <code>ElementFrånSträng</code> till en kommaseparerad lista(t.ex. <em>val 1, val 2, val 3</em>) eller genom att sätta egenskapen <code>Element</code> till en Lista i Blockeditorn.</p><p>Om man sätter egenskapen VisaFilterlist till Sant blir listan sökbar.  Andra egenskaper styr knappens utseende (<code>Textjustering</code>, <code>Bakgrundsfärg</code> m.fl.) och om den är klickbar (<code>Aktiverad</code>).</p>
NearFieldHelpStringComponentPallette = <p>Osynlig komponent som ger NFC-stöd. För närvarande stöder komponenten läsning och skrivning bara av texttaggar (om enheten stöder det)</p><p>För att läsa och skriva texttaggar måste komponenten ha egenskapen <code>Läsläge</code> satt till Sant resp. Falskt.</p>
NxtColorSensorHelpStringComponentPallette = En komponent som ger ett högnivågränssnitt till färgsensorn på en LEGO MINDSTORMS NXT-robot.
NxtDirectCommandsHelpStringComponentPallette = En komponent som ger ett lågnivågränssnitt till en LEGO MINDSTORMS NXT-robot, med funktioner som sänder NXT Direct-kommandon.
PedometerHelpStringComponentPallette = Komponent som kan räkna steg.
PlayerHelpStringComponentPallette = Multimediekomponent som spelar ljud och styr telefonens vibration. Namnet på ett multimediefält anges i egenskapen <code>Källa</code>, som kan sättas i Designern eller Blockeditorn. Vibrationstidens längd anges i Blockeditorn i millisekunder (tusendelar av en sekund).<p>För vilka ljudformat som stöds hänvisas till <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Android Supported Media Formats</a>.</p><p>Den här komponent lämpar sig bäst för långa ljudfiler som låtar, medan komponenten <code>Sound</code> är mer effektiv för korta filer, t.ex. ljudeffekter.</p>
ProximitySensorHelpStringComponentPallette = Osynlig komponent som kan mäta avståndet till ett föremål i centimeter i förhållande till en enhets huvudskärm. Sensor används typiskt för att avgöra om en telefon hålls mot en persons öra, dvs. den låter dig avgöra hur långt borta ett föremål är från en enhet. Många enheter ger absoluta avståndet, i centimeter, men en del ger bara värden som motsvarar nära och långt borta. I det fallet rapporterar sensorn oftast sitt maximivärde för läget "långt bort" och och mindre värde i läget "nära". 
SpinnerHelpStringComponentPallette = <p>En spinnerkomponent som visar en pop-up med en lista av element. Elementen kan ställas in i Designern eller Blockeditorn genom att sätta <code>ElementFrånSträng</code>-egenskapen till en kommauppdelad konkatenering (t.ex. <em> val 1, val 2, val 3</em>) eller genom att ställa in <code>Element</code>-egenskapen till en lista i Blockeditorn.</p>
TimePickerHelpStringComponentPallette = <p>En knapp som vid klick startar en  dialogruta där användaren kan välja en tidpunkt.</p>
TwitterHelpStringComponentPallette = En osynlig komponent som kommunicerar med <a href="http://www.twitter.com" target="_blank">Twitter</a>. När en användare har loggat in på sitt Twitterkonto (och inloggningen har bekräftats av händelsen <code>ÄrBehörig</code>), blir ytterligare operationer tillgängliga: <ul><li> Söka på Twitter efter tweet eller etiketter (<code>SökTwitter</code>)</li><li> Skicka en Tweet (<code>Tweeta</code>)     </li><li> Skicka en Tweet med en Bild (<code>TweetaMedBild</code>)     </li><li> Skicka ett direktmeddelande till en given användare (<code>Direktmeddelande</code>)</li><li> Ta emot de senaste meddelande till den inloggade användaren (<code>BegärDirektmeddelanden</code>)</li><li> Följa en viss användare (<code>Följ</code>)</li><li> Sluta följa en viss användare (<code>SlutaFölja</code>)</li><li> Få en lista med användare som följer den inloggade användaren (<code>BegärFöljare</code>)</li><li> Hämta de nyaste meddelande från användare som följer den inloggade användaren (<code>BegärVännersTidslinje</code>)</li><li> Hämta de senaste omnämnandena av den inloggade användaren    (<code>BegärOmnämnanden</code>)</li></ul></p><p>Du måste skaffa en nyckel, "Consumer Key", och hemlighet, "Consumer Secret" för Twitterinloggning specifikt för din app från http://twitter.com/oauth_clients/new
buttonComponentPallette = Knapp
experimentalComponentPallette = Experimentell
mediaComponentPallette = Media
nearFieldComponentPallette = NFC
sharingComponentPallette = Delning
soundRecorderComponentPallette = Ljudinspelare
votingComponentPallette = Röstning
webComponentPallette = Web
ActivityStarterHelpStringComponentPallette = En komponent som kan starta en aktivitet med metoden <code>StartaAktivitet</code>.<p>Aktiviteter som kan startas är bl.a.: <ul> <li> att starta andra appar byggda med App Inventor för Android </li> <li> att starta kameraappen </li> <li> att söka på webben </li> <li> att öppna en webbläsare med en given adress</li> <li> öppna kartapplikationen på en angiven plats</li></ul> Du kan också starta aktiviteter som returnerar textdata. Se dokumentationen för hur man använder Activity Starter för exempel.</p>
FileHelpStringComponentPallette = Osynlig komponent för att lagra och hämta filer. Använd den här komponenten för att skriva eller läsa filer på enheten. Standardbeteendet är att skriva filer till din apps privata datakatalog. Companion är ett specialfall och skriver filer till /sdcard/AppInventor/data för att underlätta felsökning. Om sökvägen startar med snedstreck (/) skapas filen relativt /sdcard. Exempel: skrivning till filen/myFile.txt kommer  att skriva i /sdcard/myFile.txt.
FormHelpStringComponentPallette = Toppkomponent som innehåller alla andra komponenter i programmet
FusiontablesControlHelpStringComponentPallette = <p>En osynlig komponent som kommunicerar med Google Fusion Tables.  Med Fusion Tables kan man lagra, dela, söka i och visualisera datatabeller; den här komponenten låter dig söka i, skapa och modifiera tabeller.</p> <p>Den här komponenten använder <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">Fusion Tables API V2.0</a>.  <p>Applikationer som använder Fusion Tables måste autentisera mot Googles servrar. Det finns två sätt att göra det. Det första använder en API-nyckel som du som utvecklare får (se nedan). Använder man det sättet måste slutanvändare också logga in för att få tillgång till en Fusion Table. Det andra sättet är att använda ett servicekonto, "Service Account". Det sättet bygger på att man skapar inloggningsuppgifter och en speciell e-postadress för servicekontot via sidan <a href="https://code.google.com/apis/console/" target="_blank">Google APIs Console</a>. I Fusion Table-kontrollen anger man sedan namnet på servicekontots e-postadress och laddar upp den hemliga nyckeln som en resurs i applikationen och låter egenskapen KeyFile peka på den filen. Slutligen kryssar man in rutan "AnvändTjänsteautentisering" i Designern. När ett servicekonto används, behöver slutanvändare inte logga in för att använda Fusion Tables, utan ditt servicekonto autentiserar all åtkomst.</p> <p>För att få en API-nyckel, följ de här instruktionern.</p> <ol> <li>Gå till din <a href="https://code.google.com/apis/console/" target="_blank">Google APIs Console</a> och logga in om det krävs.</li> <li>Välj alternativet <i>Services</i> från menyn till vänster.</li> <li> Välj tjänsten <i>Fusiontables</i> från listan som dyker upp och aktivera den.</li> <li>Gå tillbaks till huvudmenyn och välj <i>API Access</i>. </li> </ol> <p>Din API-nyckel kommer att vara nästan längst ner i den rutan i avsnittet som heter "Simple API Access". Du behöver lägga in den nyckeln som värde på egenskapen <i>ApiKey</i> i din Fusiontables-app.</p> <p>När du har en API-nyckel, så sätt värdet på egenskapen <i>Fråga</i> till en korrekt fråga enligt Fusiontables SQL och anropa <i>SkickaFråga</i> för att köra frågan. App Inventor skickar frågan till Fusion Tables-servern och <i>FickResultat</i>-blocket kommer att aktiveras när ett resultat kommer från servern. Frågeresultat returneras som en kommaseparerad lista och kan omvandlas till listformat med blocken "lista från csv-tabell" eller "lista från csv-rad".</p> <p>Tänk på att du inte behöver bekymra dig om att omvandla frågan till UTF-kodning. Däremot måste du försäkra dig att frågan följer syntaxen som beskrivs i <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">referensmanualen</a>, vilket innebär att saker som stor/liten bokstav i kolumnnamn spelar roll, och också att enkla citattecken måste användas runt kolumnnamn med mellanslag i namnet.</p>
GameClientHelpStringComponentPallette = Ger ett sätt för applikationer att kommunicera med spelservrar online
SliderHelpStringComponentPallette = Ett Skjutreglage är en förloppsindikator med en skjutbar spak. Du kan röra spaken och dra den åt vänster eller höger för att sätta spakens läge. Medan Skjutreglaget dras, kommer den att trigga PositionÄndrad-händelsen som rapporterar positionen för spaken. Den rapporterade positionen för Skjutreglaget kan användas för att dynamiskt uppdatera något annan komponentattribut, t.ex. teckenstorleken på en Textruta eller radien på en Boll.
TextingHelpStringComponentPallette = <p>När komponentens <code>SkickaMeddelande</code>-metod anropas så skickar den ett SMS med texten angetts i egenskapen <code>Meddelande</code> till telefonnumret som angetts i egenskapen <code>Telefonnummer</code>. </p> <p>Om egenskapen <code>MottagningAktiverad</code> är satt till 1 kommer meddelanden <b>inte</b> att tas emot. Om <code>MottagningAktiverad</code> är satt till 2 kommer meddelanden bara att tas emot när applikationen körs. Slutligen, om <code>MottagningAktiverad</code> är satt till 3 så kommer meddelanden att tas emot när applikationen körs <b>och</b> när applikationen inte körs kommer de att köas upp och en notis att visas för användaren.</p> <p>När ett meddelande tas emot, skickas händelsen <code>MeddelandeMottaget</code>, som innehåller avsändarens nummer och meddelandet. </p> <p> En app som innehåller den här komponenten kommer att ta emot meddelanden även när den är i bakgrunden, dvs. när den inte syns på skärmen och även om appen inte körs, så länge den är installerad på telefonen. Om telefonen tar emot ett SMS när appen inte är i förgrunden så kommer telefonen att visa en notis i notifieringslisten. Appen startas om man väljer notisen. Som apputvecklare vill du förmodligen ge användarna möjlighet att styra MottagningAktiverad så att de kan få telefonen att ignorera SMS.</p> <p> Om egenskapen GoogleRöstAktiverad är satt till Sant, kan meddeladen skickas över Wifi via Google Röst. Det här alternativet kräver att användaren har ett Google Röst-konto och att den mobila Röst-appen är installerad på telefonen. Google Röst-alternativet fungerar bara på telefoner som stödjer Android 2.0 (Eclair) eller högre.</p> <p>Ange telefonnumret (t.ex. 650-555-1212) genom att sätta egenskapen <code>Telefonnummer</code> till en sträng av typen Text med önskade siffror  (t.ex. 6505551212). Bindestreck, punkter och parenteser får ingå (t.ex. (650)-555-1212) men kommer att ignoreras; blanksteg är inte tillåtet.</p> <p>Ett annat sätt som appen kan ange ett telefonnummer är att ha med en <code>Telefonnummerväljare</code>-komponent, som låter användaren välja ett telefonnummer från telefonens kontaktlista.</p>
TinyDBHelpStringComponentPallette = TinyDB är en osynlig komponent som lagrar data för en app. <p> Appar som byggs med App Inventor initieras varje gång de kör: om en app sätter värdet på en variabel och användaren sen avslutar appen, kommer variabelns värde inte att kommas ihåg nästa gång appen körs. TinyDB däremot en <em> permanent </em> datalagring för appen, dvs. data som lagras där blir tillgängliga varje gång appen körs. Ett exempel kan vara ett spel som sparar high score och läser det varje gång spelet spelas. </<p> <p> Dataelement är strängar som lagras under <em>etiketter</em>. För att lagra ett element anger man vilken etikett det ska sparas under. Därefter kan man hämta data som sparades under en viss etikett. </p><p> Det finns bara ett datalager per app. Även man har flera TinyDB-komponenter så kommer de att använda samma datalager. Behövs det flera datalager så använd olika nycklar. För övrigt har varje app sitt eget datalager. Man kan inte använda TinyDB för att skicka data mellan två olika appar på telefonen, även om det <em>är</em> möjligt att med TinyDB dela data mellan olika skärmar i en app med flera skärmar. </p> <p>När man utvecklar appar med AI Companion så kommer alla appar som använder AI Companion att dela på samma TinyDB. Den delningen försvinner när apparna väl paketerats. Men: medan man utvecklar ska man vara noga att radera TinyDB varje gång man börjar jobba på en ny app.</p>
VerticalArrangementHelpStringComponentPallette = <p>Ett formatteringselement där man lägger komponenter som ska visas under varandra. (Den första barnkomponenten lagras överst, de andra direkt nedanför osv.) Om man vill att komponenterna ska visas bredvid, används <code>HorisontellPlacering</code> istället.
accelerometerSensorComponentPallette = Accelerometersensor
camcorderComponentPallette = Videokamera
horizontalArrangementComponentPallette = HorisontellPlacering
imageComponentPallette = Bild
labelComponentPallette = Etikett
listPickerComponentPallette = Listväljare
nxtLightSensorComponentPallette = NxtLjussensor
nxtSoundSensorComponentPallette = NxtLjudsensor
socialComponentPallette = Socialt
textToSpeechComponentPallette = TextTillTal
verticalArrangementComponentPallette = VertikalPlacering
webViewerComponentPallette = Webbvisning
BluetoothClientHelpStringComponentPallette = Bluetoothklientkomponent
CheckBoxHelpStringComponentPallette = Kryssruta som startar en händelse när användaren klickar på den. Det finns många egenskaper som påverkar utseendet som kan ställas in i Designern eller Blockeditorn.
ContactPickerHelpStringComponentPallette = En knapp som vid klick visar en lista med kontakter att välja bland. När användaren har valt, kommer följande egenskaper att fyllas med information om den valda kontakten: <ul><li> <code>Kontaktnamn</code>: kontaktens namn </li><li> <code>Epostadress</code>: kontaktens primära e-postadress </li><li> <code>KontaktUri</code>: kontaktens Uri på enheten </li><li> <code>Bild</code>: namnet på filen som innehåller kontaktbilden, som kan användas som värde för egenskapen <code>Bild</code> i komponenterna  <code>Bild</code> eller <code>Bildsprajt</code>.</li></ul></p><p>Andra egenskaper påverkar knappens utseende (<code>Textjustering</code>, <code>Bakgrundsfärg</code> osv.) och om den är klickbar (<code>Aktiverad</code>).</p><p>Att välja fungerar inte på alla telefoner.   Om det misslyckas, kommer den här komponenten att visa en notis.   Det här felbeteendet kan ändras med händelsehanteraren Skärm.FelInträffat.
HorizontalArrangementHelpStringComponentPallette = <p>Ett formatteringselement där man lägger komponenter som ska visas från vänster till höger. Om man vill visa komponenter bredvid varandra, används <code>VertikalPlacering</code> istället.
LabelHelpStringComponentPallette = En Etikett visar en text som ges av egenskapen <code>Text</code>. Andra egenskaper, som alla kan sättas i Designern eller Blockeditorn, styr textens utseende och placering.
NxtLightSensorHelpStringComponentPallette = En komponent som ger ett högnivågränssnitt till en ljussensor på en LEGO MINDSTORMS NXT-robot.
NxtSoundSensorHelpStringComponentPallette = En komponent som ger ett högnivågränssnitt till en ljudsensor på en LEGO MINDSTORMS NXT-robot.
NxtUltrasonicSensorHelpStringComponentPallette = En komponent som ger ett högnivågränssnitt till en ultraljudssensor på en LEGO MINDSTORMS NXT-robot.
PhoneCallHelpStringComponentPallette = <p>En osynlig komponent som ringer ett telefonsamtal till numret som ges av egenskapen  <code>Telefonnummer</code>, som kan sättas antingen i Designern eller Blockeditorn. Komponenten har metoden <code>RingTelefonsamtal</code> som låter programmet ringa ett samtal.</p><p>Den här komponenten används ofta ihop med komponenten <code>Kontaktväljare</code>, som låter användare välja en kontakt från telefonens kontaktlista och sätter egenskapen <code>Telefonnummer</code> till kontaktens telefonnummer.</p><p>För att direkt ange telefonnumer (t.ex. 650-555-1212) sätter man egenskapen <code>Telefonnummer</code> till en text med de givna siffrorna, t.ex. "6505551212". Bindestreck, punkter och parenteser är tillåtna (t.ex. "(650)-555-1212") men hoppas över; blanksteg är inte tillåtna.</p>
SharingHelpStringComponentPallette = Delning är en osynlig komponent som gör att filer eller meddelanden kan delas mellan din app och andra program som är installerade på en enhet. Komponenten kommer att visa en lista över installerade appar som kan hantera den information som tillhandahålls, och gör det möjligt för användaren att välja en app att dela innehållet med, till exempel e-post, socialt nätverk, en meddelandeapp och så vidare.<br>Sökvägen kan tas direkt från andra komponenter som kameran eller Bildväljare, men kan också anges direkt att läsas från minnet. Tänk på att olika enheter hanterar lagring på olika sätt, så några saker att prova kan vara till exempel om du har en fil som heter arrow.gif i mappen<code>Appinventor/assets</code>: <ul><li><code>"file:///sdcard/Appinventor/assets/arrow.gif"</code></li> eller <li><code>"/storage/Appinventor/assets/arrow.gif"</code></li></ul>
SoundHelpStringComponentPallette = <p>En multimediekomponent som spelar ljudfiler och som kan vibrera det antal millisekunder (tusendels sekunder) som anges i Blockeditorn. Namnet på ljudfilen som ska spelas kan sättas antingen i Designern eller Blockeditorn.</p> <p>För information om vilka ljudformat som stöds, se <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Android Supported Media Formats</a>.</p><p>Den här <code>Ljud</code>-komponenten lämpar sig bäst för korta ljudfiler som t.ex. ljudeffekter, medan komponenten <code>Spelare</code> är mer lämpad för längre ljud, t.ex. låtar.</p>
TableArrangementHelpStringComponentPallette = <p>Ett formatteringselement för komponenter som ska visas i tabellform.</p>
VotingHelpStringComponentPallette = <p>Röstningskomponenten låter användare rösta om en fråga genom att kommunicera med en webbtjänst för att hämta en omröstning och senare skicka tillbaka användarnas röster.</p>
ballComponentPallette = Boll
canvasComponentPallette = Duk
checkBoxComponentPallette = Kryssruta
gameClientComponentPallette = Spelklient
internalUseComponentPallette = Bara för internt bruk
nxtTouchSensorComponentPallette = NxtTrycksensor
orientationSensorComponentPallette = Riktningssensor
phoneNumberPickerComponentPallette = Telefonnummerväljare
tinyWebDBComponentPallette = TinyWebDB
AccelerometerSensorHelpStringComponentPallette = Osynlig komponent som kan känna av skakning och mäta ungefärlig acceleration i tre dimensioner i SI-enheter (m/s<sup>2</sup>).  Komponenterna är: <ul><li> <strong>xAccel</strong>: 0 när telefonen är i vila på en plan yta, positiv när telefonen lutas åt höger (dvs vänstra sidan lyfts) och negativ när telefonen lutas åt vänster (dvs högra sidan lyfts).</li><li> <strong>yAccel</strong>: 0 när telefonen är i vila på en plan yta, positive när nederdelen lyfts upp och negativ när överdelen lyfts upp. </li><li> <strong>zAccel</strong>: Lika med -9,8 (jordens gravitation i meter per meter per sekund) när enheten är i vila parallellt med marken med bildskärmen uppåt, 0 när den är vinkelrät mot marken och 9,8 när den är vänd neråt. Värdet kan också påverkas genom att enheten accelereras med eller mot gravitationen. </li></ul>
CanvasHelpStringComponentPallette = <p>En tvådimensionell tryckkänslig rektangulär panel där man kan rita och flytta sprajtar.</p> <p>Dukens <code>Bakgrundsfärg</code>, <code>Fyllnadsfärg</code>, <code>Bakgrundsbild</code>, <code>Bredd</code> och <code>Höjd</code> kan sättas antingen i Designern eller Blockeditorn. <code>Bredd</code>en och <code>Höjd</code>en mäts i pixlar och måste vara positiva.</p><p>En given position på Duken kan anges som ett talpar (X, Y), där <ul> <li>X är antalet pixlar räknat från Dukens vänstra kant</li><li>Y är antalet pixlar från Dukens övre kant</li></ul>.</p> <p>Det finns händelser som berättar när och var Duken har berörts eller en <code>Sprajt</code> (<code>Bildsprajt</code> eller <code>Boll</code>) har flyttats.  Det finns också metoder för att rita punkter, linjer och cirklar.</p>
EmailPickerHelpStringComponentPallette = En e-postväljare är en sorts textruta. Om användaren börjar skriva namnet eller e-postadressen till en kontakt, kommer telefonen att visa en rullgardinsmeny med val som är möjliga kompletteringar. Finns det många kontakter så kan ta det flera sekunder för menyn av dyka upp och den kan visa ofullständiga resultat medan sökresultatet beräknas. <p>Textrutans innehåll från början och innehållet efter användarens inmatning finns i egenskapen <code>Text</code>. Om <code>Text</code>-egenskapen är tom från början, visas innehållet från egenskapen <code>Tips</code> svagt i textrutan som ett tips till användaren.</p><p>Andra egenskaper påverkar textrutans utseende  (<code>Textjustering</code>, <code>Bakgrundsfärg</code> etc.) och om den kan användas (<code>Aktiverad</code>).</p><p>Textrutor som denna används oftast ihop med  <code>Knapp</code>-komponenter där användaren trycker på knappen när texten matats in.
PasswordTextBoxHelpStringComponentPallette = <p>En ruta för att mata in lösenord. Den är samma som den vanliga <code>Textruta</code>-komponenten förutom att den inte visar tecknen som användaren skriver.</p><p>Textvärdet i rutan hittas och sätts med egenskapen <code>Text</code>. Om den är blank, kan egenskapen <code>Tips</code>, som visas svagt i textrutan, ge användaren ledning vad som ska skrivas.</p> <p>Textrutor används oftast ihop med <code>Knapp</code>-komponenten där användaren trycker på knappen när texten matats in.
emailPickerComponentPallette = Epostväljare
imagePickerComponentPallette = Bildväljare
layoutComponentPallette = Layout
nxtDirectCommandsComponentPallette = NxtDirectCommands
nxtDriveComponentPallette = NxtDrive
sliderComponentPallette = Skjutreglage
timePickerComponentPallette = Tidsväljare
twitterComponentPallette = Twitter
