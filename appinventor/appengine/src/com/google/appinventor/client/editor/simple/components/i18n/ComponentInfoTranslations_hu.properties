userInterfaceComponentPallette = Felhasználói felület
layoutComponentPallette = Elrendezés
mediaComponentPallette = Média
drawingAndAnimationComponentPallette = Rajz és animáció
mapsComponentPallette = Térkép
sensorsComponentPallette = Érzékelők
socialComponentPallette = Közösségi (média)
storageComponentPallette = Adattárolás
forInternalUseOnlyComponentPallette = Csak belső használatra
formComponentPallette = Űrlap
connectivityComponentPallette = Hálózat
legoMindstormsComponentPallette = LEGO\u00AE MINDSTORMS\u00AE
extensionComponentPallette = Kiegészítők
experimentalComponentPallette = Kísérleti jellegű
internalUseComponentPallette = Csak belső használatra
uninitializedComponentPallette = Nem inicializált
buttonComponentPallette = Gomb
canvasComponentPallette = Rajzvászon
checkBoxComponentPallette = Jelölőnégyzet
clockComponentPallette = Óra
datePickerComponentPallette = Dátumválasztó
imageComponentPallette = Kép
labelComponentPallette = Címke
listPickerComponentPallette = Teljes képernyős lista
listViewComponentPallette = Lista
passwordTextBoxComponentPallette = Jelszó bevitel
pedometerComponentPallette = Lépésszámláló
sliderComponentPallette = Csúszka
spinnerComponentPallette = Felugrólista
textBoxComponentPallette = Szövegbeviteli mező
timePickerComponentPallette = Időpontválasztó
tinyDBComponentPallette = TinyDB
camcorderComponentPallette = Videófelvevő
cameraComponentPallette = Kamera
imagePickerComponentPallette = Képválasztó
playerComponentPallette = Zenelejátszó
soundComponentPallette = Hanglejátszó
videoPlayerComponentPallette = Videólejátszó
yandexTranslateComponentPallette = Yandex fordító
ballComponentPallette = Labda
imageSpriteComponentPallette = Szereplő
contactPickerComponentPallette = Névjegyválasztó
emailPickerComponentPallette = E-mail cím választó
phoneCallComponentPallette = Telefonhívás
phoneNumberPickerComponentPallette = Telefonszám választó
phoneStatusComponentPallette = Telefon adatai
sharingComponentPallette = Megosztás
textingComponentPallette = SMS
twitterComponentPallette = Twitter
accelerometerSensorComponentPallette = Gyorsulásmérő
barcodeScannerComponentPallette = Vonalkód beolvasó
gyroscopeSensorComponentPallette = Giroszkóp
locationSensorComponentPallette = Helyzetérzékelő
mediaStoreComponentPallette = Médiatárhely
nearFieldComponentPallette = NFC
orientationSensorComponentPallette = Irányérzékelő
horizontalArrangementComponentPallette = Vízszintes elrendezés
horizontalScrollArrangementComponentPallette = Vízszintes görgethető elrendezés
tableArrangementComponentPallette = Táblázatos elrendezés
verticalArrangementComponentPallette = Függőleges elrendezés
verticalScrollArrangementComponentPallette = Függőleges görgethető elrendezés
nxtColorSensorComponentPallette = Nxt színérzékelő
nxtDirectCommandsComponentPallette = Nxt közvetlen parancs
nxtDriveComponentPallette = Nxt irányító
nxtLightSensorComponentPallette = Nxt fényérzékelő
nxtSoundSensorComponentPallette = Nxt hangérzékelő
nxtTouchSensorComponentPallette = Nxt érintésszenzor
nxtUltrasonicSensorComponentPallette = Nxt ultrahang érzékelő
ev3CommandsComponentPallette = Ev3 parancs
ev3UIComponentPallette = Ev3 grafika
ev3SoundComponentPallette = Ev3 hang
ev3MotorsComponentPallette = Ev3 motor
ev3TouchSensorComponentPallette = Ev3 érintésérzékelő
ev3ColorSensorComponentPallette = Ev3 színérzékelő
ev3GyroSensorComponentPallette = Ev3 giroszkóp
ev3UltrasonicSensorComponentPallette = Ev3 ultrahang érzékelő
activityStarterComponentPallette = Aktivitás indító
bluetoothClientComponentPallette = Bluetoth kliens
bluetoothServerComponentPallette = Bluetooth szerver
notifierComponentPallette = Felugró üzenet
speechRecognizerComponentPallette = Beszédfelismerő
textToSpeechComponentPallette = Szövegfelolvasó
tinyWebDBComponentPallette = TinyWebDB
webComponentPallette = Internet
fileComponentPallette = Fájl
firebaseDBComponentPallette = Firebase adatbázis
fusiontablesControlComponentPallette = Fusion tábla vezérlés
gameClientComponentPallette = Játék kliens
soundRecorderComponentPallette = Hangrögzítő
votingComponentPallette = Szavazás
webViewerComponentPallette = Webböngésző
AccelerometerSensorHelpStringComponentPallette = Láthatatlan komponens, amely képes érzékelni ha valaki rázza a telefont és a készülék gyorsulását három dimenzióban (m/s<sup>2</sup>). A három dimenziót az alábbi változók képviselik: <ul>\n<li> <strong>x-gyorsulás</strong>: 0 ha a készülék sima felszínen fekszik mozdulatlanul, pozitív szám ha jobb oldalra dől (vagyis a bal széle emelkedik), és negatív szám ha bal oldalra dől (vagyis a jobb széle emelkedik).</li>\n <li> <strong>y-gyorsulás</strong>: 0 ha a készülék sima felszínen fekszik mozdulatlanul, pozitív szám ha a készülék alja emelkedik, negatív ha a teteje. </li>\n <li> <strong>z-gyorsulás</strong>: -9.8 m/s<sup>2</sup> (a Föld gravitációs erejének megfelelő nagyságú) ha a készülék párhuzamos helyzetben van a földdel és a képernyője felfelé néz, 0 ha merőleges a földre (valamelyik élén áll), és +9.8 ha lefelé néz. Az is befolyásolja ezt az értéket ha a telefont a föld irányába vagy azzal ellentétesen mozgatjuk.</li></ul>
ActivityStarterHelpStringComponentPallette = <p>A komponens <code>AktivitásIndítása</code> parancsával egy Androidos aktivitást indíthatunk el (egy aktivitás nagyon sokféle tevékenységet jelenthet, lásd a példákat).</p><p>Ezt több célra is felhasználhatjuk:<ul> \n<li> egy másik App Inventorban létrehozott alkalmazás elindítása </li> \n<li> a kamera alkalmazás elindítása </li> \n<li> webes keresés elindítása </li> \n<li> a böngésző megnyitása egy megadott URL-el</li> \n<li> a térkép alkalmazás megnyitása egy konkrét hellyel</li></ul>\nOlyan Androidos aktivitás is elindítható vele, amely szöveges adattal tér vissza.</p>
BallHelpStringComponentPallette = <p>Egy kör alakú \"szereplő\", amelyet ha egy <code>Rajzvászon</code> komponensre helyezünk, akkor képes reagálni a tapintásra és húzásra, valamint kapcsolatba léphet a többi szereplővel (pl: ütközés vizsgálata).</p><p>A labda mozgása az <code>Irány</code>, <code>FrissítésiIntervallum</code> és a <code>Sebesség</code> tulajdonságokon keresztül. Ha például azt akarjuk hogy a labda felfelé mozogjon másodpercenként 4 képpontnyival, akkor az elérhető úgy, hogy az <code>Irány</code> 90 [fok], a <code>FrissítésiIntervallum</code> 1000 [ezredmásodperc], a a <code>Sebesség</code> pedig 4.</p><p>A labda kinézetét csak a <code>Sugár</code> és a <code>Szín</code> tulajdonságokkal állítható be (teljesen egyedi kinézethez használd a <code>Szereplő</code> komponenst és állítsd be annak <code>Kép</code> tulajdonságát.</p>
BarcodeScannerHelpStringComponentPallette = A komponens grafikus vonalkódokat képes beolvasni és szöveggé alakítani.
BluetoothClientHelpStringComponentPallette = Bluetooth kliens komponens. Egy Bluetooth szerverhez lehet vele kapcsolódni.
BluetoothServerHelpStringComponentPallette = Bluetooth szerver komponens. Egy vagy több Bluetooth kliens kapcsolódhat hozzá.
ButtonHelpStringComponentPallette = Gomb vezérlő, amely képes érzékelni ha rákattintanak. A képernyő szerkesztőben vagy akár a blokk szerkesztőben is testre szabható a kinézete, de akár az is hogy képes legyen-e kattintások érzékelésére (<code>Enabled</code>).
CamcorderHelpStringComponentPallette = A komponens segítségével videó felvételt készíthetünk a készülék kamerájával. A felvétel elkészülte után kerül végrehajtásra az ElkészültAFelvétel esemény, amelynek paramétereként megkapjuk a videót tároló fájl teljes elérési útját. Ezt később felhasználhatjuk például arra, hogy egy videó lejátszó komponens <code>MédiaTartalomElérésiÚtja</code> tulajdonságát beállítsuk rá.
CameraHelpStringComponentPallette = A komponens segítségével egy fotót készíthetünk a készülék kamerájával. A felvétel elkészülte után kerül végrehajtásra az elkészült a fotó esemény, amelynek paramétereként megkapjuk a fotót tároló fájl nevét. Ezt később felhasználhatjuk például arra, hogy egy Kép komponens <code>Kép forrása</code> tulajdonságát beállítsuk rá.
CanvasHelpStringComponentPallette = <p>Egy téglalap alakú terület a képernyőn, amelyre szereplőket lehet rajzolni és reagál az érintésekre.</p><p>A szereplők helyzetét (X, Y) koordinátákkal lehet megadni, ahol:<ul> <li>X a szereplő vízszintes távolsága (képpontban) a rajzvászon bal szélétől</li><li>Y a szereplő függőleges távolsága (képpontban) a rajzvászon tetejétől</li></ul></p><p>Érintésre/húzásra eseményekkel reagál, amelyeket a Blokk Szerkesztőben lehet kezelni.</p><p>Vonalakat, téglalapokat, köröket és más alakzatokat lehet rá rajzolni.</p>
CheckBoxHelpStringComponentPallette = Jelelő négyzet vezérlő, amely képes érzékelni ha rákattintanak. Kétféle állapota lehet: vagy ki van pipálva vagy nincs. A Képernyő Szerkesztőben és Blokk Szerkesztőben is testre szabható a kinézete.
ClockHelpStringComponentPallette = <p>Láthatatlan komponens, amellyel lekérdezhető az aktuális idő és időzítésre is használható (adott időközönként végrehajtani egy feladatot).</p><p>Ugyancsak képes dátumok szöveggé alakítására, ahol ha nem adunk meg formátumot, akkor az alapértelmezettet használja: \"MMM d, yyyy HH:mm:ss a\" (pl: Jan 8, 2008 11:35:00 AM). A lehetséges formátumokról <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html\" target=\"_blank\">itt olvashatsz</a>.</p>
ContactPickerHelpStringComponentPallette = <p>Egy gomb, amelyet ha lenyomunk, megjeleníti a készüléken található névjegyek listáját. Miután a felhasználó kiválasztott közülük egyet, az alábbi információk állnak rendelkezésre a <code>NévjegyKiLettVálasztva</code> blokkban:<ul>\n<li> <code>Névjegy név</code>: a névjegyhez tartozó személy/cég neve </li>\n <li> <code>E-mail cím</code>: a névjegyhez tartozó elsődleges e-mail cím </li>\n <li> <code>NévjegyUri</code>: névjegy erőforrás azonosítója (URI) a készüléken </li>\n <li> <code>Kép</code>: a névjegyhez tartozó kép fájl elérési útja, amely értéket felhasználhatjuk egy <code>Kép</code> vagy egy <code>Szereplő</code> komponens <code>Kép forrása</code> mezőjének beállításánál.</li></ul>\n</p><p>Vannak egyéb tulajdonságai, amelyek a gomb kinézetét módosítják (<code>Szöveg víszintes igazítás</code>, <code>Háttérszín</code>, stb.), illetve az hogy a gombra rá lehet-e kattintani (<code>Engedélyezett</code>).</p><p>Nem mindegyik készülék támogatja a névjegyek kiválasztását. Hiba esetén egy felugró üzenetablakban lesz látható a hiba oka, de ezt a viselkedést felülírhatjuk a Képernyő komponens HibaTörtént blokkjában.</p>
DatePickerHelpStringComponentPallette = <p>Egy gomb, amely kattintásra egy felugró ablakot jelenít meg, amelyben egy dátumot választhatunk ki.</p>
EmailPickerHelpStringComponentPallette = <p>Az EmailCímVálasztó egy szöveges beviteli mező, amelybe ha elkezdünk írni, akkor megjeleníti azoknak a tárolt e-mail címeket, amelyek a már begépelt szöveggel kezdődnek. Ha a list túl hosszú a lista, akkor több másodpercet is igénybe vehet annak betöltése. Ilyenkor egy ideiglenes eredményt jelenít meg a rendszer, amíg a teljes lista el nem készül.</p><p>A begépelt szöveg a <code>Szöveg</code> mezőben található, ha ez üres, akkor pedig <code>Segítség/Tipp</code> mező tartalma lesz látható.</p>\n<p>Vannak egyéb tulajdonságai, amelyek a gomb kinézetét módosítják (<code>SzövegVíszintesIgazítás</code>, <code>Háttérszín</code>, stb.), illetve az hogy a gombra rá lehet-e kattintani (<code>Engedélyezett</code>).</p><p>A szöveges beviteli mezőket sokszor használjuk a <code>Gomb</code> komponenssel együtt, amikor is a felhasználó a szöveg beírása után rákattint egy gombra.</p>
Ev3MotorsHelpStringComponentPallette = Magas és alacsony szintű hozzáférést is biztosít a LEGO MINDSTORMS EV3 robot mozgását irányító motorhoz.
Ev3TouchSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 roboton található érintés érzékelőhöz.
Ev3GyroSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 roboton található giroszkóphoz.
Ev3ColorSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 roboton található színérzékelő eszközhöz.
Ev3UltrasonicSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 roboton található ultrahang érzékelőhöz.
Ev3CommandsHelpStringComponentPallette = Alcsony szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 robothoz, közvetlen parancsokat küldhetünk vele az eszközre.
Ev3UIHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 robot grafikus képességeihez.
Ev3SoundHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS EV3 roboton található hanglejátszóhoz.
FileHelpStringComponentPallette = Láthatatlan komponens, amellyel fájlokat írhatunk és olvashatunk. Alapértelmezetten az alkalmazáshoz rendelt privát adatkönyvtárba írja az állományokat. A Companion segédalkalmazás az /sdcard/AppInventor/data könyvtárt használja fájlok írására, a hibakövetés (debugging) elősegítésére. Ha a fájl elérési útja perjellel (/) kezdődik, akkor a program azt az /sdcard mappához viszonyítva értelmezi. Például /alma.txt esetén a tényleges elérési út /sdcard/alma.txt lesz.
FormHelpStringComponentPallette = Legfelsőbb szintű komponens, amely magába foglal minden más komponenst az alkalmazásban.
FusiontablesControlHelpStringComponentPallette = <p>Láthatatlan komponens, amellyel Google Fusion Tables adatabázisokat használhatunk, új táblákat hozhatunk létre, módosíthatjuk a már meglévőket és lekérdezhetjük a bennük tárolt adatokat.</p><p>A komponens a <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\">Fusion Tables API 2.0</a> verzióját használja.</p><p>Ha használni akarjuk ezt a komponenst, akkor ehhez be kell jelentkezni a Google megfelelő szerverére. Ezt kétféleképpen lehet megtenni. Egyrészt be lehet jelentkezni az API Kulcs használatával, amit fejlesztőként igényelhetünk (lásd lejjebb). Ha ezt a megoldást választjuk akkor az alkalmazás felhasználójának is be kell jelentkeznie a Fusion Tables használata előtt. A másik lehetőség az ún. Szolgáltatási Fiókkal (Service Account) történő bejelentkezés. Ehhez először létre kell hozni egy ún. Szolgáltatási E-mail Címet (Service Account E-mail Address), amelyet a <a href=\"https://code.google.com/apis/console/\" target=\"_blank\">Google API Konzol</a> felületén lehet megtenni. Ezután Fusion Table Vezérlőn (Fusion Table Control) be kell állítani a Szolgáltatási E-mail Címet, majd a mobilalkalmazás erőforrásként feltölteni a titkos kulcsot és beállítani rá a <code>KulcsFájl</code> tulajdonságát a komponensnek. Legvégül pedig  a \"belépés szolgáltatási e-mail címmel\" mezőt ki kell pipálni. Szolgáltatási Fiók használata esetén a Fusion Tables adatabázisokhoz való összes azon keresztül történik majd, a mobilalkalmazás felhasználójának nem kell hozzá bejelentkeznie.</p><p>Az API Kulcs megszerzéséhez az alábbiakat kell tenni:</p> <ol> <li>Nyisd meg a <a href=\"https://code.google.com/apis/console/\" target=\"_blank\">Google API Konzolt</a> és jelentkezz be amennyiben az szükséges.</li> <li>Válaszd ki a <i>Szolgáltatások</i> (<i>Services</i>) menüpontot a bal oldali menüből.</li> <li>Válaszd ki a  <i>Fusion tables</i> szolgáltatást a listából és kapcsold be.</li> <li>Menj vissza a főmenübe és válaszd ki a <i>API Hozzáférés</i> (<i>API Access</i>) menüpontot. </li> </ol> <p>Az API Kulcsod a panel alján, az Egyszerű API Hozzáférés (Simple API Access) szekcióban. Ezt az értéket kell megadnod a komponens <i>APIKulcs</i> mezőjében a Fusion Tables technológiát használó alkalmazásodban.</p> <p>Az API Kulcs beállítása után, írj be a <i>Lekérdezés</i> mezőbe egy érvényes Fusiontables SQL lekérdező parancsot és hívd meg a <i>LekérdezésElküldése</i> blokkot a parancs lefuttatásához. Az App Inventor ekkor elküldi a parancsot a  Fusion Tables szervernek, majd a <i>MegérkezettALekérdezésEredménye</i> esemény meghívásával jelzi hogy megjött az eredmény. A lekérdezés eredményét CSV formában kapjuk vissza, amely listává alakítható a \"készíts listát CSV táblázatból\" or \"készíts listát CSV sorból\" blokkokkal.</p> <p>A parancs szövegének UTF-kódolásával nem kell külön foglalkozni, viszont követni kell a <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\">Fusion Tables Kézikönyvben</a> megadott szintaxist, amely többek között azt jelenti, hogy az oszlopok neveinél meg kell különböztetnünk a kis- és nagy betűket, valamint aposztrófok közé kell tenni azokat, ha szóközt tartalmaznak.</p>
GameClientHelpStringComponentPallette = Lehetővé teszi hogy az alkalmazás internetes játékszerverekkel kommunikáljon.
GyroscopeSensorHelpStringComponentPallette = <p>Láthatatlan komponens, amely a készülék szögsebességét (fok / sec) méri három dimenzióban.</p><p>A helyes működéshez a készüléknek rendelkeznie kell giroszkóppal, valamint az <code>Engedélyezett</code> mezőt Igaz értékre kell állítani.</p>
HorizontalArrangementHelpStringComponentPallette = <p>Egy olyan elrendező elem, amely a belé rakott komponenseket balról jobbra jeleníti meg. Ha azt szeretnéd, hogy a komponenseket inkább egymás alá helyezze, akkor a <code>FüggőlegesElrendezés</code> vezérlőt érdemes használnod.</p>
HorizontalScrollArrangementHelpStringComponentPallette = <p>Egy olyan elrendező elem, amely a belé rakott komponenseket balról jobbra jeleníti meg. Ha azt szeretnéd, hogy a komponenseket inkább egymás alá helyezze, akkor a <code>FüggőlegesElrendezés</code> vezérlőt érdemes használnod.</p><p>Ez a komponens görgethető (ha a benne lévő elemek nem férnek mind ki).</p>
ImageHelpStringComponentPallette = Képek ábrázolására szolgáló komponens. A Képernyő Szerkesztőben és a Blokk Szerkesztőben is beállítható a kép forrása, szélessége, magassága és egyéb tulajdonságai is.
ImagePickerHelpStringComponentPallette = Egy olyan gomb, amely megnyitja a készülék fotógalériáját és lehetőséget ad egy kép kiválasztására. Ezután a kiválasztott képet elmenti egy fájlba, amelynek elérési útját a komponens <code>KépElérésiÚtja</code> tulajdonsága tartalmazza majd. Legfeljebb 10 fotót lehet ezzel elmenteni. Ha azon felül is kijelölünk egyet, akkor az felülírja a legrégebben kiválasztott képet.
ImageSpriteHelpStringComponentPallette = <p>Egy kétdimenziós kép, amelyet ha egy <code>Rajzvászon</code> komponensre helyezünk, akkor képes reagálni a tapintásra és húzásra, valamint kapcsolatba léphet a többi szereplővel (pl: ütközés vizsgálata).</p><p>A labda mozgása az <code>Irány</code>, <code>FrissítésiIntervallum</code> és a <code>Sebesség</code> tulajdonságokon keresztül. Ha például azt akarjuk hogy a labda felfelé mozogjon másodpercenként 4 képpontnyival, akkor az elérhető úgy, hogy az <code>Irány</code> 90 [fok], a <code>FrissítésiIntervallum</code> 1000 [ezredmásodperc], a a <code>Sebesség</code> pedig 4.</p><p>Ha a <code>KépesForgásra</code> tulajdonság Igaz értékre van beállítva, akkor a szereplőnek beállított kép az <code>Irány</code> tulajdonság szerint megadott irányba fordul.</p><p>Ha ütközés vizsgálatakor a szereplő el van forgatva, akkor is valójában az el nem forgatott változatot használja a rendszer a vizsgálathoz, ezért az nem biztos hogy mindig pontos lesz.</p>
LabelHelpStringComponentPallette = A Címke komponens egy szöveg ábrázolására szolgál. A Képernyő Szerkesztőben és a Blokk Szerkesztőben is beállítható a tartalma a <code>Szöveg</code> tulajdonságán keresztül, valamint az elhelyezése, a betűk mérete és egyéb jellemzői is.
ListPickerHelpStringComponentPallette = <p>Egy gomb, amely kattintásra egy szöveges listát jelenít meg, amelyből a felhasználó kiválaszthat egy listaelemet. A lista elemei a <code>ListaElemekMintSzöveg</code> tulajdonságon keresztül állíthatók be (vesszővel elválasztva, pl: <em>első elem, második elem, harmadik elem</em>) a Képernyő Szerkesztőben vagy a Blokk Szerkesztőben. Ugyancsak beállíthatjuk, ha a Blokk Szerkesztőben egy lista értéket rendelünk a <code>ListaElemek</code> mezőhöz.</p><p>A ListaSzűrésBekapcsolva tulajdonságot igaz értékre állítva lehetővé tehetjük a keresést a listaelemek között. További tulajdonságaival állítható például a gomb megjelenítése (<code>SzövegVíszintesIgazítás</code>, <code>HáttérSzín</code>, stb.) és hogy rá reagál-e kattintásra (<code>Engedélyezett</code>).</p>
ListViewHelpStringComponentPallette = <p>Egy szöveges listát megjelenítő komponens. <br/>A lista elemei a <code>ListaElemekMintSzöveg</code> tulajdonságon keresztül állíthatók be, vagy a Blokk Szerkesztőben a <code>ListaElemek</code> mezőnek értéket adva.</p>
LocationSensorHelpStringComponentPallette = <p>Láthatatlan komponens, amely a készülék földrajzi helyzetéről ad információt, többek között a szélességi és hosszúsági fokról, magasságról (ha az eszköz támogatja), sebességéről, valamint címéről. Képes \"geokódolásra\" is, vagyis a szövegesen megadott címnek visszaadja a földrajzi koordinátáit: a szélességi fokát a <code>CímSzélességiFoka</code> blokk, a hosszúsági fokot pedig <code>CímHosszúságiFoka</code> blokk adja vissza.</p><p>Működéséhez az <code>Engedélyezett</code> tulajdonságot Igaz értékre kell állítani, valamint a készülék képes kell hogy legyen GPS-en vagy mobil hálózaton keresztül meghatározni a jelenlegi földrajzi koordinátákat.</p><p>Az alkalmazás indításakor még nem biztos hogy rendelkezésre állnak ezek az információk, lehet hogy várni kell rá egy kicsit, érdemes lehet feliratkozni a <code>HelyzetMegváltozott</code> eseményre.</p>
MediaStoreHelpStringComponentPallette = <p>A MédiaTárhely komponens segítségével egy webszolgáltatáson keresztül média fájlokat tárolhatunk. Egyetlen metódusa van, amellyel a szolgáltatás BLOB tárhelyére tölthetünk fel egy média objektumot, majd visszakapjuk a letárolt fájl URL-jét.</p>
NearFieldHelpStringComponentPallette = <p>Láthatatlan komponens, amely rövidtávú vezeték nélküli kommunikációra képes.</p><p>Jelenleg csak szöveges üznetek küldésére és fogadására képes (amennyiben a készülék támogatja).</p><p>Az üzenetek olvasásához az <code>OlvasásMód</code> mezőt Igaz értékre, írásához pedig Hamis értékre kell állítani</p><p>Figyelem: a komponens csak az alkalmazás kezdő képernyőjén képes működni.</p>
NotifierHelpStringComponentPallette = A felugró üzenet komponensen keresztül figyelmeztető üzeneteket, ideiglenes felugró ablakokat és az Android naplózási lehetőségeit tudjuk használni:<ul><li>SzövegesÜzenetAblak: egy üzenetet jelenít meg, amelyet a felhasználó egy gomb megnyomásával tüntethet el</li><li>VálasztásAblak: egy üzenetet és két szöveges gombot jelenít meg, a felhasználó két gomb közül az egyik megnyomásával tüntetheti el az ablakot, amelynek hatására a MegtörténtAVálasztás esemény következik be</li><li>SzövegBevitelAblak: a felhasználó a megjelenő üzenetre egy szöveg bevitelével válaszolhat, amelynek hatására a MegtörténtASzövegBevitel esemény következik be</li><li>IdeiglenesFigyelmeztetőAblak: egy ideiglenes figyelmeztető üzenetet jelenít meg, amely rövid idő után magától eltűnik</li><li>FolyamatÁbrázolóAblak: egy üzenetet és egy forgó animációt jelenít meg, jelezve hogy egy befejezetlen folyamat megy a háttérben. Csak a FolyamatÁbrázolóAblakBezárása paranccsal lehet eltüntetni.</li><li>FolyamatÁbrázolóAblakBezárása: eltünteti azt az ablakot amelyet a FolyamatÁbrázolóAblak parancs hozott elő.</li><li>HibaÜzenetNaplózása: egy hibaüzenetet ír az Android rendszer szöveges eseménynaplójába.</li><li>FigyelmeztetőÜzenetNaplózása: egy figyelmeztető üzenetet ír az Android rendszer szöveges eseménynaplójába.</li><li>InformációÜzenetNaplózása: egy egyszerű szöveges üzenetet ír az Android rendszer szöveges eseménynaplójába.<li>Bármelyik ablakban megjelenő üzenet formázható az alábbi HTML elemekkel:&lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li>Ugyancsak használható a <code>&lt;font&gt;</code> elem a szöveg színének beállítására, pl: &lt;font color=\"blue\"&gt;. A szöveg nevét angolul kell megadni. A használható szín nevek: aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white, yellow, stb.</li></ul>
NxtColorSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS NXT robot színérzékelő eszközéhez.
NxtDirectCommandsHelpStringComponentPallette = Alacsony szintű hozzáférést biztosít a LEGO MINDSTORM NXT robothoz, közvetlen parancsok küldhetők vele a készülékre.
NxtDriveHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS NXT eszközhöz, a parancsaival mozgathatjuk és forgathatjuk a robotot.
NxtLightSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS NXT robot fényérzékelő eszközéhez.
NxtSoundSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS NXT hangerő mérő eszközéhez.
NxtTouchSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS NXT érintés érzékelő eszközéhez.
NxtUltrasonicSensorHelpStringComponentPallette = Magas szintű hozzáférést biztosít a LEGO MINDSTORMS NXT ultrahang érzékelő eszközéhez.
OrientationSensorHelpStringComponentPallette = <p>Láthatatlan komponens, amely a készülék fizikai irányáról ad információkat három dimenzióban:<ul><li><strong>x elfordulás</strong>: 0 fok ha a készülék a földön fekszik, 90 fok ha a bal oldalán áll, és -90 fok ha a jobb oldalán.</li><li><strong>y elfordulás</strong>: 0 fok ha a készülék a földön fekszik, 90 fok ha a készülék teteje néz függőlegesen lefele, 180 fok ha a képernyő függőlegesen lefele néz. Hasonlóképp -90 fok ha a készülék alja néz lefelé, -180 fok ha a képernyő függőlegesen lefele néz.</li><li><strong>z elfordulás</strong>: 0 fok ha a észak felé néz, 90 fok ha keletre, 180 fok ha dél irányába, 270 fok ha nyugatra.</li></ul>Ezek az értékek akkor lehetnek pontosak, ha a készülék nem mozog.</p>
PasswordTextBoxHelpStringComponentPallette = <p>Egy szöveges beviteli mező, ahová jelszavakat lehet beírni. Hasonlóan működik mint a <code>Szövegbeviteli mező</code> komponens, de itt nem láthatók a felhasználó által begépelt karakterek.</p><p>A beírt szöveg lekérdezhető vagy beállítható a <code>Szöveg</code> tulajdonságon keresztül. Ha a beviteli mező üres, akkor a <code>Segítő szöveg</code> tartalma jelenik meg, amellyel segítő utalást adhatunk mit is kell oda beírni.</p> <p>A szöveges beviteli mezőket sokszor használjuk a <code>Gomb</code> komponenssel együtt, amikor is a felhasználó a szöveg beírása után rákattint egy gombra.</p>
PedometerHelpStringComponentPallette = A LépésSzámláló a beépített GyorsulásMérő segítségével számon tartja hány lépést tett meg a készüléket használó személy, illetve hogy az mekkora földrajzi távolságnak felel meg.
PhoneCallHelpStringComponentPallette = <p>Egy láthatatlan komponens, amellyel telefon hívásokat kezdeményezhetünk a <code>Telefonszám</code> mezőben megadott számra (pl: "36301234567"), amelyet a Képernyő Szerkesztőben és a Blokk Szerkesztőben is beállíthatunk. A szövegként megadott telefonszám tartalmazhat kötőjel, zárójel és pont karaktereket, de szóközt nem.</p><p>A komponens <code>TelefonHívásIndítása</code> blokkjával indíthatjuk el ténylegesen a hívást.</p><p>Gyakran használjuk a <code>Névjegy választó</code> vezérlővel együtt, amely lehetővé teszi hogy a felhasználó kiválasszon egy lementett névjegyet és a hozzá tartozó telefonszámot.</p>
PhoneNumberPickerHelpStringComponentPallette = <p>Egy gomb, amelyet ha lenyomunk, megjeleníti a készüléken található elmentett telefonszámok listáját. Miután a felhasználó kiválasztott közülük egyet, az alábbi információk állnak rendelkezésre a <code>Névjegy ki lett választva</code> blokkban:<ul>\n<li> <code>Névjegy név</code>: a névjegyhez tartozó személy/cég neve </li>\n <li> <code>E-mail cím</code>: a névjegyhez tartozó elsődleges email cím </li>\n <li> <code>Telefonszám</code>: névjegyhez tartozó telefonszám </li>\n <li> <code>Kép</code>: a névjegyhez tartozó kép fájl elérési útja, amely értéket felhasználhatjuk egy <code>Kép</code> vagy egy <code>Szereplő</code> komponens <code>Kép forrása</code> mezőjének beállításánál.</li></ul>\n</p><p>Vannak egyéb tulajdonságai, amelyek a gomb kinézetét módosítják (<code>Szöveg víszintes igazítás</code>, <code>Háttérszín</code>, stb.), illetve az hogy a gombra rá lehet-e kattintani (<code>Engedélyezett</code>).</p><p>Nem mindegyik készülék támogatja a telefonszám kiválasztását. Hiba esetén egy felugró üzenetablakban lesz látható a hiba oka, de ezt a viselkedést felülírhatjuk a Képernyő komponens HibaTörtént blokkjában.</p>
PhoneStatusHelpStringComponentPallette = A komponens a telefon állapotáról ad vissza információkat.
PlayerHelpStringComponentPallette = <p>Egy multimédia komponens, amely zenék és hosszabb hangfájlok lejátszására képes, valamint a telefont rezgetésére (a Blokk Szerkesztőben megadott időtartamra). A hang/zene forrása (fájlnév, URL) a Képernyő Szerkesztőben és a Blokk Szerkesztőben is megadható. A támogatott fájl formátumról itt található információ: <a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\">Android Supported Media Formats</a>.</p>A zene lejátszóval zenéket és hosszabb hangokat érdemes lejátszani, rövidebb hangfájlokhoz használjuk inkább a <code>hang lejátszó</code> komponenst.</p>
SharingHelpStringComponentPallette = <p>Egy láthatatlan komponens, amely fájlok és üzenetek megosztását teszi lehetővé a te alkalmazásod és a többi készülékre telepített alkalmazás között. Használatkor a komponens megjeleníti azon alkalmazások listáját, amelyek a megosztásra szánt adatot képesek kezelni, a felhasználó pedig kiválaszthat közülük egyet (pl. egy email alkalmazást vagy egy SMS alkalmazást).</p><p>A megosztandó fájl elérési útja lekérdezhető közvetlenül egy KépVálasztó vagy egy Kamera komponenstől, de akár egy már a lászülék tárhelyén lévő fájlt is felhasználhatunk.</p><p>Különböző készülékek különböző módon tárolhatják ugyanazt a fájlt, például ha van egy <code>alma.gif</code> állomány a <code>Appinventor/assets</code> könyvtárban, akkor ennek a teljes elérési útja lehet akár:<ul><li><code>\"file:///sdcard/Appinventor/assets/alma.gif\"</code></li> vagy <li><code>\"/storage/Appinventor/assets/alma.gif\"</code></li></ul></p>
SliderHelpStringComponentPallette = A Csúszka egy víszintes rúd, amelynek van egy mozgatható része. Ez képviseli a Csúszka értéktartományán belül felvett értéket, a felhasználó pedig jobbra vagy balra mozgathatja az ujjai segítségével. Ha megváltozik a helyzete/értéke, akkor bekövetkezik az CsúszkaÉrtékMegváltozott esemény. Ez felhasználható például arra hogy a változásra reagálva módosítsuk egy másik komponens tulajdonságát (pl: egy SzövegbeviteliMező betűméretét vagy egy Labda komponens átmérőjét).
SoundHelpStringComponentPallette = <p>Egy multimédia komponens, amely hangok lejátszására képes, valamint a telefont rezgetésére (a Blokk Szerkesztőben megadott időtartamra). A hangfájl neve a Képernyő Szerkesztőben és a Blokk Szerkesztőben is megadható. A támogatott fájl formátumról itt található információ: <a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\">Android Supported Media Formats</a>.</p>A Hanglejátszóval rövid hangokat érdemes lejátszásani, hoszabb zenékhez használjuk inkább a <code>ZeneLejátszó</code> komponenst.</p>
SoundRecorderHelpStringComponentPallette = <p>Hangfelvétel készítésére képes a készülék mikrofonjával.</p>
SpeechRecognizerHelpStringComponentPallette = Hangfelismerő algoritmus segítségével a rögzített beszédet írott szöveggé alakítja.
SpinnerHelpStringComponentPallette = <p>A FelugróLista komponens egy szöveges listát tartalmazó felugró ablak, amelyből a felhasználó kiválaszthat egy elemet. A lista elemei a <code>ListaElemekMintSzöveg</code> tulajdonságon keresztül állíthatók be (vesszővel elválasztva, pl: <em>első elem, második elem, harmadik elem</em>) a Képernyő Szerkesztőben vagy a Blokk Szerkesztőben. Ugyancsak beállíthatjuk, ha a Blokk Szerkesztőben egy lista értéket rendelünk a <code>ListaElemek</code> mezőhöz.</p>
TableArrangementHelpStringComponentPallette = <p>Egy olyan elrendező elem, amely táblázatos formában (sor-oszlop szerint) jeleníti meg a belé helyezett elemeket.</p>
TextBoxHelpStringComponentPallette = <p>Egy komponens, amelybe a felhasználó szöveget írhat be. A beírt szöveg lekérdezhető vagy beállítható a <code>Szöveg</code> tulajdonságon keresztül. Ha a beviteli mező üres, akkor a <code>SegítőSzöveg</code> tartalma jelenik meg, amellyel segítő utalást adhatunk mit is kell oda beírni.</p><p>A <code>Többsoros</code> tulajdonsággal állíthatjuk be hogy a szöveg több sorba is átnyúlhat-e. Egysoros bevitel esetén a billentyűzet automatikusan bezárul, ha a felhasználó a Done/Kész gombot lenyomja. Többsoros szövegmezőknél ezt a BillentyűzetElrejtése paranccsal lehet elérni, vagy a Vissza gomb lenyomásával a felhasználó által.</p><p>A <code>CsakSzámok</code> tulajdonsággal beállítható hogy a szövegmezőbe csak szám karaktereket lehessen beírni.</p><p>A többi tulajdonság a szöveg mező megjelenését szabályozza (pl: <code>HáttérSzín</code>), vagy azt hogy lehet-e bele írni (<code>Engedélyezett</code>).</p><p>A szöveges beviteli mezőket sokszor használjuk a <code>Gomb</code> komponenssel együtt, amikor is a felhasználó a szöveg beírása után rákattint egy gombra.</p><p>Ha azt akarod hogy a beírt szöveg ne legyen látható, akkor használd inkább a JelszóBevitel komponenst.</p>
TextToSpeechHelpStringComponentPallette = Az írott szöveget hangos beszéddé alakítja és lejátsza.
TextingHelpStringComponentPallette = <p>Egy láthatatlan komponens, amely <code>üzenet küldés</code> paranccsal el tudja küldeni az <code>Üzenet</code> mezőben megadott szöveget a <code>TelefonSzám</code> mezőben megadott számra.</p> <p>Ha az <code>üzenet fogadási mód</code> mező értéke 1-re (Kikapcsolva) van beállítva, akkor az alkalmazás <b>egyáltalán nem fog üzeneteket fogadni</b>. Ha a <code>üzenet fogadási mód</code> mező értéke 2-re (csak ha előtérben az alkalmazás) van beállítva, akkor az alkalmazás csak akkor fogad SMS üzeneteket ha az előtérben fut. És végül ha az <code>üzenet fogadási mód</code> mező értéke 3-ra (mindig) van beállítva, akkor az alkalmazás az előtérben futva <b>és</b> kikapcsolva is képes üzeneteket fogadni. Az az alkalmazás amely használja ezt a komponenst, akkor is fogad üzeneteket amikor a háttérben van (vagyis nincs az adott pillanatban a készülék képernyőjén), sőt, még akkor is ha nem is fut, csak telepítve van a készüléken. Ha üzenet érkezik a telefonra amikor az alkalmazás nincs az előtérben, akkor az értesítési sávban megjelenik egy értesítés, amelyre tapintva elindul majd az alkalmazás. Fejlesztőként valószínű hogy azt akarod hogy a felhasználó is képes legyen szabályozni az <code>üzenet fogadási mód</code> mező értékét, hogy ne legyen kötelező az alkalmazásnak fogadnia minden üzenetet.</p><p>Amikor üzenet érkezik, az <code>üzenet érkezett</code> esemény kerül meghívásra, amelyben megkapjuk a küldő fél telefonszámát és az üzenet tartalmát.</p><p>Ha a <code>Google asszisztens engedélyezve</code> tulajdonság be van kapcsolva, akkor a Google Asszisztens segítségével akár wifin keresztül is küldhetünk üzenetet. Ez viszont csak akkor működik ha rendelkezünk Google Asszisztens fiókkal és a készülékünkön Android 2.0 (Eclair) vagy frissebb operációs rendszer fut.</p> <p>A címzett számát (pl., 361-555-1212) a <code>telefonszám</code> mezőn keresztül állíthatjuk be (pl., 3615551212). Tartalmazhat pont, kötőjel és zárójel karaktereket (de figyelmen kívül lesznek hagyva), viszont szóközt nem.</p> <p>A címzett beállításánál felhasználhatjuk a <code>telefonszám választó</code> komponenst, megengedve a felhasználónak hogy a telefonon rögzített kapcsolatok listájából válasszon telefonszámot.</p>
TimePickerHelpStringComponentPallette = <p>Egy gomb, amely kattintásra egy ablakot jelenít meg, amelyben a felhasználó kiválaszthat egy tetszőleges időpontot.</p>
TinyDBHelpStringComponentPallette = <p>A TinyDB egy helyi adatbázis az alkalmazás számára.</p><p> Az App Inventorban készített alkalmazások nem mentik el automatikusan a használt változók értékeit. Az alkalmazás bezárásával az összesnek törlődik az értéke. Ezzel szemben a TinyDB <em>perzisztens</em> adattárolást tesz lehetővé, az ide mentett adatok az alkalmazás bezárása után is megmaradnak és elérhetők lesznek a program újboli indítása során. Egy jó példa erre egy játék során elért pontszámok (high score) elmentése.</p><p>Az adatbázisba szöveges elemeket írhatunk, mindegyikhez egy <em>címkét</em> rendelve. Később pedig lekérdezhetjük hogy az adatbázisban az adott címkéhez milyen adat tartozik.</p><p>Egy alkalmazáshoz csak egyetlen TinyDB adatbázis tartozhat, még ha több TinyDB komponenst is használunk a programban, az ugyanarra az adattárra fog hivatkozni. Ha azt a hatást akarjuk elérni hogy több adatbázisunk akkor használjunk különböző címkéket. Mindegyik alkalmazás saját TinyDB adatbázissal rendelkezik, ezért a TinyDB nem használható alkalmazások közötti adatmegosztásra, arra viszont igen hogy egy több képernyős program képernyői között adatot osszon meg.</p> <p>Fejlesztés közben az AI Companion alatt futó összes alkalmazás ugyanazt a TinyDB adatbázist használja, de ez csak addig tart amíg különálló alkalmazás nem lesz a fejlesztés alatt álló programból (külön .apk fájlba csomagolva). Addig is érdemes figyelni mikor és mit törlünk a TinyDB adatbázisból.</p>
TinyWebDBHelpStringComponentPallette = Láthatatlan komponens, amellyel egy webes adatbázisban tárolhatunk adatokat és olvashatjuk azokat vissza.
TwitterHelpStringComponentPallette = <p>Egy láthatatlan komponens, amelynek segítségével a <a href=\"http://www.twitter.com\" target=\"_blank\">Twitteren</a> küldhetünk üzeneteket. Amint a felhasználó bejelentkezett a Twitter fiókjába (és meghívódott az ennek sikerességét jelző <code>SikeresenBejelentkezett</code> esemény), több parancs is elérhetővé válik:<ul><li>keresés a tweetek között szöveg vagy címke alapján (<code>TwitterKeresés</code>)</li></ul></p>\n<li> Tweet küldése (<code>Tweet</code>) </li>\n<li> Tweet küldése képpel együtt (<code>TweetKéppel</code>) </li>\n<li> Közvetlen üzenet egy felhasználónak (<code>KözvetlenÜzenet</code>)</li>\n<li> A legutóbbi üzenetek olvasása, amit közvetlenül a te Twitter fiókodnak címeztek (<code>KözvetlenÜzenetekLekérdezése</code>)</li>\n <li> Egy felhasználó követése (<code>Követés</code>)</li>\n<li> Egy felhasználó követésének leállítása (<code>KövetésLeállítása</code>)</li>\n<li> Követőid listájának lekérdezése (<code>KövetőkLekérdezése</code>)</li>\n<li> Az általad követett felhasználók legújabb üzeneteinek lekérdezése (<code>BarátokÜzeneteinekLekérdezése</code>)</li>\n <li> A legutóbbi üzenetek lekérdezése amelyekben megemlítették a felhasználódat (<code>EmlítésekLekérdezése</code>)</li></ul></p>\n <p>A komponens használatához szükséged lesz egy Felhasználói Kulcsra (Consumer Key) és egy Titkos Kulcsra (Consumer Secret). Ezeket a kulcsokat az alábbi címen lehet létrehozni és az alkalmazáshoz rendelni: http://twitter.com/oauth_clients/new</p>
VerticalArrangementHelpStringComponentPallette = <p>Egy olyan elrendező elem, amely a belé rakott komponenseket függőlegesen, egymás alá rendezve jeleníti meg. Ha azt szeretnéd, hogy a komponenseket inkább víszintesen egymás mellé helyezze, akkor a <code>VíszintesElrendezés</code> vezérlőt érdemes használnod.</p>
VerticalScrollArrangementHelpStringComponentPallette = <p>Egy olyan elrendező elem, amely a belé rakott komponenseket függőlegesen, egymás alá rendezve jeleníti meg. Ha azt szeretnéd, hogy a komponenseket inkább víszintesen egymás mellé helyezze, akkor a <code>VíszintesElrendezés</code> vezérlőt érdemes használnod.</p><p>Ez a komponens görgethető (ha a benne lévő elemek nem férnek mind ki).</p>
VideoPlayerHelpStringComponentPallette = <p>Egy videók lejátászára képes komponens. Amíg az alkalmazás fut, addig egy téglalap alakú területet foglal el a képernyőről. Ha a felhasználó hozzáér ehhez a lejátszó területéhez, akkor megjelennek a lejátszás/szünet, előretekerés és visszatekerés gombjai a képernyőn. Ugyanezek a funkciók elérhetők a BlokkSzerkesztőben is a <code>Start</code>, <code>Pause</code>, és <code>SeekTo</code> parancsokkal.</p><p>Az alábbi formátumú videók lejátszására képes: Windows Media Video (.wmv), 3GPP (.3gpp) és MPEG-4 (.mp4). A támogatott formátumokról itt található további információ: <a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\">Android Supported Media Formats</a></p><p>Az App Inventorban készült alkalmazások maximális mérete 5 MB, ezért ennél nagyobb videó fájlokat sem lehet fordításkor hozzáadni a projekthez. Ha mégis nagy méretű videót szeretnél lejátszani, akkor állítsd a videó forrását egy URL-re.</p>
VotingHelpStringComponentPallette = <p>A Szavazó komponens segítségével több felhasználó dönthet többségi szavazással egy vagy több kérdésről egy webszolgáltatáson keresztül.</p>
WebHelpStringComponentPallette = Egy láthatatlan komponens, amellyel HTTP GET, POST, PUT és DELETE parancsokat adhatunk ki.
WebViewerHelpStringComponentPallette = Weboldalak böngészésére szolgáló komponens. A kezdő weboldal címe a Képernyő Szerkesztőben és Blokk Szerkesztőben is beállítható a KezdőOldalURL tulajdonságon keresztül. Figyelem: komponens nem rendelkezik a hagyományos asztali böngészők összes képességével.
YandexTranslateHelpStringComponentPallette = <p>Tetszőleges szöveget fordíthatunk vele egyik nyelvről a másikra. A fordító a Yandex webes szolgáltatását használja, ezért működő internetes kapcsolat szükséges hozzá.</p><p>A nyelvet amelyről fordítunk és a nyelvet amelyre fordítunk kétbetűs kódokkal kell megadni (pl: \"en-hu\" az angolról magyarra fordítás kódja). Ha a fordítandó nyelvet üresen hagyjuk (pl: \"es\" kód esetén spanyolra fordítunk) akkor a fordító megpróbálja a szöveg alapján kitalálni azt.</p><p>A Yandex fordítóról további információkat - többek között az elérhető nyelvek listáját - a http://api.yandex.com/translate/ címen találhatsz.</p><p>Megjegyzés: a fordítás aszinkron módon, a háttérben történik. Amint elkészült, meghívódik a <code>ElkészültAFordítás</code> esemény.</p>
FirebaseDBHelpStringComponentPallette = Láthatatlan komponens, amellyel adatokat tárolhatunk egy webes Firebase adatbázisban. Ezen keresztül akár több alkalmazás is meg tud osztani adatokat egymással. Alapértelmezetten az adatok az App Inventor közös Firebase adatbázisában lesznek eltárolva, de a \"FirebaseURL\" mezőn keresztül akár a saját adatbázisodra is beállíthatod. További információt a <a target=\"_blank\" href=\"http://www.firebase.com\">Firebase.com</a> oldalon találhatsz.
proximitySensorComponentPallette = Közelség érzékelő
ProximitySensorHelpStringComponentPallette = Láthatatlan komponens, amely a tárgyak távolságát méri a készülék képernyőjétől. A legtöbb készülék az abszolút távolságot adja vissza centiméterben, de van amelyik csak azt állapítja meg hogy a tárgy a megadott maximális távolságon (<code>Maximális távolság</code> mező) belül vagy kívül van. Gyakran használják arra hogy megállapítsa a felhasználó a füléhez nyomva tartja-e a telefont.
cloudDBComponentPallette = Felhő adatbázis
CloudDBHelpStringComponentPallette = Láthatatlan komponens, amellyel adatokat tárolhatunk egy internetes adatbázis szerveren (amelyen a Redis adatbázis szoftver fut). Ezzel adatokat oszthatunk meg akár több alkalmazás között is. Alapértelmezés szerint az adatok az MIT szerverén lesznek eltárolva, de akár te is létrehozhatsz egy ilyen adatbázis szervert. Ha saját adatbázist használsz, akkor állítsd be a \"RedisSzerver\" és \"RedisPort\" mezőket a megfelelő értékekre.
MapHelpStringComponentPallette = <p>Egy kétdimenziós panel, amely egy térkép lapjait jeleníti meg és Jelölő elemeket helyezhetünk rá az egyes helyek azonosítására. A térkép lapjait és adatait az OpenStreetMap biztosítja.</p><p>A Képernyő Szerkesztőben három gomb látható egymás alatt a képernyőre helyezett térképen, amelyek segítségével annak a földrajzi határait állíthatjuk be.<ul><li>Az elsőn egy lakat látható: ha zárva van, és a térképet egérrel elhúzzuk, akkor a komponens helyzetét változtatjuk meg a többi képernyőn lévő vezérlőhöz képest. Ha nyitva van, akkor egérrel húzva a térkép földrajzi határait változtatjuk meg.</li><li>A második gombbal a térkép aktuális helyzetét (szélességi és hosszúsági fokait) menti el alapértelmezett pozíciónak (az alkalmazás betöltésekor ez a hely jelenik majd meg).</li><li>A harmadik gombbal az alapértelmezett helyzetet állíthatjuk vissza, ha elgörgettünk onnan (például azért hogy Jelölő elemeket helyezzünk el máshova).</li></ul></p>
circleComponentPallette = Kör
CircleHelpStringComponentPallette = <p>Egy kört lehet vele rajzolni a térkép megadott pontjára. A kör sugarát méterben kell megadni.</p>A kör közepén lévő négyzet húzásával tudjuk annak helyzetét megváltoztatni a térképen, a szélén lévő négyzettel pedig a kör sugarát állíthatjuk be.<p>
featureCollectionComponentPallette = Térkép objektum gyűjtemény
FeatureCollectionHelpStringComponentPallette = <p>Egy vagy több térkép objektumot (kört, poligont, stb.) tartalmazó gyűjtemény. Tartalmát GeoJSON formátumban kell megadni, ami lehet helyi erőforrás, vagy betölthető egy URL-en keresztül is.</p>
lineStringComponentPallette = Vonal
LineStringHelpStringComponentPallette = <p>Vonalak láncolata a térképen.</p><p>A vonalak végére kattintva húzhatjuk azt szét vagy össze, így állítva be a helyét és hosszát. A vonal közepére kattintva oszthatjuk azt ketté (ezután a két részt külön vonalként kezelhetjük).</p>
mapComponentPallette = Térkép
markerComponentPallette = Jelölő
MarkerHelpStringComponentPallette = <p>Egy ikon, amelyet egy térképen található hely azonosítására használhatunk. Beállíthatjuk a hozzá tartozó képet, a színét és a helyszín leírását is.</p>
polygonComponentPallette = Poligon
PolygonHelpStringComponentPallette = <p>Egy sokszöget rajzolhatunk vele a térkép felületére.</p><p>A sokszög csúcsaira kattintva húzhatjuk azokat szét vagy össze, így állítva be a helyüket és hosszukat. Az oldalak közepére kattintva oszthatjuk azokat ketté (ezután a két részt külön vonalként kezelhetjük).</p>
rectangleComponentPallette = Téglalap
RectangleHelpStringComponentPallette = <p>Egy téglalapot rajzol a térképre északi, déli, keleti és nyugati oldalakkal.</p><p>A téglalap méretét és helyét a sarkainak szét- vagy összehúzásával változtathatjuk meg.</p>
