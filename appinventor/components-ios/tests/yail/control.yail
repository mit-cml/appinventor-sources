#|
$Source $Yail
|#

(define-form appinventor.ai_ewpatton.ControlBlocksTest.Screen1 Screen1)
(require <com.google.youngandroid.runtime>)

(def (p$test_controls_if ) (let ( ($testResult #f)  ) (begin   (if #t (begin   (if #f (begin   (set-lexical! $testResult #f)) (begin   (if #t (begin   (if #f (begin   (set-lexical! $testResult #f)) (begin (if #t (begin   (if #f (begin   (set-lexical! $testResult #f)) (begin (if #f (begin   (set-lexical! $testResult #f)) (begin   (set-lexical! $testResult #t)))))) (begin   (set-lexical! $testResult #f)))))) (begin (if #f (begin   (set-lexical! $testResult #f)) (begin   (set-lexical! $testResult #f)))))))) (begin   (set-lexical! $testResult #f))) (lexical-value $testResult)) ))
(def (p$test_controls_forRange ) (let ( ($testResult 0)  ) (begin   (forrange $number (begin   (set-lexical! $testResult (call-yail-primitive + (*list-for-runtime* (lexical-value $testResult) (lexical-value $number) ) '(number number ) "+"))) 1 5 1) (call-yail-primitive yail-equal? (*list-for-runtime* (lexical-value $testResult) 15) '(any any) "=")) ))
(def (p$test_controls_forEach ) (let ( ($testResult 0)  ) (begin   (foreach $item (begin   (set-lexical! $testResult (call-yail-primitive + (*list-for-runtime* (lexical-value $testResult) (lexical-value $item) ) '(number number ) "+"))) (call-yail-primitive make-yail-list (*list-for-runtime* 1 2 3 4 5 ) '(any any any any any ) "make a list")) (call-yail-primitive yail-equal? (*list-for-runtime* (lexical-value $testResult) 15) '(any any) "=")) ))
(def (p$test_controls_for_each_dict ) (let ( ($testResult "")  ) (begin   (foreach $item (let ( ($key (call-yail-primitive yail-list-get-item (*list-for-runtime* (lexical-value $item) 1) '(list number) "select list item")) ($value (call-yail-primitive yail-list-get-item (*list-for-runtime* (lexical-value $item) 2) '(list number) "select list item")))  (set-lexical! $testResult (call-yail-primitive string-append (*list-for-runtime* (lexical-value $testResult) (lexical-value $key) (lexical-value $value) ) '(text text text ) "join"))) (call-yail-primitive make-yail-dictionary (*list-for-runtime* (call-yail-primitive make-dictionary-pair (*list-for-runtime* "key1" "value1" ) '(key any)  "make a pair") (call-yail-primitive make-dictionary-pair (*list-for-runtime* "key2" "value2" ) '(key any)  "make a pair") ) '(pair pair ) "make a dictionary")) (call-yail-primitive string=? (*list-for-runtime* (lexical-value $testResult) "key1value1key2value2") '(text text) "text=")) ))
(def (p$test_controls_while ) (let ( ($testResult 0) ($x 1)  ) (begin   (while (call-yail-primitive <= (*list-for-runtime* (lexical-value $x) 5) '(number number) "<=") (begin   (set-lexical! $testResult (call-yail-primitive + (*list-for-runtime* (lexical-value $testResult) (lexical-value $x) ) '(number number ) "+"))(set-lexical! $x (call-yail-primitive + (*list-for-runtime* 1 (lexical-value $x) ) '(number number ) "+")))) (call-yail-primitive yail-equal? (*list-for-runtime* (lexical-value $testResult) 15) '(any any) "=")) ))
(def (p$test_controls_choose ) (if #t (if #f #f #t) #f))
(def (p$test_controls_do_then_return ) (begin #f #t))
(def (p$test_controls_eval_but_ignore ) (begin   (begin #f "ignored") #t))
(def (p$test_controls_openAnotherScreen ) (begin   (call-yail-primitive open-another-screen (*list-for-runtime* "TestScreen") '(text) "open another screen") #t))
(def (p$test_controls_openAnotherScreenWithStartValue ) (begin   (call-yail-primitive open-another-screen-with-start-value (*list-for-runtime* "TestScreen" "test") '(text any) "open another screen with start value") #t))
(def (p$test_controls_getStartValue ) (begin   (begin (call-yail-primitive get-start-value (*list-for-runtime* ) '() "get start value") "ignored") #t))
(def (p$test_controls_closeScreen ) (begin   (call-yail-primitive close-screen (*list-for-runtime* ) '() "close screen") #t))
(def (p$test_controls_closeScreenWithValue ) (begin   (call-yail-primitive close-screen-with-value (*list-for-runtime* #t) '(any) "close screen with value") #t))
(def (p$test_controls_closeApplication ) (begin   (call-yail-primitive close-application (*list-for-runtime* ) '() "close application") #t))
(def (p$test_controls_getPlainStartText ) (begin   (begin (call-yail-primitive get-plain-start-text (*list-for-runtime* ) '() "get plain start text") "ignored") #t))
(def (p$test_controls_closeScreenWithPlainText ) (begin   (call-yail-primitive close-screen-with-plain-text (*list-for-runtime* "test") '(text) "close screen with plain text") #t))
(def (p$test_controls_break ) (call-yail-primitive yail-equal? (*list-for-runtime* 10 (let ( ($name 0) ($i 0)  ) (begin   (while (call-yail-primitive <= (*list-for-runtime* (lexical-value $i) 100) '(number number) "<=") (begin   (if (call-yail-primitive yail-equal? (*list-for-runtime* (lexical-value $i) 5) '(any any) "=") (begin   (*yail-break* #f)))(set-lexical! $name (call-yail-primitive + (*list-for-runtime* (lexical-value $i) (lexical-value $name) ) '(number number ) "+"))(set-lexical! $i (call-yail-primitive + (*list-for-runtime* (lexical-value $i) 1 ) '(number number ) "+")))) (lexical-value $name)) )) '(any any) "="))
;;; Screen1
#|
(do-after-form-creation (set-and-coerce-property! 'Screen1 'AppName "ControlBlocksTest" 'text)
 (set-and-coerce-property! 'Screen1 'Scrollable #t 'boolean)
 (set-and-coerce-property! 'Screen1 'Title "Screen1" 'text)
)

(init-runtime)
|#
